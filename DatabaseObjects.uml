<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="__6SB0IGaEeuPkZNKCcfHxw" name="EventSurfer">
    <eAnnotations xmi:id="__-6qMIGaEeuPkZNKCcfHxw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="__-7RQIGaEeuPkZNKCcfHxw" source="codegen">
        <details xmi:id="__-7RQYGaEeuPkZNKCcfHxw" key="codegenDirectory" value="/EventSurfer/src"/>
        <details xmi:id="_Ai0BcIGbEeuPkZNKCcfHxw" key="AssociatedSourceCode" value="/EventSurfer/src/main/java/app/EventSurfer.java;779141188/1;/EventSurfer/src/main/java/company/Area.java;4260761177/1;/EventSurfer/src/test/java/CompanyTest.java;495123959/1;/EventSurfer/src/main/java/company/Company.java;40149951/1;/EventSurfer/src/test/java/BusinessUnitTest.java;1575330786/1;/EventSurfer/src/main/java/event/Event.java;554190201/1;/EventSurfer/src/main/java/event/EventUpdate.java;1526006205/1;/EventSurfer/src/main/java/exceptions/DatabaseError.java;2084711506/1;/EventSurfer/src/test/java/AreaTest.java;288909790/1;/EventSurfer/src/main/java/types_states/UserType.java;1600553107/1;/EventSurfer/src/main/java/types_states/TypesStatesContainer.java;2497461376/1;/EventSurfer/src/main/java/gui/DefaultAdmin.java;2148405407/1;/EventSurfer/src/main/java/gui/Login.java;2124261750/1;/EventSurfer/src/main/java/gui/Selector.java;602714627/1;/EventSurfer/src/main/java/types_states/EventType.java;2800466403/1;/EventSurfer/src/main/java/gui/listener/VisibilityListener.java;96029768/1;/EventSurfer/src/main/java/types_states/EventState.java;4272369818/1;/EventSurfer/src/main/java/session/CurrentSession.java;1835005041/1;/EventSurfer/src/main/java/toolbox/ToolBox.java;1060718247/1;/EventSurfer/src/main/java/persistence/PersistenceManager.java;869631538/1;/EventSurfer/src/main/java/gui/UserUI.java;3957127362/1;/EventSurfer/src/main/java/gui/CompanyUI.java;2636042999/1;/EventSurfer/src/main/java/gui/BusinessUnitUI.java;1937631968/1;/EventSurfer/src/main/java/gui/AppWindow.java;444522834/1;/EventSurfer/src/main/java/company/User.java;1653721789/1;/EventSurfer/src/main/java/company/BusinessUnit.java;1174817908/1;/EventSurfer/src/test/java/EventStateTest.java;2414476438/1;/EventSurfer/src/test/java/EventTest.java;1261347808/1;/EventSurfer/src/test/java/EventTypeTest.java;1668843461/1;/EventSurfer/src/test/java/EventUpdateTest.java;2351023930/1;/EventSurfer/src/test/java/PersistenceManagerTest.java;3683064243/1;/EventSurfer/src/test/java/UserTest.java;3093030794/1;/EventSurfer/src/test/java/UserTypeTest.java;213544911/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_AQUjQIGbEeuPkZNKCcfHxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_AQUjQYGbEeuPkZNKCcfHxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_AQUjQoGbEeuPkZNKCcfHxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_AQUjQ4GbEeuPkZNKCcfHxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_AQUjRIGbEeuPkZNKCcfHxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_AQUjRYGbEeuPkZNKCcfHxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_AQUjRoGbEeuPkZNKCcfHxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_AQUjR4GbEeuPkZNKCcfHxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_AQUjSIGbEeuPkZNKCcfHxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_API3gIGbEeuPkZNKCcfHxw" name="main">
      <packagedElement xmi:type="uml:Package" xmi:id="_API3gYGbEeuPkZNKCcfHxw" name="java">
        <packagedElement xmi:type="uml:Package" xmi:id="_API3hYGbEeuPkZNKCcfHxw" name="company">
          <packagedElement xmi:type="uml:Class" xmi:id="_AQVKWYGbEeuPkZNKCcfHxw" name="Area">
            <ownedAttribute xmi:id="_AZOAkoGbEeuPkZNKCcfHxw" name="TABLE_NAME" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZOAk4GbEeuPkZNKCcfHxw" value="&quot;area&quot;"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZOAlIGbEeuPkZNKCcfHxw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZOAlYGbEeuPkZNKCcfHxw" name="area">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZOnoIGbEeuPkZNKCcfHxw" name="descripcion">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnCJoGbEeuPkZNKCcfHxw" name="Area" specification="_AQVxYIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZnCJ4GbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnCKIGbEeuPkZNKCcfHxw" name="area">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnCKYGbEeuPkZNKCcfHxw" name="descripcion">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnCKoGbEeuPkZNKCcfHxw" type="_AQVKWYGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>//this.connection = connection;&#xD;
		this.id = id;&#xD;
		this.area = area;&#xD;
		this.descripcion = descripcion;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnCK4GbEeuPkZNKCcfHxw" name="saveAreaToDB" specification="_AYtqQIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZnCLIGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnCLYGbEeuPkZNKCcfHxw" name="area" type="_AQVKWYGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnCLoGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		String sql = &quot;INSERT INTO area (area, descripcion) &quot;&#xD;
				+ &quot;VALUES (?, ?);&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);		&#xD;
			pstm.setString(1, area.getArea());&#xD;
			pstm.setString(2, area.getDescripcion());&#xD;
			pstm.executeUpdate();&#xD;
			return true;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		} finally {&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnCL4GbEeuPkZNKCcfHxw" name="saveBUnitAreaToDB" specification="_AYtqRIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZnCMIGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnCMYGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnCMoGbEeuPkZNKCcfHxw" name="area" type="_AQVKWYGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnCM4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		String sql = &quot;INSERT INTO b_unit_area (b_unit_id, area_id) &quot;&#xD;
				+ &quot;VALUES (?, ?);&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setInt(1, bUnit.getId());&#xD;
			pstm.setInt(2, area.getId());&#xD;
			pstm.executeUpdate();&#xD;
			return true;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		} finally {&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnCNIGbEeuPkZNKCcfHxw" name="addNewArea" specification="_AYuRUIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZnCNYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnCNoGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnCN4GbEeuPkZNKCcfHxw" name="area" type="_AQVKWYGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnCOIGbEeuPkZNKCcfHxw" type="_AQVKWYGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>if (saveAreaToDB(conn, area)) {&#xD;
			int id = PersistenceManager.getLastElementIdFromDB(conn, TABLE_NAME);&#xD;
			area.setId(id);&#xD;
			if (saveBUnitAreaToDB (conn, bUnit, area)) {&#xD;
				return area;&#xD;
			}&#xD;
		}	&#xD;
		return null;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnCOYGbEeuPkZNKCcfHxw" name="updateAreaToDB" specification="_AYuRVYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZnCOoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnCO4GbEeuPkZNKCcfHxw" name="area" type="_AQVKWYGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnCPIGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		String sql = &quot;UPDATE area &quot;&#xD;
				+ &quot;SET &quot;&#xD;
				+ &quot;area = ?,&quot;&#xD;
				+ &quot;descripcion = ? &quot;&#xD;
				+ &quot;WHERE id = ?;&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setString(1, area.getArea());&#xD;
			pstm.setString(2, area.getDescripcion());&#xD;
			pstm.setInt(3, area.getId());&#xD;
			pstm.executeUpdate();&#xD;
			return true;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		} finally {&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnCPYGbEeuPkZNKCcfHxw" name="getAreasFromDB" specification="_AYuRWYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZnCPoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnCP4GbEeuPkZNKCcfHxw" name="bu" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnCQIGbEeuPkZNKCcfHxw" type="_AQVKWYGbEeuPkZNKCcfHxw" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZnCQYGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;Area> areaList = new ArrayList&lt;Area>();&#xD;
		Area area = null;&#xD;
		PreparedStatement pstm = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT a.id, a.area, a.descripcion &quot;&#xD;
				+ &quot;FROM area a, b_unit_area bua &quot;&#xD;
				+ &quot;WHERE bua.b_unit_id = ? &quot;&#xD;
				+ &quot;AND bua.area_id = a.id;&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setInt(1, bu.getId());&#xD;
			results = pstm.executeQuery();&#xD;
			while (results.next()) {&#xD;
				area = new Area();&#xD;
				area.setId(results.getInt(1));&#xD;
				area.setArea(results.getString(2));&#xD;
				area.setDescripcion(results.getString(3));&#xD;
				areaList.add(area);				&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return null;&#xD;
		} finally {&#xD;
			PersistenceManager.closeResultSet(results);&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
		return areaList;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnCQoGbEeuPkZNKCcfHxw" name="getAreaByName" specification="_AYDi8YGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZnCQ4GbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnCRIGbEeuPkZNKCcfHxw" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnCRYGbEeuPkZNKCcfHxw" type="_AQVKWYGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>List&lt;Area> areaList = bUnit.getAreas();&#xD;
		for (Area area: areaList) {&#xD;
			if (area.getArea() == name) {&#xD;
				return area;&#xD;
			}&#xD;
		}	&#xD;
		return null;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnCRoGbEeuPkZNKCcfHxw" name="getAreaById" specification="_AYDi9YGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZnCR4GbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnCSIGbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnCSYGbEeuPkZNKCcfHxw" type="_AQVKWYGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>List&lt;Area> areaList = bUnit.getAreas();&#xD;
		for (Area area: areaList) {&#xD;
			if (area.getId() == id) {&#xD;
				return area;&#xD;
			}&#xD;
		}	&#xD;
		return null;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQVxYIGbEeuPkZNKCcfHxw" name="Area" method="_AZnCJoGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AQVxZIGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AQVxZYGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AQVxYYGbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQVxYoGbEeuPkZNKCcfHxw" name="area">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQVxY4GbEeuPkZNKCcfHxw" name="descripcion">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQVxZoGbEeuPkZNKCcfHxw" type="_AQVKWYGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AQVxZ4GbEeuPkZNKCcfHxw" name="Area">
              <eAnnotations xmi:id="_AQVxaIGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AQVxaYGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AQVxa4GbEeuPkZNKCcfHxw" type="_AQVKWYGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYDi8YGbEeuPkZNKCcfHxw" name="getAreaByName" method="_AZnCQoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYDi8oGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYDi84GbEeuPkZNKCcfHxw" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYDi9IGbEeuPkZNKCcfHxw" type="_AQVKWYGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYDi9YGbEeuPkZNKCcfHxw" name="getAreaById" method="_AZnCRoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYDi9oGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYDi94GbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYDi-IGbEeuPkZNKCcfHxw" type="_AQVKWYGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYtqQIGbEeuPkZNKCcfHxw" name="saveAreaToDB" method="_AZnCK4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYtqQYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYtqQoGbEeuPkZNKCcfHxw" name="area" type="_AQVKWYGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYtqQ4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AYtqRIGbEeuPkZNKCcfHxw" name="saveBUnitAreaToDB" method="_AZnCL4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYtqRYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYtqRoGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYtqR4GbEeuPkZNKCcfHxw" name="area" type="_AQVKWYGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYtqSIGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AYuRUIGbEeuPkZNKCcfHxw" name="addNewArea" method="_AZnCNIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYuRUYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYuRUoGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYuRU4GbEeuPkZNKCcfHxw" name="area" type="_AQVKWYGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYuRVIGbEeuPkZNKCcfHxw" type="_AQVKWYGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYuRVYGbEeuPkZNKCcfHxw" name="updateAreaToDB" method="_AZnCOYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYuRVoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYuRV4GbEeuPkZNKCcfHxw" name="area" type="_AQVKWYGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYuRWIGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AYuRWYGbEeuPkZNKCcfHxw" name="getAreasFromDB" method="_AZnCPYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYuRWoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYuRW4GbEeuPkZNKCcfHxw" name="bu" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYuRXIGbEeuPkZNKCcfHxw" type="_AQVKWYGbEeuPkZNKCcfHxw" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AYuRXYGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_AQYNqIGbEeuPkZNKCcfHxw" name="Company">
            <ownedAttribute xmi:id="_AZOno4GbEeuPkZNKCcfHxw" name="TABLE_NAME" visibility="public" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZOnpIGbEeuPkZNKCcfHxw" value="&quot;company&quot;"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZOnpYGbEeuPkZNKCcfHxw" name="id" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZOnpoGbEeuPkZNKCcfHxw" name="nombre" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZOnp4GbEeuPkZNKCcfHxw" name="direccion" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZOnqIGbEeuPkZNKCcfHxw" name="provincia" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZOnqYGbEeuPkZNKCcfHxw" name="estado" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZOnqoGbEeuPkZNKCcfHxw" name="cpostal" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZOnq4GbEeuPkZNKCcfHxw" name="telefono" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZPOsIGbEeuPkZNKCcfHxw" name="mail" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZPOsYGbEeuPkZNKCcfHxw" name="web" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZPOsoGbEeuPkZNKCcfHxw" name="businessUnits" visibility="private" type="_ARExMIGbEeuPkZNKCcfHxw" isOrdered="true" aggregation="composite" association="_AZ-OhoGbEeuPkZNKCcfHxw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3O3asIJnEeuLTI0MOKBvew"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZPOs4GbEeuPkZNKCcfHxw" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZPOtIGbEeuPkZNKCcfHxw" value="new ArrayList&lt;BusinessUnit>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_fW0yFIJoEeuLTI0MOKBvew" name="businessUnit" type="_ARExMIGbEeuPkZNKCcfHxw" aggregation="composite" association="_fW0yEIJoEeuLTI0MOKBvew">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fW0yFYJoEeuLTI0MOKBvew"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fW1ZIIJoEeuLTI0MOKBvew" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpM4GbEeuPkZNKCcfHxw" name="Company" specification="_AQY0sIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZnpNIGbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnpNYGbEeuPkZNKCcfHxw" name="nombre">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnpNoGbEeuPkZNKCcfHxw" name="direccion">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnpN4GbEeuPkZNKCcfHxw" name="provincia">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnpOIGbEeuPkZNKCcfHxw" name="estado">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnpOYGbEeuPkZNKCcfHxw" name="cpostal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnpOoGbEeuPkZNKCcfHxw" name="telefono">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnpO4GbEeuPkZNKCcfHxw" name="mail">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnpPIGbEeuPkZNKCcfHxw" name="web">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnpPYGbEeuPkZNKCcfHxw" type="_AQYNqIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>this.id = id;&#xD;
		this.nombre = nombre;&#xD;
		this.direccion = direccion;&#xD;
		this.provincia = provincia;&#xD;
		this.estado = estado;&#xD;
		this.cpostal = cpostal;&#xD;
		this.telefono = telefono;&#xD;
		this.mail = mail;&#xD;
		this.web = web;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpPoGbEeuPkZNKCcfHxw" name="updateCompanyToDB" specification="_AYu4YoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZnpP4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnpQIGbEeuPkZNKCcfHxw" name="company" type="_AQYNqIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnpQYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		String sql = &quot;UPDATE company &quot;&#xD;
				+ &quot;SET &quot;&#xD;
				+ &quot;nombre = ?, &quot;&#xD;
				+ &quot;direccion = ?, &quot;&#xD;
				+ &quot;provincia = ?, &quot;&#xD;
				+ &quot;estado = ?, &quot;&#xD;
				+ &quot;cpostal = ?, &quot;&#xD;
				+ &quot;telefono = ?, &quot;&#xD;
				+ &quot;mail = ?, &quot;&#xD;
				+ &quot;web = ? &quot;&#xD;
				+ &quot;WHERE id = ?;&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setString(1, company.getNombre());&#xD;
			pstm.setString(2, company.getDireccion());&#xD;
			pstm.setString(3, company.getProvincia());&#xD;
			pstm.setString(4, company.getEstado());&#xD;
			pstm.setString(5, company.getCpostal());&#xD;
			pstm.setString(6, company.getTelefono());&#xD;
			pstm.setString(7, company.getMail());&#xD;
			pstm.setString(8, company.getWeb());&#xD;
			pstm.setInt(9, company.getId());&#xD;
			pstm.executeUpdate();&#xD;
			return true;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		} finally {&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpQoGbEeuPkZNKCcfHxw" name="updateCompany" specification="_AYvfcIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZnpQ4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnpRIGbEeuPkZNKCcfHxw" name="company" type="_AQYNqIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnpRYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (updateCompanyToDB(conn, company)) {&#xD;
			this.nombre = company.getNombre();&#xD;
			this.direccion = company.getDireccion();&#xD;
			this.provincia = company.getProvincia();&#xD;
			this.estado = company.getEstado();&#xD;
			this.cpostal = company.getCpostal();&#xD;
			this.telefono = company.getTelefono();&#xD;
			this.mail = company.getMail();&#xD;
			this.web = company.getWeb();&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpRoGbEeuPkZNKCcfHxw" name="getCompanyFromDB" specification="_AYvfdIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZnpR4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnpSIGbEeuPkZNKCcfHxw" type="_AQYNqIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>Statement stm = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT * FROM company;&quot;;&#xD;
		try {&#xD;
			stm = conn.createStatement();&#xD;
			results = stm.executeQuery(sql);&#xD;
			Company company = new Company();&#xD;
			while (results.next()) {&#xD;
				company.setId(results.getInt(1));&#xD;
				company.setNombre(results.getString(2));&#xD;
				company.setDireccion(results.getString(3));&#xD;
				company.setProvincia(results.getString(4));&#xD;
				company.setEstado(results.getString(5));&#xD;
				company.setCpostal(results.getString(6));&#xD;
				company.setTelefono(results.getString(7));&#xD;
				company.setMail(results.getString(8));&#xD;
				company.setWeb(results.getString(9));&#xD;
			}&#xD;
			return company;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return null;&#xD;
		} finally {&#xD;
			PersistenceManager.closeStatement(stm);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpSYGbEeuPkZNKCcfHxw" name="refresh" specification="_AYvfd4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZnpSoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnpS4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>Statement stm = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT nombre, direccion, provincia, estado, &quot;&#xD;
				+ &quot;cpostal, telefono, mail, web &quot;&#xD;
				+ &quot;FROM company;&quot;;&#xD;
		try {&#xD;
			stm = conn.createStatement();&#xD;
			results = stm.executeQuery(sql);&#xD;
			while (results.next()) {&#xD;
				this.nombre = results.getString(1);&#xD;
				this.direccion = results.getString(2);&#xD;
				this.provincia = results.getString(3);&#xD;
				this.estado = results.getString(4);&#xD;
				this.cpostal = results.getString(5);&#xD;
				this.telefono = results.getString(6);&#xD;
				this.mail = results.getString(7);&#xD;
				this.web = results.getString(8);&#xD;
			}&#xD;
			return true;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		} finally {&#xD;
			PersistenceManager.closeStatement(stm);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpTIGbEeuPkZNKCcfHxw" name="addBusinessUnit" specification="_AYvfeoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZnpTYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnpToGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>BusinessUnit completeBUnit = new BusinessUnit().addNewBusinessUnit(conn, bUnit);&#xD;
		if (completeBUnit != null) {&#xD;
			businessUnits.add(completeBUnit);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQY0sIGbEeuPkZNKCcfHxw" name="Company" method="_AZnpM4GbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AQY0uoGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AQY0u4GbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AQY0sYGbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQY0soGbEeuPkZNKCcfHxw" name="nombre">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQY0s4GbEeuPkZNKCcfHxw" name="direccion">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQY0tIGbEeuPkZNKCcfHxw" name="provincia">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQY0tYGbEeuPkZNKCcfHxw" name="estado">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQY0toGbEeuPkZNKCcfHxw" name="cpostal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQY0t4GbEeuPkZNKCcfHxw" name="telefono">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQY0uIGbEeuPkZNKCcfHxw" name="mail">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQY0uYGbEeuPkZNKCcfHxw" name="web">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQY0vIGbEeuPkZNKCcfHxw" type="_AQYNqIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AQY0vYGbEeuPkZNKCcfHxw" name="Company">
              <eAnnotations xmi:id="_AQY0voGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AQY0v4GbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AQY0wYGbEeuPkZNKCcfHxw" type="_AQYNqIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYu4YoGbEeuPkZNKCcfHxw" name="updateCompanyToDB" method="_AZnpPoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYu4Y4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYu4ZIGbEeuPkZNKCcfHxw" name="company" type="_AQYNqIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYu4ZYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AYvfcIGbEeuPkZNKCcfHxw" name="updateCompany" method="_AZnpQoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYvfcYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYvfcoGbEeuPkZNKCcfHxw" name="company" type="_AQYNqIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYvfc4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AYvfdIGbEeuPkZNKCcfHxw" name="getCompanyFromDB" method="_AZnpRoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYvfdYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYvfdoGbEeuPkZNKCcfHxw" type="_AQYNqIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYvfd4GbEeuPkZNKCcfHxw" name="refresh" method="_AZnpSYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYvfeIGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYvfeYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AYvfeoGbEeuPkZNKCcfHxw" name="addBusinessUnit" method="_AZnpTIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYvfe4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYvffIGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_ARBt4IGbEeuPkZNKCcfHxw" name="User">
            <ownedAttribute xmi:id="_AZhimIGbEeuPkZNKCcfHxw" name="TABLE_NAME" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZhimYGbEeuPkZNKCcfHxw" value="&quot;user&quot;"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZiJoIGbEeuPkZNKCcfHxw" name="id" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZiJoYGbEeuPkZNKCcfHxw" name="bUnit" visibility="private" type="_ARExMIGbEeuPkZNKCcfHxw" association="_AaM4AYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZiJo4GbEeuPkZNKCcfHxw" name="userType" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZiJpIGbEeuPkZNKCcfHxw" name="userAlias" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZiJpYGbEeuPkZNKCcfHxw" name="nombre" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZiJpoGbEeuPkZNKCcfHxw" name="apellido" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZiJp4GbEeuPkZNKCcfHxw" name="password" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZiJqIGbEeuPkZNKCcfHxw" name="activo" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZu-AoGbEeuPkZNKCcfHxw" name="User" specification="_AYiEE4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZu-A4GbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZu-BIGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZu-BYGbEeuPkZNKCcfHxw" name="userType">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZu-BoGbEeuPkZNKCcfHxw" name="userAlias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZu-B4GbEeuPkZNKCcfHxw" name="nombre">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZu-CIGbEeuPkZNKCcfHxw" name="apellido">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZu-CYGbEeuPkZNKCcfHxw" name="password">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZu-CoGbEeuPkZNKCcfHxw" name="activo">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZu-C4GbEeuPkZNKCcfHxw" type="_ARBt4IGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>//this.connection = connection;&#xD;
		this.id = id;&#xD;
		this.bUnit = bUnit;&#xD;
		this.userType = userType;&#xD;
		this.userAlias = userAlias;&#xD;
		this.nombre = nombre;&#xD;
		this.apellido = apellido;&#xD;
		this.password = password;&#xD;
		this.activo = activo;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZu-DIGbEeuPkZNKCcfHxw" name="saveUserToDB" specification="_AZGEwIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZu-DYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZu-DoGbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZu-D4GbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		String sql = &quot;INSERT INTO \&quot;user\&quot; (b_unit_id, user_type_id, user_alias, nombre, &quot;&#xD;
				+ &quot;apellido, user_password, activo) &quot;&#xD;
				+ &quot;VALUES (?, ?, ?, ?, ?, ?, ?);&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setInt(1, user.getbUnit().getId());&#xD;
			pstm.setInt(2, TypesStatesContainer.getuType().getUserTypeId(user.getUserType()));&#xD;
			pstm.setString(3, user.getUserAlias());&#xD;
			pstm.setString(4, user.getNombre());&#xD;
			pstm.setString(5, user.getApellido());&#xD;
			pstm.setString(6, user.getPassword());&#xD;
			pstm.setBoolean(7, user.isActivo());&#xD;
			pstm.executeUpdate();&#xD;
			return true;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		} finally {&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZu-EIGbEeuPkZNKCcfHxw" name="addNewUser" specification="_AZGExIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZu-EYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZu-EoGbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZu-E4GbEeuPkZNKCcfHxw" type="_ARBt4IGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>if (saveUserToDB(conn, user)) {&#xD;
			int id = PersistenceManager.getLastElementIdFromDB(conn, TABLE_NAME);&#xD;
			user.setId(id);&#xD;
			return user;&#xD;
		}&#xD;
		return null;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZu-FIGbEeuPkZNKCcfHxw" name="updateUserToDB" specification="_AZGEyIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZu-FYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZu-FoGbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZu-F4GbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		String sql = &quot;UPDATE \&quot;user\&quot; &quot;&#xD;
				+ &quot;SET &quot;&#xD;
				+ &quot;b_unit_id = ?, &quot;&#xD;
				+ &quot;user_type_id = ?, &quot;&#xD;
				+ &quot;user_alias = ?, &quot;&#xD;
				+ &quot;nombre = ?, &quot;&#xD;
				+ &quot;apellido = ?, &quot;&#xD;
				+ &quot;user_password = ?,&quot;&#xD;
				+ &quot;activo = ? &quot;&#xD;
				+ &quot;WHERE id = ?;&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setInt(1, user.getbUnit().getId());&#xD;
			pstm.setInt(2, TypesStatesContainer.getuType().getUserTypeId(user.getUserType()));&#xD;
			pstm.setString(3, user.getUserAlias());&#xD;
			pstm.setString(4, user.getNombre());&#xD;
			pstm.setString(5, user.getApellido());&#xD;
			pstm.setString(6, user.getPassword());&#xD;
			pstm.setBoolean(7, user.isActivo());&#xD;
			pstm.setInt(8, user.getId());&#xD;
			pstm.executeUpdate();&#xD;
			return true;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		} finally {&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZu-GIGbEeuPkZNKCcfHxw" name="getDefaultAdminUser" specification="_AZGEzIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZu-GYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZu-GoGbEeuPkZNKCcfHxw" type="_ARBt4IGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>Statement stm = null;&#xD;
		ResultSet results = null;&#xD;
		User user = new User();&#xD;
		String sql = &quot;SELECT user_alias, nombre, apellido, user_password &quot;&#xD;
				+ &quot;FROM \&quot;user\&quot; &quot;&#xD;
				+ &quot;WHERE id = 1;&quot;;&#xD;
		try {&#xD;
			stm = conn.createStatement();&#xD;
			results = PersistenceManager.getResultSet(stm, sql);&#xD;
			while (results.next()) {&#xD;
				user.setUserAlias(results.getString(1));&#xD;
				user.setNombre(results.getString(2));&#xD;
				user.setApellido(results.getString(3));&#xD;
				user.setPassword(results.getString(4));&#xD;
			}&#xD;
			return user;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return null;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZu-G4GbEeuPkZNKCcfHxw" name="updateDefaultAdminUserToDb" specification="_AZGr0IGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZu-HIGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZu-HYGbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZu-HoGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		String sql = &quot;UPDATE \&quot;user\&quot; &quot;&#xD;
				+ &quot;SET &quot;&#xD;
				+ &quot;user_alias = ?, &quot;&#xD;
				+ &quot;nombre = ?, &quot;&#xD;
				+ &quot;apellido = ?, &quot;&#xD;
				+ &quot;user_password = ? &quot;&#xD;
				+ &quot;WHERE id = ?;&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setString(1, user.getUserAlias());&#xD;
			pstm.setString(2, user.getNombre());&#xD;
			pstm.setString(3, user.getApellido());&#xD;
			pstm.setString(4, user.getPassword());&#xD;
			pstm.setInt(5, user.getId());&#xD;
			pstm.executeUpdate();&#xD;
			return true;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return false;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZu-H4GbEeuPkZNKCcfHxw" name="getUsersFromDB" specification="_AZGr1IGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZu-IIGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZu-IYGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZu-IoGbEeuPkZNKCcfHxw" type="_ARBt4IGbEeuPkZNKCcfHxw" isOrdered="true" direction="return">
                <name xsi:nil="true"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZu-I4GbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;User> userList = new ArrayList&lt;User>();&#xD;
		User user = null;&#xD;
		PreparedStatement pstm = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT id, user_type_id, user_alias, nombre, &quot;&#xD;
				+ &quot;apellido, user_password, activo &quot;&#xD;
				+ &quot;FROM \&quot;user\&quot; &quot;&#xD;
				+ &quot;WHERE b_unit_id = ?;&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setInt(1, bUnit.getId());&#xD;
			results = pstm.executeQuery();&#xD;
			while (results.next()) {&#xD;
				user = new User();&#xD;
				user.setId(results.getInt(1));&#xD;
				user.setbUnit(bUnit);&#xD;
				user.setUserType(TypesStatesContainer.getuType().getUserType(results.getInt(2)));&#xD;
				user.setUserAlias(results.getString(3));&#xD;
				user.setNombre(results.getString(4));&#xD;
				user.setApellido(results.getString(5));&#xD;
				user.setPassword(results.getString(6));&#xD;
				user.setActivo(results.getBoolean(7));&#xD;
				userList.add(user);&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return null;&#xD;
		} finally {&#xD;
			PersistenceManager.closeResultSet(results);&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
		return userList;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZu-JIGbEeuPkZNKCcfHxw" name="setNoActiveUsersToDb" specification="_AZGr2YGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZu-JYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZu-JoGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZu-J4GbEeuPkZNKCcfHxw" type="_ARBt4IGbEeuPkZNKCcfHxw" isOrdered="true" direction="return">
                <name xsi:nil="true"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZu-KIGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;User> userList = new User().getUsersFromDB(conn, bUnit);&#xD;
		&#xD;
		//Debug&#xD;
		System.out.println(&quot;userList.size(): &quot; + userList.size());&#xD;
		&#xD;
		List&lt;User> updatedUserList = new ArrayList&lt;User>();&#xD;
		if (userList.size() > 0) {&#xD;
			for (User user : userList) {&#xD;
				&#xD;
				//Debug&#xD;
				System.out.println(&quot;User: &quot; + user.getUserAlias());&#xD;
				&#xD;
				user.setActivo(false);&#xD;
				updatedUserList.add(user);&#xD;
				&#xD;
				//Debug&#xD;
				System.out.println(&quot;Setting user inactive...&quot;);&#xD;
&#xD;
			} &#xD;
		} &#xD;
&#xD;
		for (User user : updatedUserList) {&#xD;
			if (!new User().updateUserToDB(conn, user)) {&#xD;
				return null;&#xD;
			}&#xD;
			&#xD;
			//Debug&#xD;
			System.out.println(&quot;Updating user inactive to Db...&quot;);&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return updatedUserList;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZvlAIGbEeuPkZNKCcfHxw" name="checkDefaultAdminPassword" specification="_AZGr3oGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZvlAYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZvlAoGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Statement stm = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT user_password &quot;&#xD;
				+ &quot;FROM \&quot;user\&quot; &quot;&#xD;
				+ &quot;WHERE id = 1;&quot;;&#xD;
		try {&#xD;
			stm = conn.createStatement();&#xD;
			results = PersistenceManager.getResultSet(stm, sql);&#xD;
			while(results.next()) {&#xD;
				String password = results.getString(1);&#xD;
				if (password.equals(&quot;surferpass&quot;)) {&#xD;
					return 0;&#xD;
				} else {&#xD;
					return 1;&#xD;
				}&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e.printStackTrace();&#xD;
		} finally {&#xD;
			PersistenceManager.closeResultSet(results);&#xD;
			PersistenceManager.closeStatement(stm);&#xD;
		}&#xD;
		return -1;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZvlA4GbEeuPkZNKCcfHxw" name="getBunitIdFromUser" specification="_AZGr4YGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZvlBIGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZvlBYGbEeuPkZNKCcfHxw" name="alias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlBoGbEeuPkZNKCcfHxw" name="password">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlB4GbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT b_unit_id &quot;&#xD;
				+ &quot;	FROM \&quot;user\&quot; &quot;&#xD;
				+ &quot;WHERE user_alias = ? &quot;&#xD;
				+ &quot;AND user_password = ?;&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setString(1,  alias);&#xD;
			pstm.setString(2, new User().passwordHash(password));&#xD;
			results = PersistenceManager.getResultSet(pstm, sql);&#xD;
			if (results.next()) {&#xD;
				return results.getInt(1);&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e.printStackTrace();&#xD;
		} finally {&#xD;
			PersistenceManager.closeResultSet(results);&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
		return 0;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZvlCIGbEeuPkZNKCcfHxw" name="getUserId" specification="_AZHS4IGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZvlCYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZvlCoGbEeuPkZNKCcfHxw" name="alias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlC4GbEeuPkZNKCcfHxw" name="password">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlDIGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT id &quot;&#xD;
				+ &quot;	FROM \&quot;user\&quot; &quot;&#xD;
				+ &quot;WHERE user_alias = ? &quot;&#xD;
				+ &quot;AND user_password = ?;&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setString(1,  alias);&#xD;
			pstm.setString(2, new User().passwordHash(password));&#xD;
			results = PersistenceManager.getResultSet(pstm, sql);&#xD;
			if (results.next()) {&#xD;
				return results.getInt(1);&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e.printStackTrace();&#xD;
		} finally {&#xD;
			PersistenceManager.closeResultSet(results);&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
		return 0;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZvlDYGbEeuPkZNKCcfHxw" name="getUserByAlias" specification="_AYirIIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZvlDoGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZvlD4GbEeuPkZNKCcfHxw" name="alias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlEIGbEeuPkZNKCcfHxw" type="_ARBt4IGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;User> userList = bUnit.getUsers();&#xD;
		for (User user: userList) {&#xD;
			if (user.getUserAlias().equals(alias)) {&#xD;
				return user;&#xD;
			}&#xD;
		}	&#xD;
		return null;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZvlEYGbEeuPkZNKCcfHxw" name="getUserById" specification="_AYirJIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZvlEoGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZvlE4GbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlFIGbEeuPkZNKCcfHxw" type="_ARBt4IGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;User> userList = bUnit.getUsers();&#xD;
		for (User user: userList) {&#xD;
			if (user.getId() == id) {&#xD;
				return user;&#xD;
			}&#xD;
		}	&#xD;
		return null;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZvlFYGbEeuPkZNKCcfHxw" name="checkUserPassword" specification="_AYirKIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZvlFoGbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZvlF4GbEeuPkZNKCcfHxw" name="input">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlGIGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (user.getPassword().equals(passwordHash(input))) {&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZvlGYGbEeuPkZNKCcfHxw" name="isAValidPassword" specification="_ARC8AIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZvlGoGbEeuPkZNKCcfHxw" name="password">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlG4GbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>String regex = &quot;^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[*!$%&amp;@#^])(?=\\S+$).{8,25}$&quot;;&#xD;
		Pattern pattern = Pattern.compile(regex);&#xD;
		Matcher matcher = pattern.matcher(password);&#xD;
		return matcher.matches();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZvlHIGbEeuPkZNKCcfHxw" name="passwordHash" specification="_ARC8A4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZvlHYGbEeuPkZNKCcfHxw" name="input">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlHoGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>String hashedInput = &quot;&quot;;&#xD;
		int size = input.length();&#xD;
		if (size == 50) {&#xD;
			return input;&#xD;
		} else {&#xD;
			hashedInput = getHash(input);&#xD;
		}&#xD;
		return passwordHash(hashedInput + getHash(hashedInput));&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZvlH4GbEeuPkZNKCcfHxw" name="getHash" specification="_ARC8BoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZvlIIGbEeuPkZNKCcfHxw" name="input">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlIYGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>String hashedInput = &quot;&quot;;&#xD;
		int size = input.length();&#xD;
		String charList = &quot;AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz&quot;&#xD;
				+ &quot;0123456789&quot;&#xD;
				+ &quot;*!$%&amp;@#^&quot;;&#xD;
		int factor = 0;&#xD;
		if (size &lt;=10) {&#xD;
			factor = 7;&#xD;
		} else if (size > 10 &amp;&amp; size &lt;= 15) {&#xD;
			factor = 12;&#xD;
		} else if (size > 15 &amp;&amp; size &lt;= 20) { &#xD;
			factor = 25;&#xD;
		} else if (size > 20 &amp;&amp; size &lt;= 30) {&#xD;
			factor = 37;&#xD;
		} else if (size > 30 &amp;&amp; size &lt;= 40) {&#xD;
			factor = 44;&#xD;
		} else {&#xD;
			factor = 3;&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; input.length(); i++) {&#xD;
			char inChar = input.charAt(i);&#xD;
			int charIndex = charList.indexOf(inChar);&#xD;
			charIndex = charIndex + factor;&#xD;
			if (charIndex == charList.length()) {&#xD;
				charIndex = 0;&#xD;
			} else if (charIndex > charList.length()) {&#xD;
				charIndex = charIndex - charList.length() - 1;&#xD;
			}&#xD;
			hashedInput = hashedInput + charList.charAt(charIndex);&#xD;
		}&#xD;
		if (hashedInput.length() > 25) {&#xD;
			hashedInput = hashedInput.substring(0, 25);&#xD;
		}&#xD;
		return hashedInput;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZvlIoGbEeuPkZNKCcfHxw" name="getbUnit" specification="_ARDjEIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZvlI4GbEeuPkZNKCcfHxw" type="_ARExMIGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>return bUnit;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZvlJIGbEeuPkZNKCcfHxw" name="setbUnit" specification="_AYirMIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZvlJYGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>this.bUnit = bUnit;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_ARCU8IGbEeuPkZNKCcfHxw" name="User">
              <eAnnotations xmi:id="_ARCU8YGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_ARCU8oGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_ARCU9IGbEeuPkZNKCcfHxw" type="_ARBt4IGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ARC8AIGbEeuPkZNKCcfHxw" name="isAValidPassword" method="_AZvlGYGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_TBXmbYJqEeuLTI0MOKBvew">
                <body>Comprueba que la contraseña introducida cumple las restricciones para ser correcta&#xD;
	 * Caracteres [a-z], [A-Z], [0-9], [*!$%&amp;@#^]&#xD;
	 * @param password contraseña a validar&#xD;
	 * @return true si la contraseña es correcta, false si no lo es</body>
              </ownedComment>
              <ownedParameter xmi:id="_ARC8AYGbEeuPkZNKCcfHxw" name="password">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_ARC8AoGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_ARC8A4GbEeuPkZNKCcfHxw" name="passwordHash" method="_AZvlHIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_TBXmboJqEeuLTI0MOKBvew">
                <body>Genera un hash de 50 caracteres a partir de un String&#xD;
	 * @param input String de entrada&#xD;
	 * @return hash de 50 caracteres</body>
              </ownedComment>
              <ownedParameter xmi:id="_ARC8BIGbEeuPkZNKCcfHxw" name="input">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_ARC8BYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_ARC8BoGbEeuPkZNKCcfHxw" name="getHash" method="_AZvlH4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_TBXmb4JqEeuLTI0MOKBvew">
                <body>Genera un hash de igual longitud al String pasado por parámetro&#xD;
	 * @param input String de entrada&#xD;
	 * @return hash del String de entrada</body>
              </ownedComment>
              <ownedParameter xmi:id="_ARC8B4GbEeuPkZNKCcfHxw" name="input">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_ARC8CIGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_ARDjEIGbEeuPkZNKCcfHxw" name="getbUnit" method="_AZvlIoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYirL4GbEeuPkZNKCcfHxw" type="_ARExMIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYiEE4GbEeuPkZNKCcfHxw" name="User" method="_AZu-AoGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AYiEHIGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AYiEHYGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AYiEFIGbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYiEFYGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYiEFoGbEeuPkZNKCcfHxw" name="userType">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYiEF4GbEeuPkZNKCcfHxw" name="userAlias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYiEGIGbEeuPkZNKCcfHxw" name="nombre">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYiEGYGbEeuPkZNKCcfHxw" name="apellido">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYiEGoGbEeuPkZNKCcfHxw" name="password">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYiEG4GbEeuPkZNKCcfHxw" name="activo">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYiEHoGbEeuPkZNKCcfHxw" type="_ARBt4IGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYirIIGbEeuPkZNKCcfHxw" name="getUserByAlias" method="_AZvlDYGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_TBXmaoJqEeuLTI0MOKBvew">
                <body>Devuelve el usuario al que pertenece el alias entrado por parámetro&#xD;
	 * @param bUnit BusinessUnit del que comprobamos la lista de usuarios&#xD;
	 * @param alias alias del usuario buscado&#xD;
	 * @return usuario con el alias entrado por parámetro (null si no existe)</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYirIYGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYirIoGbEeuPkZNKCcfHxw" name="alias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYirI4GbEeuPkZNKCcfHxw" type="_ARBt4IGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYirJIGbEeuPkZNKCcfHxw" name="getUserById" method="_AZvlEYGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_TBXma4JqEeuLTI0MOKBvew">
                <body>Devuelve el usuario al que pertenece el id entrado por parámetro&#xD;
	 * @param bUnit BusinessUnit del que comprobamos la lista de usuarios&#xD;
	 * @param id id del usuario buscado&#xD;
	 * @return usuario con el id entrado por parámetro (null si no existe)</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYirJYGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYirJoGbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYirJ4GbEeuPkZNKCcfHxw" type="_ARBt4IGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYirKIGbEeuPkZNKCcfHxw" name="checkUserPassword" method="_AZvlFYGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_TBXmbIJqEeuLTI0MOKBvew">
                <body>Comprueba que el password introducido por parámetro es igual al del usuario user&#xD;
	 * @param user Usuario&#xD;
	 * @param input password a comprobar&#xD;
	 * @return True si es igual, false si no lo es</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYirKYGbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYirKoGbEeuPkZNKCcfHxw" name="input">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYirK4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AYirMIGbEeuPkZNKCcfHxw" name="setbUnit" method="_AZvlJIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYjSMIGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AZGEwIGbEeuPkZNKCcfHxw" name="saveUserToDB" method="_AZu-DIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_TBXmYIJqEeuLTI0MOKBvew">
                <body>Inserta un nuevo usuario en la base de datos&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param user usuario a insertar&#xD;
	 * @return true si la insercion se hizo con éxito, false si no</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZGEwYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZGEwoGbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZGEw4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AZGExIGbEeuPkZNKCcfHxw" name="addNewUser" method="_AZu-EIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_TBXmYYJqEeuLTI0MOKBvew">
                <body>Si la inserción de un nuevo usuario en la base de datos tiene éxito,&#xD;
	 * recupera el id asignado en el registro de la base de datos y lo almacena&#xD;
	 * en el id del objeto User&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param user objeto a insertar en la base de datos&#xD;
	 * @return objeto User con el id asignado</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZGExYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZGExoGbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZGEx4GbEeuPkZNKCcfHxw" type="_ARBt4IGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AZGEyIGbEeuPkZNKCcfHxw" name="updateUserToDB" method="_AZu-FIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_TBXmYoJqEeuLTI0MOKBvew">
                <body>Actualiza los valores de un usuario que ya existe en la base de datos&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param user usuario que contiene los datos que actualizan al usuario ya existente&#xD;
	 * @return true si la actualización se hizo con éxito, false si no</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZGEyYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZGEyoGbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZGEy4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AZGEzIGbEeuPkZNKCcfHxw" name="getDefaultAdminUser" method="_AZu-GIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_TBXmY4JqEeuLTI0MOKBvew">
                <body>Obtiene el alias, nombre, apellido y password del usuario administrador por defecto&#xD;
	 * para comprobar si su password ha sido cambiado. En la primera ejecución del programa&#xD;
	 * Es obligatorio cambiar este password, y opcional cambiar el alias, nombre y apellido. &#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @return usuario administrador por defecto incluyendo solo alias, nombre, apellido y&#xD;
	 * password. El resto de datos no son necesarios porque ya son conocidos.</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZGEzYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZGEzoGbEeuPkZNKCcfHxw" type="_ARBt4IGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AZGr0IGbEeuPkZNKCcfHxw" name="updateDefaultAdminUserToDb" method="_AZu-G4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_TBXmZIJqEeuLTI0MOKBvew">
                <body>Actualiza la contraseña, y opcionalmente el alias, el nombre y el apellido&#xD;
	 * del usuario administrador por defecto si la contraseña por defecto de dicho&#xD;
	 * usuario no ha sido cambiada&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param user usuario administrador por defecto&#xD;
	 * @return true si la actualización se hizo con éxito, false si no</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZGr0YGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZGr0oGbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZGr04GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AZGr1IGbEeuPkZNKCcfHxw" name="getUsersFromDB" method="_AZu-H4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_TBXmZYJqEeuLTI0MOKBvew">
                <body>Obtiene la lista de usuarios del objeto BusinessUnit pasado por parámetro&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param bUnit objeto del que queremos recuperar sus usuarios&#xD;
	 * @return lista de usuarios del objeto almacenados en la base de datos</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZGr1YGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZGr1oGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZGr14GbEeuPkZNKCcfHxw" type="_ARBt4IGbEeuPkZNKCcfHxw" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZGr2IGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AZGr2YGbEeuPkZNKCcfHxw" name="setNoActiveUsersToDb" method="_AZu-JIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_TBXmZoJqEeuLTI0MOKBvew">
                <body>Marca como no activos todos los usuarios pertenecientes a la unidad de negocio pasada por parámetro,&#xD;
	 * y actualiza dichos usuarios en la base de datos&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param bUnit unidad de negocio cuyos usuarios se marcarán como inactivos&#xD;
	 * @return lista de usuarios actualizados en la base de datos, null si la lista no se obtiene</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZGr2oGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZGr24GbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZGr3IGbEeuPkZNKCcfHxw" type="_ARBt4IGbEeuPkZNKCcfHxw" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZGr3YGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AZGr3oGbEeuPkZNKCcfHxw" name="checkDefaultAdminPassword" method="_AZvlAIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_TBXmZ4JqEeuLTI0MOKBvew">
                <body>Comprueba si el usuario administrador por defecto mantiene el password por defecto&#xD;
	 * o lo ha cambiado.&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @return 0. password sin cambiar, 1. password cambiado, -1 error de comprobación</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZGr34GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZGr4IGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AZGr4YGbEeuPkZNKCcfHxw" name="getBunitIdFromUser" method="_AZvlA4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_TBXmaIJqEeuLTI0MOKBvew">
                <body>Obtiene el id de la unidad de negocio a la que pertenece el usuario, si el&#xD;
	 * usuario existe&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param alias alias del usuario&#xD;
	 * @param password password del usuario&#xD;
	 * @return id de la unidad de negocio, o 0 si el usuario no existe</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZGr4oGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZGr44GbEeuPkZNKCcfHxw" name="alias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZGr5IGbEeuPkZNKCcfHxw" name="password">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZGr5YGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AZHS4IGbEeuPkZNKCcfHxw" name="getUserId" method="_AZvlCIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_TBXmaYJqEeuLTI0MOKBvew">
                <body>Obtiene el id del usuario si el usuario existe&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param alias alias del usuario&#xD;
	 * @param password password del usuario&#xD;
	 * @return id del usuario, 0 si el usuario no existe</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZHS4YGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZHS4oGbEeuPkZNKCcfHxw" name="alias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZHS44GbEeuPkZNKCcfHxw" name="password">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZHS5IGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_ARExMIGbEeuPkZNKCcfHxw" name="BusinessUnit">
            <ownedAttribute xmi:id="_AZiwsIGbEeuPkZNKCcfHxw" name="TABLE_NAME" visibility="public" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZiwsYGbEeuPkZNKCcfHxw" value="&quot;business_unit&quot;"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZiwsoGbEeuPkZNKCcfHxw" name="id" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZiws4GbEeuPkZNKCcfHxw" name="" type="_AQYNqIGbEeuPkZNKCcfHxw" association="_AZ3g3IGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZiwtIGbEeuPkZNKCcfHxw" name="nombre" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZiwtYGbEeuPkZNKCcfHxw" name="direccion" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZiwtoGbEeuPkZNKCcfHxw" name="provincia" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZiwt4GbEeuPkZNKCcfHxw" name="estado" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZiwuIGbEeuPkZNKCcfHxw" name="cpostal" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZiwuYGbEeuPkZNKCcfHxw" name="telefono" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZiwuoGbEeuPkZNKCcfHxw" name="mail" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZiwu4GbEeuPkZNKCcfHxw" name="activo" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZiwvYGbEeuPkZNKCcfHxw" name="users" visibility="private" type="_ARBt4IGbEeuPkZNKCcfHxw" isOrdered="true" association="_AaM4BIGbEeuPkZNKCcfHxw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7gn44IJpEeuLTI0MOKBvew"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZiwvoGbEeuPkZNKCcfHxw" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZiwv4GbEeuPkZNKCcfHxw" value="new ArrayList&lt;User>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZjXwIGbEeuPkZNKCcfHxw" name="areas" visibility="private" type="_AQVKWYGbEeuPkZNKCcfHxw" isOrdered="true" association="_AaM4B4GbEeuPkZNKCcfHxw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZjXwYGbEeuPkZNKCcfHxw" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZjXwoGbEeuPkZNKCcfHxw" value="new ArrayList&lt;Area>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZjXw4GbEeuPkZNKCcfHxw" name="events" visibility="private" type="_AQb4AIGbEeuPkZNKCcfHxw" isOrdered="true" association="_AaM4CoGbEeuPkZNKCcfHxw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZjXxIGbEeuPkZNKCcfHxw" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZjXxYGbEeuPkZNKCcfHxw" value="new ArrayList&lt;Event>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_fW0yEYJoEeuLTI0MOKBvew" name="company" type="_AQYNqIGbEeuPkZNKCcfHxw" association="_fW0yEIJoEeuLTI0MOKBvew">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fW0yEoJoEeuLTI0MOKBvew" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fW0yE4JoEeuLTI0MOKBvew" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_EKOzAIJqEeuLTI0MOKBvew" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw" aggregation="composite" association="_EKOL8IJqEeuLTI0MOKBvew">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EKOzAYJqEeuLTI0MOKBvew"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EKOzAoJqEeuLTI0MOKBvew" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZvlJoGbEeuPkZNKCcfHxw" name="BusinessUnit" specification="_AYj5QIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZvlJ4GbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlKIGbEeuPkZNKCcfHxw" name="company" type="_AQYNqIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZvlKYGbEeuPkZNKCcfHxw" name="nombre">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlKoGbEeuPkZNKCcfHxw" name="direccion">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlK4GbEeuPkZNKCcfHxw" name="provincia">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlLIGbEeuPkZNKCcfHxw" name="estado">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlLYGbEeuPkZNKCcfHxw" name="cpostal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlLoGbEeuPkZNKCcfHxw" name="telefono">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlL4GbEeuPkZNKCcfHxw" name="mail">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlMIGbEeuPkZNKCcfHxw" name="activo">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZvlMYGbEeuPkZNKCcfHxw" type="_ARExMIGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>//this.connection = connection;&#xD;
		this.id = id;&#xD;
		this. = company;&#xD;
		this.nombre = nombre;&#xD;
		this.direccion = direccion;&#xD;
		this.provincia = provincia;&#xD;
		this.estado = estado;&#xD;
		this.cpostal = cpostal;&#xD;
		this.telefono = telefono;&#xD;
		this.mail = mail;&#xD;
		this.activo = activo;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZvlMoGbEeuPkZNKCcfHxw" name="saveBUnitToDB" specification="_AZHS5YGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZvlM4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZvlNIGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZvlNYGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		String sql = &quot;INSERT INTO business_unit (company_id, nombre, direccion, provincia, &quot;&#xD;
				+ &quot;estado, cpostal, telefono, mail, activo) &quot;&#xD;
				+ &quot;VALUES (?, ?, ?, ? ,? ,? ,? ,?, ?);&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setInt(1, bUnit.get().getId());&#xD;
			pstm.setString(2, bUnit.getNombre());&#xD;
			pstm.setString(3, bUnit.getDireccion());&#xD;
			pstm.setString(4, bUnit.getProvincia());&#xD;
			pstm.setString(5, bUnit.getEstado());&#xD;
			pstm.setString(6, bUnit.getCpostal());&#xD;
			pstm.setString(7, bUnit.getTelefono());&#xD;
			pstm.setString(8, bUnit.getMail());&#xD;
			pstm.setBoolean(9, bUnit.isActivo());&#xD;
			pstm.executeUpdate();&#xD;
			return true;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		} finally {&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZvlNoGbEeuPkZNKCcfHxw" name="addNewBusinessUnit" specification="_AZH58YGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZvlN4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZvlOIGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZvlOYGbEeuPkZNKCcfHxw" type="_ARExMIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>if (saveBUnitToDB(conn, bUnit)) {&#xD;
			int id = PersistenceManager.getLastElementIdFromDB(conn, TABLE_NAME);&#xD;
			bUnit.setId(id);&#xD;
			return bUnit;&#xD;
		}&#xD;
		return null;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMEIGbEeuPkZNKCcfHxw" name="updateBusinessUnitToDB" specification="_AZH59YGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZwMEYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZwMEoGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZwME4GbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		String sql = &quot;UPDATE business_unit &quot;&#xD;
				+ &quot;SET &quot;&#xD;
				+ &quot;company_id = ?, &quot;&#xD;
				+ &quot;nombre = ?, &quot;&#xD;
				+ &quot;direccion = ?, &quot;&#xD;
				+ &quot;provincia = ?, &quot;&#xD;
				+ &quot;estado = ?, &quot;&#xD;
				+ &quot;cpostal = ?, &quot;&#xD;
				+ &quot;telefono = ?, &quot;&#xD;
				+ &quot;mail = ?, &quot;&#xD;
				+ &quot;activo = ? &quot;&#xD;
				+ &quot;WHERE id = ?;&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setInt(1, bUnit.get().getId());&#xD;
			pstm.setString(2, bUnit.getNombre());&#xD;
			pstm.setString(3, bUnit.getDireccion());&#xD;
			pstm.setString(4, bUnit.getProvincia());&#xD;
			pstm.setString(5, bUnit.getEstado());&#xD;
			pstm.setString(6, bUnit.getCpostal());&#xD;
			pstm.setString(7, bUnit.getTelefono());&#xD;
			pstm.setString(8, bUnit.getMail());&#xD;
			pstm.setBoolean(9, bUnit.isActivo());&#xD;
			pstm.setInt(10, bUnit.getId());&#xD;
			pstm.executeUpdate();&#xD;
			return true;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		} finally {&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}	&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMFIGbEeuPkZNKCcfHxw" name="getBusinessUnitsFromDB" specification="_AZH5-YGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZwMFYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZwMFoGbEeuPkZNKCcfHxw" name="company" type="_AQYNqIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZwMF4GbEeuPkZNKCcfHxw" type="_ARExMIGbEeuPkZNKCcfHxw" isOrdered="true" direction="return">
                <name xsi:nil="true"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZwMGIGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;BusinessUnit> bUnitsList = new ArrayList&lt;BusinessUnit>();&#xD;
		BusinessUnit bUnit = null;&#xD;
		PreparedStatement pstm = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT id, nombre, direccion, provincia, estado, &quot;&#xD;
				+ &quot;cpostal, telefono, mail, activo &quot;&#xD;
				+ &quot;FROM business_unit &quot;&#xD;
				+ &quot;WHERE company_id = ?;&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setInt(1, company.getId());&#xD;
			results = pstm.executeQuery();&#xD;
			while (results.next()) {&#xD;
				bUnit = new BusinessUnit();&#xD;
				bUnit.setId(results.getInt(1));&#xD;
				bUnit.set(company);&#xD;
				bUnit.setNombre(results.getString(2));&#xD;
				bUnit.setDireccion(results.getString(3));&#xD;
				bUnit.setProvincia(results.getString(4));&#xD;
				bUnit.setEstado(results.getString(5));&#xD;
				bUnit.setCpostal(results.getString(6));&#xD;
				bUnit.setTelefono(results.getString(7));&#xD;
				bUnit.setMail(results.getString(8));&#xD;
				bUnit.setActivo(results.getBoolean(9));&#xD;
				bUnitsList.add(bUnit);&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return null;&#xD;
		} finally {&#xD;
			PersistenceManager.closeResultSet(results);&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
		return bUnitsList;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMGYGbEeuPkZNKCcfHxw" name="refresh" specification="_AZH5_oGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZwMGoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZwMG4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT nombre, direccion, provincia, estado, &quot;&#xD;
				+ &quot;cpostal, telefono, mail, activo &quot;&#xD;
				+ &quot;FROM business_unit &quot;&#xD;
				+ &quot;WHERE id = ?;&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setInt(1, id);&#xD;
			results = pstm.executeQuery();&#xD;
			while (results.next()) {&#xD;
				this.nombre = results.getString(1);&#xD;
				this.direccion = results.getString(2);&#xD;
				this.provincia = results.getString(3);&#xD;
				this.estado = results.getString(4);&#xD;
				this.cpostal = results.getString(5);&#xD;
				this.telefono = results.getString(6);&#xD;
				this.mail = results.getString(7);&#xD;
				this.activo = results.getBoolean(8);&#xD;
			}&#xD;
			return true;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMHIGbEeuPkZNKCcfHxw" name="addUser" specification="_AZH6AYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZwMHYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZwMHoGbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>User completeUser = user.addNewUser(conn, user);&#xD;
		if (completeUser != null) {&#xD;
			users.add(completeUser);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMH4GbEeuPkZNKCcfHxw" name="addArea" specification="_AZIhAIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZwMIIGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZwMIYGbEeuPkZNKCcfHxw" name="area" type="_AQVKWYGbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>Area completeArea = area.addNewArea(conn, this, area);&#xD;
		if (completeArea != null) {&#xD;
			areas.add(completeArea);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMIoGbEeuPkZNKCcfHxw" name="addEvent" specification="_AZIhA4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZwMI4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZwMJIGbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>Event completeEvent = event.addNewEvent(conn, event);&#xD;
		if (completeEvent != null) {&#xD;
			events.add(completeEvent);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMJYGbEeuPkZNKCcfHxw" name="getBusinessUnitByName" specification="_AYkgUIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZwMJoGbEeuPkZNKCcfHxw" name="company" type="_AQYNqIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZwMJ4GbEeuPkZNKCcfHxw" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZwMKIGbEeuPkZNKCcfHxw" type="_ARExMIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>List&lt;BusinessUnit> bUnitList = company.getBusinessUnits();&#xD;
		for (BusinessUnit bUnit: bUnitList) {&#xD;
			if (bUnit.getNombre().equals(name)) {&#xD;
				return bUnit;&#xD;
			}&#xD;
		}	&#xD;
		return null;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMKYGbEeuPkZNKCcfHxw" name="getBusinessUnitById" specification="_AYkgVIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZwMKoGbEeuPkZNKCcfHxw" name="company" type="_AQYNqIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZwMK4GbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZwMLIGbEeuPkZNKCcfHxw" type="_ARExMIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>List&lt;BusinessUnit> bUnitList = company.getBusinessUnits();&#xD;
		for (BusinessUnit bUnit: bUnitList) {&#xD;
			if (bUnit.getId() == id) {&#xD;
				return bUnit;&#xD;
			}&#xD;
		}	&#xD;
		return null;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMLYGbEeuPkZNKCcfHxw" name="isActivo" specification="_ARGmYIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZwMLoGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return activo;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwML4GbEeuPkZNKCcfHxw" name="setActivo" specification="_ARGmYoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZwMMIGbEeuPkZNKCcfHxw" name="activo">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>this.activo = activo;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_ARF_UIGbEeuPkZNKCcfHxw" name="BusinessUnit">
              <eAnnotations xmi:id="_ARF_UYGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_ARF_UoGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_ARF_VIGbEeuPkZNKCcfHxw" type="_ARExMIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ARGmYIGbEeuPkZNKCcfHxw" name="isActivo" method="_AZwMLYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_ARGmYYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_ARGmYoGbEeuPkZNKCcfHxw" name="setActivo" method="_AZwML4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_ARGmY4GbEeuPkZNKCcfHxw" name="activo">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AYj5QIGbEeuPkZNKCcfHxw" name="BusinessUnit" method="_AZvlJoGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AYj5S4GbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AYj5TIGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AYj5QYGbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYj5QoGbEeuPkZNKCcfHxw" name="company" type="_AQYNqIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYj5Q4GbEeuPkZNKCcfHxw" name="nombre">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYj5RIGbEeuPkZNKCcfHxw" name="direccion">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYj5RYGbEeuPkZNKCcfHxw" name="provincia">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYj5RoGbEeuPkZNKCcfHxw" name="estado">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYj5R4GbEeuPkZNKCcfHxw" name="cpostal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYj5SIGbEeuPkZNKCcfHxw" name="telefono">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYj5SYGbEeuPkZNKCcfHxw" name="mail">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYj5SoGbEeuPkZNKCcfHxw" name="activo">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYj5TYGbEeuPkZNKCcfHxw" type="_ARExMIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYkgUIGbEeuPkZNKCcfHxw" name="getBusinessUnitByName" method="_AZwMJYGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ3g5oGbEeuPkZNKCcfHxw">
                <body>Devuelve la unidad de negocio al que pertenece el nombre entrado por parámetro&#xD;
	 * @param company empresa de la que comprobamos la lista de unidades de negocio&#xD;
	 * @param name nombre de la unidad de negocio buscada&#xD;
	 * @return unidad de negocio con el nombre entrado por parámetro (null si no existe)</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYkgUYGbEeuPkZNKCcfHxw" name="company" type="_AQYNqIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYkgUoGbEeuPkZNKCcfHxw" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYkgU4GbEeuPkZNKCcfHxw" type="_ARExMIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYkgVIGbEeuPkZNKCcfHxw" name="getBusinessUnitById" method="_AZwMKYGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ3g54GbEeuPkZNKCcfHxw">
                <body>Devuelve la unidad de negocio al que pertenece el id entrado por parámetro&#xD;
	 * @param bUnit BusinessUnit del que comprobamos la lista de usuarios&#xD;
	 * @param id id del usuario buscado&#xD;
	 * @return usuario con el id entrado por parámetro (null si no existe)</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYkgVYGbEeuPkZNKCcfHxw" name="company" type="_AQYNqIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYkgVoGbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYkgV4GbEeuPkZNKCcfHxw" type="_ARExMIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AZHS5YGbEeuPkZNKCcfHxw" name="saveBUnitToDB" method="_AZvlMoGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ3g3oGbEeuPkZNKCcfHxw">
                <body>Inserta una nueva unidad de negocio en la base de datos&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param bUnit BusinessUnit a insertar&#xD;
	 * @return true si la insercion se hizo con éxito, false si no</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZHS5oGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZHS54GbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZH58IGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AZH58YGbEeuPkZNKCcfHxw" name="addNewBusinessUnit" method="_AZvlNoGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ3g34GbEeuPkZNKCcfHxw">
                <body>Si la inserción de una nueva unidad de negocio en la base de datos tiene éxito,&#xD;
	 * recupera el id asignado en el registro de la base de datos y lo almacena en el id&#xD;
	 * del objeto BusinessUnit&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param bUnit objeto a insertar en la base de datos&#xD;
	 * @return objeto BusinessUnit con el id asignado</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZH58oGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZH584GbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZH59IGbEeuPkZNKCcfHxw" type="_ARExMIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AZH59YGbEeuPkZNKCcfHxw" name="updateBusinessUnitToDB" method="_AZwMEIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ3g4IGbEeuPkZNKCcfHxw">
                <body>Actualiza los valores de una unidad de negocio que ya existe en la base de datos&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param bUnit unidad de negocio que contiene los datos que actualizan&#xD;
	 * a la unidad de negocio ya existente&#xD;
	 * @return true si la actualización se hizo con éxito, false si no</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZH59oGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZH594GbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZH5-IGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AZH5-YGbEeuPkZNKCcfHxw" name="getBusinessUnitsFromDB" method="_AZwMFIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ3g4YGbEeuPkZNKCcfHxw">
                <body>Obtiene la lista de BusinessUnits del objeto Company pasado por parámetro&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param company objeto del que queremos recuperar sus BusinessUnits&#xD;
	 * @return lista de BusinessUnits del objeto almacenados en la base de datos</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZH5-oGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZH5-4GbEeuPkZNKCcfHxw" name="company" type="_AQYNqIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZH5_IGbEeuPkZNKCcfHxw" type="_ARExMIGbEeuPkZNKCcfHxw" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZH5_YGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AZH5_oGbEeuPkZNKCcfHxw" name="refresh" method="_AZwMGYGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ3g4oGbEeuPkZNKCcfHxw">
                <body>Refresca los datos de la unidad de negocio recargándolos de&#xD;
	 * la base de datos&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @return true si se refrescan los datos, false si no</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZH5_4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZH6AIGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AZH6AYGbEeuPkZNKCcfHxw" name="addUser" method="_AZwMHIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ3g44GbEeuPkZNKCcfHxw">
                <body>Añade un usuario a la lista de usuarios si la inserción del usuario en la base de&#xD;
	 * datos se hace con éxito&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param user usuario a añadir</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZH6AoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZH6A4GbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AZIhAIGbEeuPkZNKCcfHxw" name="addArea" method="_AZwMH4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ3g5IGbEeuPkZNKCcfHxw">
                <body>Añade un area a la lista de areas si la inserción del area en la base de&#xD;
	 * datos se hace con éxito&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param area area a añadir</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZIhAYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZIhAoGbEeuPkZNKCcfHxw" name="area" type="_AQVKWYGbEeuPkZNKCcfHxw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AZIhA4GbEeuPkZNKCcfHxw" name="addEvent" method="_AZwMIoGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ3g5YGbEeuPkZNKCcfHxw">
                <body>Añade un evento a la lista de eventos si la inserción del evento en la base de&#xD;
	 * datos se hace con éxito&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param event evento a añadir</body>
              </ownedComment>
              <ownedParameter xmi:id="_AZIhBIGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZIhBYGbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ3g3IGbEeuPkZNKCcfHxw" name="" memberEnd="_AZiws4GbEeuPkZNKCcfHxw _AZ3g3YGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ3g3YGbEeuPkZNKCcfHxw" name="businessUnit" type="_ARExMIGbEeuPkZNKCcfHxw" association="_AZ3g3IGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ-OhoGbEeuPkZNKCcfHxw" name="" memberEnd="_AZ-Oh4GbEeuPkZNKCcfHxw _AZPOsoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ-Oh4GbEeuPkZNKCcfHxw" name="company" type="_AQYNqIGbEeuPkZNKCcfHxw" association="_AZ-OhoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaM4AYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaM4AoGbEeuPkZNKCcfHxw _AZiJoYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaM4AoGbEeuPkZNKCcfHxw" name="" type="_ARBt4IGbEeuPkZNKCcfHxw" association="_AaM4AYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaM4BIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaM4BYGbEeuPkZNKCcfHxw _AZiwvYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaM4BYGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw" association="_AaM4BIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaM4B4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaM4CIGbEeuPkZNKCcfHxw _AZjXwIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaM4CIGbEeuPkZNKCcfHxw" name="" type="_ARExMIGbEeuPkZNKCcfHxw" association="_AaM4B4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaM4CoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaM4C4GbEeuPkZNKCcfHxw _AZjXw4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaM4C4GbEeuPkZNKCcfHxw" name="" type="_ARExMIGbEeuPkZNKCcfHxw" association="_AaM4CoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_fW0yEIJoEeuLTI0MOKBvew" name="" memberEnd="_fW0yEYJoEeuLTI0MOKBvew _fW0yFIJoEeuLTI0MOKBvew"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_EKOL8IJqEeuLTI0MOKBvew" name="" memberEnd="_EKOL8YJqEeuLTI0MOKBvew _EKOzAIJqEeuLTI0MOKBvew">
            <ownedEnd xmi:id="_EKOL8YJqEeuLTI0MOKBvew" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw" association="_EKOL8IJqEeuLTI0MOKBvew"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_API3hoGbEeuPkZNKCcfHxw" name="gui">
          <packagedElement xmi:type="uml:Package" xmi:id="_APbLYIGbEeuPkZNKCcfHxw" name="listener">
            <packagedElement xmi:type="uml:Class" xmi:id="_AQosU4GbEeuPkZNKCcfHxw" name="VisibilityListener">
              <ownedAttribute xmi:id="_AZUHN4GbEeuPkZNKCcfHxw" name="timer" visibility="package" type="_AYRlZIGbEeuPkZNKCcfHxw" association="_AaB45IGbEeuPkZNKCcfHxw"/>
              <ownedAttribute xmi:id="_AZUHOYGbEeuPkZNKCcfHxw" name="panel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_AY2NKIGbEeuPkZNKCcfHxw" client="_AQosU4GbEeuPkZNKCcfHxw" supplier="_AYRlYoGbEeuPkZNKCcfHxw" contract="_AYRlYoGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqsioGbEeuPkZNKCcfHxw" name="VisibilityListener" specification="_AY2NKYGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZqsi4GbEeuPkZNKCcfHxw" name="timer" type="_AYRlZIGbEeuPkZNKCcfHxw"/>
                <ownedParameter xmi:id="_AZqsjIGbEeuPkZNKCcfHxw" name="panel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AZqsjYGbEeuPkZNKCcfHxw" type="_AQosU4GbEeuPkZNKCcfHxw" direction="return"/>
                <language>java</language>
                <body>this.timer = timer;&#xD;
		this.panel = panel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqsjoGbEeuPkZNKCcfHxw" name="componentHidden" specification="_AY20PYGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZqsj4GbEeuPkZNKCcfHxw" name="e" type="_AYRlYIGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>if(timer != null) {&#xD;
			  timer.cancel();&#xD;
			  System.out.println(&quot;Se ha cerrado la ventana &quot; + panel);&#xD;
		  }&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AY2NKYGbEeuPkZNKCcfHxw" name="VisibilityListener" method="_AZqsioGbEeuPkZNKCcfHxw">
                <eAnnotations xmi:id="_AY2NLIGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AY2NLYGbEeuPkZNKCcfHxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AY2NKoGbEeuPkZNKCcfHxw" name="timer" type="_AYRlZIGbEeuPkZNKCcfHxw"/>
                <ownedParameter xmi:id="_AY2NK4GbEeuPkZNKCcfHxw" name="panel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AY2NLoGbEeuPkZNKCcfHxw" type="_AQosU4GbEeuPkZNKCcfHxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AY2NL4GbEeuPkZNKCcfHxw" name="componentResized">
                <ownedParameter xmi:id="_AY2NMIGbEeuPkZNKCcfHxw" name="e" type="_AYRlYIGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AY20M4GbEeuPkZNKCcfHxw" name="componentMoved">
                <ownedParameter xmi:id="_AY20NIGbEeuPkZNKCcfHxw" name="e" type="_AYRlYIGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AY20OIGbEeuPkZNKCcfHxw" name="componentShown">
                <ownedParameter xmi:id="_AY20OYGbEeuPkZNKCcfHxw" name="e" type="_AYRlYIGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AY20PYGbEeuPkZNKCcfHxw" name="componentHidden" method="_AZqsjoGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AY20PoGbEeuPkZNKCcfHxw" name="e" type="_AYRlYIGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AaB45IGbEeuPkZNKCcfHxw" name="" memberEnd="_AaB45YGbEeuPkZNKCcfHxw _AZUHN4GbEeuPkZNKCcfHxw">
              <ownedEnd xmi:id="_AaB45YGbEeuPkZNKCcfHxw" name="" type="_AQosU4GbEeuPkZNKCcfHxw" association="_AaB45IGbEeuPkZNKCcfHxw"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_AQjMwIGbEeuPkZNKCcfHxw" name="DefaultAdmin">
            <generalization xmi:id="_AYzJ2IGbEeuPkZNKCcfHxw" general="_AYLexIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZRq9YGbEeuPkZNKCcfHxw" name="currentPassField" type="_AYMs4YGbEeuPkZNKCcfHxw" association="_AZz2f4GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZRq9oGbEeuPkZNKCcfHxw" name="newPassField" type="_AYMs4YGbEeuPkZNKCcfHxw" association="_AZz2gYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZRq94GbEeuPkZNKCcfHxw" name="confirmNewPassField" type="_AYMs4YGbEeuPkZNKCcfHxw" association="_AZz2g4GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZRq-IGbEeuPkZNKCcfHxw" name="aliasField" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AZz2hYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZRq-YGbEeuPkZNKCcfHxw" name="nameField" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AZz2h4GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZRq-oGbEeuPkZNKCcfHxw" name="lastNameField" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AZz2iYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZRq-4GbEeuPkZNKCcfHxw" name="errorInfoLabel" type="_AYLexoGbEeuPkZNKCcfHxw" association="_AZ0dgIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZRq_IGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw" association="_AZ0dgoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZSSAIGbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw" association="_AZ0dhIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZSSAYGbEeuPkZNKCcfHxw" name="session" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AZ0dhoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZSSAoGbEeuPkZNKCcfHxw" name="frame" type="_AQ_RoIGbEeuPkZNKCcfHxw" association="_AZ0diIGbEeuPkZNKCcfHxw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZpedoGbEeuPkZNKCcfHxw" name="DefaultAdmin" specification="_AYzJ0IGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZped4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZpeeIGbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZpeeYGbEeuPkZNKCcfHxw" name="session" type="_AQp6foGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZpeeoGbEeuPkZNKCcfHxw" name="frame" type="_AQ_RoIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZpee4GbEeuPkZNKCcfHxw" type="_AQjMwIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>this.conn = conn ;&#xD;
		this.user = user;&#xD;
		this.session = session;&#xD;
		this.frame = frame;&#xD;
		setLayout(null);&#xD;
		&#xD;
		JTextPane changePassTxt = new JTextPane();&#xD;
		changePassTxt.setFont(new Font(&quot;Tahoma&quot;, Font.BOLD, 20));&#xD;
		changePassTxt.setText(&quot;ES NECESARIO CAMBIAR EL PASSWORD DEL ADMINISTRADOR POR DEFECTO.\r\n&quot;&#xD;
				+ &quot;MODIFICAR EL RESTO DE DATOS ES OPCIONAL&quot;);&#xD;
		changePassTxt.setBackground(UIManager.getColor(this.getBackground()));&#xD;
		changePassTxt.setEditable(false);&#xD;
		changePassTxt.setFocusable(false);&#xD;
		changePassTxt.setBounds(50, 75, 900, 60);&#xD;
		add(changePassTxt);&#xD;
		&#xD;
		JLabel currentPassLabel = new JLabel(&quot;Password actual&quot;);&#xD;
		currentPassLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		currentPassLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		currentPassLabel.setBounds(50, 200, 200, 25);&#xD;
		add(currentPassLabel);&#xD;
		&#xD;
		JLabel newPassLabel = new JLabel(&quot;Nuevo password&quot;);&#xD;
		newPassLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		newPassLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		newPassLabel.setBounds(50, 250, 200, 25);&#xD;
		add(newPassLabel);&#xD;
		&#xD;
		JLabel confirmPassLabel = new JLabel(&quot;Confirmar password&quot;);&#xD;
		confirmPassLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		confirmPassLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		confirmPassLabel.setBounds(50, 300, 200, 25);&#xD;
		add(confirmPassLabel);&#xD;
		&#xD;
		JLabel aliasLabel = new JLabel(&quot;Alias&quot;);&#xD;
		aliasLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		aliasLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		aliasLabel.setBounds(50, 350, 200, 25);&#xD;
		add(aliasLabel);&#xD;
		&#xD;
		JLabel nameLabel = new JLabel(&quot;Nombre&quot;);&#xD;
		nameLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		nameLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		nameLabel.setBounds(50, 400, 200, 25);&#xD;
		add(nameLabel);&#xD;
		&#xD;
		JLabel lastNameLabel = new JLabel(&quot;Apellido&quot;);&#xD;
		lastNameLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		lastNameLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		lastNameLabel.setBounds(50, 450, 200, 25);&#xD;
		add(lastNameLabel);&#xD;
		&#xD;
		currentPassField = new JPasswordField();&#xD;
		currentPassField.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		currentPassField.setBounds(260, 200, 300, 25);&#xD;
		currentPassField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					newPassField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		add(currentPassField);&#xD;
		&#xD;
		newPassField = new JPasswordField();&#xD;
		newPassField.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		newPassField.setBounds(260, 250, 300, 25);&#xD;
		newPassField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					confirmNewPassField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		add(newPassField);&#xD;
		&#xD;
		confirmNewPassField = new JPasswordField();&#xD;
		confirmNewPassField.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		confirmNewPassField.setBounds(260, 300, 300, 25);&#xD;
		confirmNewPassField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					aliasField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		add(confirmNewPassField);&#xD;
		&#xD;
		aliasField = new JTextField();&#xD;
		aliasField.setBounds(260, 350, 300, 25);&#xD;
		aliasField.setColumns(10);&#xD;
		aliasField.setText(user.getUserAlias());&#xD;
		aliasField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					nameField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		add(aliasField);&#xD;
				&#xD;
		nameField = new JTextField();&#xD;
		nameField.setColumns(10);&#xD;
		nameField.setBounds(260, 400, 300, 25);&#xD;
		nameField.setText(user.getNombre());&#xD;
		nameField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					lastNameField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		add(nameField);&#xD;
		&#xD;
		//Declaramos aquí el botón para que pueda obtener el foco de lastNameField&#xD;
		JButton updateButton = new JButton(&quot;Actualizar datos&quot;);;&#xD;
		&#xD;
		lastNameField = new JTextField();&#xD;
		lastNameField.setColumns(10);&#xD;
		lastNameField.setBounds(260, 450, 300, 25);&#xD;
		lastNameField.setText(user.getApellido());&#xD;
		lastNameField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					updateButton.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		add(lastNameField);&#xD;
		&#xD;
		JLabel minCharsLabel = new JLabel(&quot;Min: 8 caracteres&quot;);&#xD;
		minCharsLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		minCharsLabel.setBounds(570, 240, 380, 25);&#xD;
		add(minCharsLabel);&#xD;
		&#xD;
		JLabel maxCharsLabel = new JLabel(&quot;Max: 25 caracteres [a-z], [A-Z], [0-9], [*!$%&amp;@#^]&quot;);&#xD;
		maxCharsLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel.setBounds(570, 260, 380, 25);&#xD;
		add(maxCharsLabel);&#xD;
		&#xD;
		JLabel maxCharsLabel2 = new JLabel(&quot;Max: 20 caracteres&quot;);&#xD;
		maxCharsLabel2.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel2.setBounds(570, 350, 150, 25);&#xD;
		add(maxCharsLabel2);&#xD;
		&#xD;
		JLabel maxCharsLabel3 = new JLabel(&quot;Max: 50 caracteres&quot;);&#xD;
		maxCharsLabel3.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel3.setBounds(570, 400, 150, 25);&#xD;
		add(maxCharsLabel3);&#xD;
		&#xD;
		JLabel maxCharsLabel4 = new JLabel(&quot;Max: 50 caracteres&quot;);&#xD;
		maxCharsLabel4.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel4.setBounds(570, 450, 150, 25);&#xD;
		add(maxCharsLabel4);&#xD;
		&#xD;
		errorInfoLabel = new JLabel(&quot;&quot;);&#xD;
		errorInfoLabel.setHorizontalAlignment(SwingConstants.CENTER);&#xD;
		errorInfoLabel.setBounds(50, 500, 900, 25);&#xD;
		add(errorInfoLabel);&#xD;
		&#xD;
		updateButton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				if (testData()) {&#xD;
					if (updateData()) {&#xD;
						startSession();&#xD;
					} else {&#xD;
						errorInfoLabel.setText(&quot;ERROR. DATOS NO ACTUALIZADOS&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		updateButton.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					if (testData()) {&#xD;
						if (updateData()) {&#xD;
							startSession();&#xD;
						} else {&#xD;
							errorInfoLabel.setText(&quot;ERROR. DATOS NO ACTUALIZADOS&quot;);&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		});		&#xD;
		updateButton.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		updateButton.setBounds(750, 550, 200, 25);&#xD;
		add(updateButton);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZpefIGbEeuPkZNKCcfHxw" name="testData" specification="_AQjMwYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZpefYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>//Comprobamos que la contraseña actual introducida es correcta&#xD;
		String currentPassword = String.valueOf(currentPassField.getPassword());&#xD;
		if (!user.getPassword().equals(currentPassword)) {&#xD;
			errorInfoLabel.setText(&quot;CONTRASEÑA ACTUAL INCORRECTA&quot;);&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		//Comprobamos que la nueva contraseña no excede el tamaño máximo&#xD;
		String newPassword = String.valueOf(newPassField.getPassword());&#xD;
		if (newPassword.length() &lt; 8 || newPassword.length() > 25) {&#xD;
			errorInfoLabel.setText(&quot;LA LONGITUD DE LA NUEVA CONTRASEÑA ES INCORRECTA&quot;);&#xD;
			return false;&#xD;
		}&#xD;
		//Comprobamos que la nueva contraseña y la confirmación son iguales&#xD;
		String confirmPassword = String.valueOf(confirmNewPassField.getPassword());&#xD;
		if (!newPassword.equals(confirmPassword)) {&#xD;
			errorInfoLabel.setText(&quot;LA NUEVA CONTRASEÑA Y LA CONFIRMACIÓN NO COINCIDEN&quot;);&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		//Comprobamos que la contraseña nueva no es igual a la antigua&#xD;
		if (currentPassword.equals(newPassword) &amp;&amp; currentPassword.equals(confirmPassword)) {&#xD;
			errorInfoLabel.setText(&quot;LA NUEVA CONTRASEÑA NO PUEDE SER IGUAL A LA ANTIGUA&quot;);&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		//Comprobamos que la contraseña solo incluye caracteres permitidos&#xD;
		if(!user.isAValidPassword(newPassword)) {&#xD;
			errorInfoLabel.setText(&quot;LA NUEVA CONTRASEÑA DEBE INCLUIR AL MENOS UNA MAYÚSCULA,&quot;&#xD;
					+ &quot;UNA MINÚSCULA, UN DÍGITO Y UN CARACTER ESPECIAL&quot;);&#xD;
			return false;&#xD;
		}&#xD;
	&#xD;
		return true;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZpefoGbEeuPkZNKCcfHxw" name="updateData" specification="_AQjz0IGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZpef4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>//Excepto bUnit, userType y activo que no deben cambiar&#xD;
		//User id será 1, el administrador por defecto&#xD;
		user.setId(1);&#xD;
		user.setUserAlias(aliasField.getText());&#xD;
		user.setNombre(nameField.getText());&#xD;
		user.setApellido(lastNameField.getText());&#xD;
		user.setPassword(user.passwordHash(String.valueOf(newPassField.getPassword())));&#xD;
		//Actualizamos datos de usuario en la base de datos&#xD;
		//Si se actualizan correctamente, iniciamos sesión&#xD;
		if (user.updateDefaultAdminUserToDb(conn, user)) {&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZpegIGbEeuPkZNKCcfHxw" name="startSession" specification="_AQjz0oGbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>//Cargamos datos de la sesión&#xD;
		//User id será 1, el administrador por defecto&#xD;
		//BUnit id será 1, la unidad de negocio por defecto&#xD;
		session.loadCurrentSessionData(conn, 1, 1);&#xD;
		//Pasar userTypeId por parámetro al panel (admin = 1)&#xD;
		//Cargar paneles&#xD;
		String title = frame.getTitle() + &quot;        Versión &quot; + frame.getVersionNumber() + &quot;  Usuario: &quot; + user.getUserAlias();&#xD;
		frame.setTitle(title);&#xD;
//		frame.setTitle(frame.getTitle() + &quot;\t\tVersión &quot; + frame.getVersionNumber() + &quot;\t\tUsuario: &quot; + user.getUserAlias());&#xD;
		frame.setExtendedState(frame.getExtendedState() | JFrame.MAXIMIZED_BOTH);&#xD;
		frame.setUpWindow();&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQjMwYGbEeuPkZNKCcfHxw" name="testData" method="_AZpefIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AQjMwoGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQjz0IGbEeuPkZNKCcfHxw" name="updateData" method="_AZpefoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AQjz0YGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQjz0oGbEeuPkZNKCcfHxw" name="startSession" method="_AZpegIGbEeuPkZNKCcfHxw"/>
            <ownedOperation xmi:id="_AYzJ0IGbEeuPkZNKCcfHxw" name="DefaultAdmin" method="_AZpedoGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AYzJ1YGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AYzJ1oGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AYzJ0YGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYzJ0oGbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYzJ04GbEeuPkZNKCcfHxw" name="session" type="_AQp6foGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYzJ1IGbEeuPkZNKCcfHxw" name="frame" type="_AQ_RoIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYzJ14GbEeuPkZNKCcfHxw" type="_AQjMwIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_AQka4IGbEeuPkZNKCcfHxw" name="Login">
            <generalization xmi:id="_AY0X84GbEeuPkZNKCcfHxw" general="_AYLexIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZSSA4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw" association="_AZ0dioGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZSSBIGbEeuPkZNKCcfHxw" name="session" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AZ0djIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZSSBYGbEeuPkZNKCcfHxw" name="frame" type="_AQ_RoIGbEeuPkZNKCcfHxw" association="_AZ0djoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZSSBoGbEeuPkZNKCcfHxw" name="basePanel" type="_AYLexIGbEeuPkZNKCcfHxw" association="_AZ0dkIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZSSB4GbEeuPkZNKCcfHxw" name="userField" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AZ0dkoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZSSCIGbEeuPkZNKCcfHxw" name="passwordField" type="_AYMs4YGbEeuPkZNKCcfHxw" association="_AaADtIGbEeuPkZNKCcfHxw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZpehYGbEeuPkZNKCcfHxw" name="Login" specification="_AYzw4IGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZpehoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZpeh4GbEeuPkZNKCcfHxw" name="session" type="_AQp6foGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZpeiIGbEeuPkZNKCcfHxw" name="frame" type="_AQ_RoIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZpeiYGbEeuPkZNKCcfHxw" type="_AQka4IGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>this.conn = conn;&#xD;
		this.session = session;&#xD;
		this.setFrame(frame);&#xD;
		setLayout(null);&#xD;
		&#xD;
		this.session.setbUnit(null);&#xD;
		this.session.setUser(null);&#xD;
		this.frame.setTitle(&quot;EVENTSURFER&quot;);&#xD;
		&#xD;
		JTextPane userLoginTxt = new JTextPane();&#xD;
		userLoginTxt.setText(&quot;INTRODUZCA USUARIO Y CONTRASEÑA&quot;);&#xD;
		userLoginTxt.setFont(new Font(&quot;Tahoma&quot;, Font.BOLD, 20));&#xD;
		userLoginTxt.setEditable(false);&#xD;
		userLoginTxt.setFocusable(false);&#xD;
		userLoginTxt.setBackground(UIManager.getColor(this.getBackground()));&#xD;
		userLoginTxt.setBounds(100, 110, 650, 30);&#xD;
		add(userLoginTxt);&#xD;
		&#xD;
		JLabel userLabel = new JLabel(&quot;Usuario:&quot;);&#xD;
		userLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		userLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		userLabel.setSize(150, 25);&#xD;
		userLabel.setLocation(100, 200);&#xD;
		add(userLabel);&#xD;
		&#xD;
		JLabel passLabel = new JLabel(&quot;Password:&quot;);&#xD;
		passLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		passLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		passLabel.setBounds(100, 250, 150, 25);&#xD;
		add(passLabel);&#xD;
		&#xD;
		JLabel errorInfoLabel = new JLabel(&quot;&quot;);&#xD;
		errorInfoLabel.setHorizontalAlignment(SwingConstants.CENTER);&#xD;
		errorInfoLabel.setBounds(50, 300, 700, 25);&#xD;
		add(errorInfoLabel);&#xD;
		&#xD;
		userField = new JTextField();&#xD;
		userField.setBounds(260, 200, 300, 25);&#xD;
		userField.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		userField.setColumns(10);&#xD;
		userField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					passwordField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		add(userField);&#xD;
		&#xD;
		//Declaramos aquí el botón para que pueda obtener el foco de passwordField&#xD;
		JButton acceptButton = new JButton(&quot;Aceptar&quot;);&#xD;
		&#xD;
		passwordField = new JPasswordField();&#xD;
		passwordField.setColumns(10);&#xD;
		passwordField.setBounds(260, 250, 300, 25);&#xD;
		passwordField.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		passwordField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					acceptButton.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		add(passwordField);&#xD;
		&#xD;
		acceptButton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				String loginUser = userField.getText();&#xD;
				String password = String.valueOf(passwordField.getPassword());&#xD;
				if (password.equals(&quot;&quot;)) {&#xD;
					errorInfoLabel.setText(&quot;USUARIO O CONTRASEÑA ERRÓNEOS&quot;);&#xD;
				} else {&#xD;
					String loginPassword = (new User().passwordHash(String.valueOf(passwordField.getPassword())));&#xD;
					if (userLogin(conn, loginUser, loginPassword, errorInfoLabel)) {&#xD;
						frame.setExtendedState(frame.getExtendedState() | JFrame.MAXIMIZED_BOTH);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		acceptButton.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					String loginUser = userField.getText();&#xD;
					String password = String.valueOf(passwordField.getPassword());&#xD;
					if (password.equals(&quot;&quot;)) {&#xD;
						errorInfoLabel.setText(&quot;USUARIO O CONTRASEÑA ERRÓNEOS&quot;);&#xD;
					} else {&#xD;
						String loginPassword = (new User().passwordHash(String.valueOf(passwordField.getPassword())));&#xD;
						if (userLogin(conn, loginUser, loginPassword, errorInfoLabel)) {&#xD;
							frame.setExtendedState(frame.getExtendedState() | JFrame.MAXIMIZED_BOTH);&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		acceptButton.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		acceptButton.setBounds(460, 350, 100, 25);&#xD;
		add(acceptButton);&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZpeioGbEeuPkZNKCcfHxw" name="userLogin" specification="_AYzw54GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZpei4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZpejIGbEeuPkZNKCcfHxw" name="alias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZpejYGbEeuPkZNKCcfHxw" name="password">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZpejoGbEeuPkZNKCcfHxw" name="label" type="_AYLexoGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZpej4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>int userId = 0;&#xD;
		int bUnitId = 0;&#xD;
		int userTypeId = 0;&#xD;
		boolean activo = false;&#xD;
		PreparedStatement pstm = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT id, b_unit_id, user_type_id, activo &quot;&#xD;
				+ &quot;FROM \&quot;user\&quot; &quot;&#xD;
				+ &quot;WHERE user_alias = ? &quot;&#xD;
				+ &quot;AND user_password = ?;&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setString(1, alias);&#xD;
			pstm.setString(2, password);&#xD;
			results = pstm.executeQuery();&#xD;
			while(results.next()) {&#xD;
				userId = results.getInt(1);&#xD;
				bUnitId = results.getInt(2);&#xD;
				userTypeId = results.getInt(3);&#xD;
				activo = results.getBoolean(4);&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		//Usuario no existe o contraseña incorrecta&#xD;
		if (userId == 0) {&#xD;
			//Mensaje de error en el login panel&#xD;
			label.setText(&quot;USUARIO O CONTRASEÑA ERRÓNEOS&quot;);&#xD;
			return false;&#xD;
		}&#xD;
		//Usuario inactivo&#xD;
		if (activo == false) {&#xD;
			//Mensaje de error en el login panel&#xD;
			label.setText(&quot;EL USUARIO NO ESTÁ ACTIVO. &quot;&#xD;
					+ &quot;CONTACTE CON EL ADMINISTRADOR&quot;);&#xD;
			return false;&#xD;
		}&#xD;
		switch (userTypeId) {&#xD;
			case 1: //Usuario administrador&#xD;
				//Cargamos datos de la sesión&#xD;
				session.loadAllData(conn, bUnitId, userId);&#xD;
				frame.setUpWindow();&#xD;
				break;&#xD;
			case 2: //Usuario manager&#xD;
				//Cargamos datos de la sesión&#xD;
				session.loadCurrentSessionData(conn, bUnitId, userId);&#xD;
				frame.setUpWindow();&#xD;
				break;&#xD;
			case 3: //Usuario user&#xD;
				//Cargamos datos de la sesión&#xD;
				session.loadCurrentSessionData(conn, bUnitId, userId);&#xD;
				frame.setUpWindow();&#xD;
				break;&#xD;
			default: //Otros tipos de usuario no contemplados todavía&#xD;
				//Do nothing&#xD;
		}&#xD;
		String title = frame.getTitle() + &quot;        Versión &quot; + frame.getVersionNumber() + &quot;  Usuario: &quot; + alias;&#xD;
		frame.setTitle(title);	&#xD;
		return true;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AYzw4IGbEeuPkZNKCcfHxw" name="Login" method="_AZpehYGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AYzw5IGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AYzw5YGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AYzw4YGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYzw4oGbEeuPkZNKCcfHxw" name="session" type="_AQp6foGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYzw44GbEeuPkZNKCcfHxw" name="frame" type="_AQ_RoIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYzw5oGbEeuPkZNKCcfHxw" type="_AQka4IGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYzw54GbEeuPkZNKCcfHxw" name="userLogin" method="_AZpeioGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYzw6IGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYzw6YGbEeuPkZNKCcfHxw" name="alias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AY0X8IGbEeuPkZNKCcfHxw" name="password">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AY0X8YGbEeuPkZNKCcfHxw" name="label" type="_AYLexoGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AY0X8oGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_AQlpAIGbEeuPkZNKCcfHxw" name="Selector">
            <generalization xmi:id="_AY1mFYGbEeuPkZNKCcfHxw" general="_AYLexIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZS5EYGbEeuPkZNKCcfHxw" name="frame" visibility="private" type="_AQ_RoIGbEeuPkZNKCcfHxw" association="_AaADt4GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZS5E4GbEeuPkZNKCcfHxw" name="session" visibility="private" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AaADuoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZS5FYGbEeuPkZNKCcfHxw" name="logOutAction" visibility="private" isLeaf="true" type="_AYPwMoGbEeuPkZNKCcfHxw" isReadOnly="true" association="_AaADvYGbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZS5FoGbEeuPkZNKCcfHxw" value="new LogOutAction()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZS5GIGbEeuPkZNKCcfHxw" name="CompanyAction" visibility="private" isLeaf="true" type="_AYPwMoGbEeuPkZNKCcfHxw" isReadOnly="true" association="_AaAqwYGbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZS5GYGbEeuPkZNKCcfHxw" value="new CompanyAction()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZS5G4GbEeuPkZNKCcfHxw" name="bUnitAction" visibility="private" isLeaf="true" type="_AYPwMoGbEeuPkZNKCcfHxw" isReadOnly="true" association="_AaAqxIGbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZS5HIGbEeuPkZNKCcfHxw" value="new BunitAction()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZTgIYGbEeuPkZNKCcfHxw" name="userAction" visibility="private" isLeaf="true" type="_AYPwMoGbEeuPkZNKCcfHxw" isReadOnly="true" association="_AaAqx4GbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZTgIoGbEeuPkZNKCcfHxw" value="new UserAction()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZTgJIGbEeuPkZNKCcfHxw" name="eventButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaAqyoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZTgJoGbEeuPkZNKCcfHxw" name="eventTypeButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaBR0YGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZTgKIGbEeuPkZNKCcfHxw" name="areaButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaBR1IGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZTgKoGbEeuPkZNKCcfHxw" name="userButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaBR14GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZTgLIGbEeuPkZNKCcfHxw" name="bUnitButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaBR2oGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZTgLoGbEeuPkZNKCcfHxw" name="companyButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaBR3YGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZUHMIGbEeuPkZNKCcfHxw" name="logOutButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaB44YGbEeuPkZNKCcfHxw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqFcIGbEeuPkZNKCcfHxw" name="Selector" specification="_AYPwNIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqFcYGbEeuPkZNKCcfHxw" name="frame" type="_AQ_RoIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZqFcoGbEeuPkZNKCcfHxw" name="session" type="_AQp6foGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZqFc4GbEeuPkZNKCcfHxw" type="_AQlpAIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>this.frame = frame;&#xD;
		this.session = session;&#xD;
		session.setLogOutAction(logOutAction);&#xD;
		&#xD;
		setLayout(new GridLayout(8, 0, 10, 10));&#xD;
		setAlignmentX(Component.CENTER_ALIGNMENT);&#xD;
		Dimension dim = new Dimension(100,80);&#xD;
		&#xD;
		eventButton = new JButton();&#xD;
		eventButton.setMargin(new Insets(2,2,2,2));&#xD;
		eventButton.setFont(new Font(&quot;Tahoma&quot;, Font.BOLD, 14));&#xD;
		eventButton.setText(&quot;EVENTOS&quot;);&#xD;
		eventButton.setMinimumSize(dim);&#xD;
		eventButton.setPreferredSize(dim);&#xD;
		add(eventButton);&#xD;
		&#xD;
		eventTypeButton = new JButton();&#xD;
		eventTypeButton.setMargin(new Insets(2,2,2,2));&#xD;
		eventTypeButton.setFont(new Font(&quot;Tahoma&quot;, Font.BOLD, 14));&#xD;
		eventTypeButton.setText(&quot;&lt;html>&lt;center>&quot;+&quot;TIPOS&quot; + &quot;&lt;br>&quot; + &quot;DE&quot; + &quot;&lt;br>&quot; + &quot;EVENTO&quot; + &quot;&lt;/center>&lt;/html>&quot;);&#xD;
		eventTypeButton.setMinimumSize(dim);&#xD;
		eventTypeButton.setPreferredSize(dim);&#xD;
		add(eventTypeButton);&#xD;
		&#xD;
		areaButton = new JButton();&#xD;
		areaButton.setMargin(new Insets(2,2,2,2));&#xD;
		areaButton.setFont(new Font(&quot;Tahoma&quot;, Font.BOLD, 14));&#xD;
		areaButton.setText(&quot;AREAS&quot;);&#xD;
		areaButton.setPreferredSize(dim);&#xD;
		add(areaButton);&#xD;
		&#xD;
		userButton = new JButton();&#xD;
		userButton.setAction(userAction);&#xD;
		userButton.setMargin(new Insets(2,2,2,2));&#xD;
		userButton.setFont(new Font(&quot;Tahoma&quot;, Font.BOLD, 14));&#xD;
		userButton.setText(&quot;USUARIOS&quot;);&#xD;
		userButton.setPreferredSize(dim);&#xD;
		add(userButton);&#xD;
		&#xD;
		bUnitButton = new JButton();&#xD;
		bUnitButton.setAction(bUnitAction);&#xD;
		bUnitButton.setMargin(new Insets(2,2,2,2));&#xD;
		bUnitButton.setFont(new Font(&quot;Tahoma&quot;, Font.BOLD, 14));&#xD;
		bUnitButton.setText(&quot;&lt;html>&lt;center>&quot;+&quot;UNIDADES&quot; + &quot;&lt;br>&quot; + &quot;DE&quot; + &quot;&lt;br>&quot; + &quot;NEGOCIO&quot; + &quot;&lt;/center>&lt;/html>&quot;);&#xD;
		bUnitButton.setPreferredSize(dim);&#xD;
		add(bUnitButton);&#xD;
		&#xD;
		companyButton = new JButton();&#xD;
		companyButton.setAction(CompanyAction);&#xD;
		companyButton.setMargin(new Insets(2,2,2,2));&#xD;
		companyButton.setFont(new Font(&quot;Tahoma&quot;, Font.BOLD, 14));&#xD;
		companyButton.setText(&quot;EMPRESA&quot;);&#xD;
		companyButton.setPreferredSize(dim);&#xD;
		add(companyButton);&#xD;
		&#xD;
		JLabel separatorLabel = new JLabel();&#xD;
		separatorLabel.setPreferredSize(new Dimension(100,160));&#xD;
		add(separatorLabel);&#xD;
		&#xD;
		logOutButton = new JButton();&#xD;
		logOutButton.setAction(logOutAction);&#xD;
		logOutButton.setBackground(Color.GRAY);&#xD;
		logOutButton.setForeground(Color.BLACK);&#xD;
		logOutButton.setBorder(null);&#xD;
		logOutButton.setMargin(new Insets(2,2,2,2));&#xD;
		logOutButton.setFont(new Font(&quot;Tahoma&quot;, Font.BOLD, 14));&#xD;
		logOutButton.setText(&quot;LOG OUT&quot;);&#xD;
		logOutButton.setPreferredSize(dim);&#xD;
		add(logOutButton);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqFdIGbEeuPkZNKCcfHxw" name="showPanel" specification="_AY0_AIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqFdYGbEeuPkZNKCcfHxw" name="frame" type="_AQ_RoIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZqFdoGbEeuPkZNKCcfHxw" name="panel" type="_AYLexIGbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>frame.setCenterPanel(panel);&#xD;
		frame.getBasePanel().add(frame.getCenterPanel(), BorderLayout.CENTER);&#xD;
		frame.revalidate();&#xD;
		frame.repaint();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqFd4GbEeuPkZNKCcfHxw" name="hidePanel" specification="_AY0_A4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqFeIGbEeuPkZNKCcfHxw" name="frame" type="_AQ_RoIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZqFeYGbEeuPkZNKCcfHxw" name="panel" type="_AYLexIGbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>panel.setVisible(false);&#xD;
		frame.getBasePanel().remove(panel);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AYPwNIGbEeuPkZNKCcfHxw" name="Selector" method="_AZqFcIGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AYPwN4GbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AYPwOIGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_AZ1EkIGbEeuPkZNKCcfHxw">
                <body>@wbp.parser.constructor</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYPwNYGbEeuPkZNKCcfHxw" name="frame" type="_AQ_RoIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYPwNoGbEeuPkZNKCcfHxw" name="session" type="_AQp6foGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYPwOYGbEeuPkZNKCcfHxw" type="_AQlpAIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AY0_AIGbEeuPkZNKCcfHxw" name="showPanel" method="_AZqFdIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1EkYGbEeuPkZNKCcfHxw">
                <body>Asigna el panel entrado por parámetro al centerPanel del frame, lo coloca&#xD;
	 * en la zona central del basePanel y lo hace visible&#xD;
	 * @param frame ventana de la aplicación&#xD;
	 * @param panel panel a mostrar</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY0_AYGbEeuPkZNKCcfHxw" name="frame" type="_AQ_RoIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AY0_AoGbEeuPkZNKCcfHxw" name="panel" type="_AYLexIGbEeuPkZNKCcfHxw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AY0_A4GbEeuPkZNKCcfHxw" name="hidePanel" method="_AZqFd4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1EkoGbEeuPkZNKCcfHxw">
                <body>Quita la visibilidad del centerPanel y lo elimina del basePanel&#xD;
	 * @param frame ventana de la aplicación&#xD;
	 * @param panel panel a eliminar</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY0_BIGbEeuPkZNKCcfHxw" name="frame" type="_AQ_RoIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AY0_BYGbEeuPkZNKCcfHxw" name="panel" type="_AYLexIGbEeuPkZNKCcfHxw"/>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQlpAYGbEeuPkZNKCcfHxw" name="LogOutAction" visibility="private">
              <ownedComment xmi:id="_AZ1Ek4GbEeuPkZNKCcfHxw">
                <body>Acción del botón Log Out. Permite salir a la pantalla de login para entrar&#xD;
	 * al programa con un usuario distinto</body>
              </ownedComment>
              <generalization xmi:id="_AY0_CIGbEeuPkZNKCcfHxw" general="_AYPwMIGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqFeoGbEeuPkZNKCcfHxw" name="LogOutAction" specification="_AQlpAoGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZqFe4GbEeuPkZNKCcfHxw" type="_AQlpAYGbEeuPkZNKCcfHxw" direction="return"/>
                <language>java</language>
                <body>putValue(NAME, &quot;LogOutAction&quot;);&#xD;
			putValue(SHORT_DESCRIPTION, &quot;Back to login screen&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqFfIGbEeuPkZNKCcfHxw" name="actionPerformed" specification="_AY0_BoGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZqFfYGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>//Vaciamos el panel base y le quitamos visibilidad&#xD;
			frame.getBasePanel().removeAll();&#xD;
			frame.getBasePanel().setVisible(false);&#xD;
			//Reseteamos la pantalla de la aplicación para cargar de nuevo el panel de login&#xD;
			frame.initialize();&#xD;
			Login loginPanel = new Login(frame.getConn(), frame.getSession(), frame);&#xD;
			//Mostramos el panel&#xD;
			showPanel(frame, loginPanel);&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQlpAoGbEeuPkZNKCcfHxw" name="LogOutAction" method="_AZqFeoGbEeuPkZNKCcfHxw">
                <eAnnotations xmi:id="_AQlpA4GbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AQlpBIGbEeuPkZNKCcfHxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AQlpBYGbEeuPkZNKCcfHxw" type="_AQlpAYGbEeuPkZNKCcfHxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AY0_BoGbEeuPkZNKCcfHxw" name="actionPerformed" method="_AZqFfIGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AY0_B4GbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQmQEIGbEeuPkZNKCcfHxw" name="CompanyAction" visibility="private">
              <ownedComment xmi:id="_AZ1ElIGbEeuPkZNKCcfHxw">
                <body>Acción del botón Empresa. Muestra los datos de la empresa.</body>
              </ownedComment>
              <generalization xmi:id="_AY0_C4GbEeuPkZNKCcfHxw" general="_AYPwMIGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqFfoGbEeuPkZNKCcfHxw" name="CompanyAction" specification="_AQmQEYGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZqFf4GbEeuPkZNKCcfHxw" type="_AQmQEIGbEeuPkZNKCcfHxw" direction="return"/>
                <language>java</language>
                <body>putValue(NAME, &quot;CompanyAction&quot;);&#xD;
			putValue(SHORT_DESCRIPTION, &quot;Show Company screen&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqFgIGbEeuPkZNKCcfHxw" name="actionPerformed" specification="_AY0_CYGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZqFgYGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>//Vaciamos el panel base y le quitamos visibilidad&#xD;
			hidePanel(frame, frame.getCenterPanel());&#xD;
			//Creamos panel de empresa			&#xD;
			CompanyUI companyUI = new CompanyUI(session);&#xD;
			//Mostramos el panel&#xD;
			showPanel(frame, companyUI);			&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQmQEYGbEeuPkZNKCcfHxw" name="CompanyAction" method="_AZqFfoGbEeuPkZNKCcfHxw">
                <eAnnotations xmi:id="_AQmQEoGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AQmQE4GbEeuPkZNKCcfHxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AQmQFIGbEeuPkZNKCcfHxw" type="_AQmQEIGbEeuPkZNKCcfHxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AY0_CYGbEeuPkZNKCcfHxw" name="actionPerformed" method="_AZqFgIGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AY0_CoGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQmQFYGbEeuPkZNKCcfHxw" name="BunitAction" visibility="private">
              <generalization xmi:id="_AY1mEYGbEeuPkZNKCcfHxw" general="_AYPwMIGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqFgoGbEeuPkZNKCcfHxw" name="BunitAction" specification="_AQmQFoGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZqFg4GbEeuPkZNKCcfHxw" type="_AQmQFYGbEeuPkZNKCcfHxw" direction="return"/>
                <language>java</language>
                <body>putValue(NAME, &quot;BunitAction&quot;);&#xD;
			putValue(SHORT_DESCRIPTION, &quot;Show BusinessUnit screen&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqFhIGbEeuPkZNKCcfHxw" name="actionPerformed" specification="_AY0_DIGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZqFhYGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>//Vaciamos el panel base y le quitamos visibilidad&#xD;
			hidePanel(frame, frame.getCenterPanel());&#xD;
			//Creamos panel de unidad de negocio	&#xD;
			BusinessUnitUI bUnitUI = new BusinessUnitUI(session);&#xD;
			//Mostramos el panel&#xD;
			showPanel(frame, bUnitUI);&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQmQFoGbEeuPkZNKCcfHxw" name="BunitAction" method="_AZqFgoGbEeuPkZNKCcfHxw">
                <eAnnotations xmi:id="_AQmQF4GbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AQmQGIGbEeuPkZNKCcfHxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AQmQGYGbEeuPkZNKCcfHxw" type="_AQmQFYGbEeuPkZNKCcfHxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AY0_DIGbEeuPkZNKCcfHxw" name="actionPerformed" method="_AZqFhIGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AY1mEIGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQmQGoGbEeuPkZNKCcfHxw" name="UserAction" visibility="private">
              <generalization xmi:id="_AY1mFIGbEeuPkZNKCcfHxw" general="_AYPwMIGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqFhoGbEeuPkZNKCcfHxw" name="UserAction" specification="_AQm3IIGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZqFh4GbEeuPkZNKCcfHxw" type="_AQmQGoGbEeuPkZNKCcfHxw" direction="return"/>
                <language>java</language>
                <body>putValue(NAME, &quot;UserAction&quot;);&#xD;
			putValue(SHORT_DESCRIPTION, &quot;Show user screen&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqFiIGbEeuPkZNKCcfHxw" name="actionPerformed" specification="_AY1mEoGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZqFiYGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>//Vaciamos el panel base y le quitamos visibilidad&#xD;
			hidePanel(frame, frame.getCenterPanel());&#xD;
			&#xD;
//			//Marcamos la unidad de negocio del usuario que abre sesión como unidad de negocio de la sesión&#xD;
//			session.setbUnit(session.getUser().getbUnit());&#xD;
//			&#xD;
//			if (session.getUser().getbUnit().isActivo()) {	&#xD;
//				session.setbUnit(session.getUser().getbUnit());&#xD;
//			} else {&#xD;
//				session.backToLogin();;&#xD;
//			}&#xD;
			&#xD;
			//Creamos panel de usuario&#xD;
			UserUI userUI = new UserUI(session);&#xD;
			//Mostramos el panel&#xD;
			showPanel(frame, userUI);&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQm3IIGbEeuPkZNKCcfHxw" name="UserAction" method="_AZqFhoGbEeuPkZNKCcfHxw">
                <eAnnotations xmi:id="_AQm3IYGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AQm3IoGbEeuPkZNKCcfHxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AQm3I4GbEeuPkZNKCcfHxw" type="_AQmQGoGbEeuPkZNKCcfHxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AY1mEoGbEeuPkZNKCcfHxw" name="actionPerformed" method="_AZqFiIGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AY1mE4GbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_AQvaAIGbEeuPkZNKCcfHxw" name="UserUI">
            <generalization xmi:id="_AY-I8oGbEeuPkZNKCcfHxw" general="_AYLexIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZXKgIGbEeuPkZNKCcfHxw" name="OK_ACTION_UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZXKgYGbEeuPkZNKCcfHxw" value="0"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZXKgoGbEeuPkZNKCcfHxw" name="OK_ACTION_EDIT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZXKg4GbEeuPkZNKCcfHxw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZXKhIGbEeuPkZNKCcfHxw" name="OK_ACTION_NEW" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZXKhYGbEeuPkZNKCcfHxw" value="2"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZXKhoGbEeuPkZNKCcfHxw" name="session" visibility="private" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AaCf-YGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZXKiIGbEeuPkZNKCcfHxw" name="tNow" visibility="private" type="_AYH0YoGbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZXKiYGbEeuPkZNKCcfHxw" value="ToolBox.getTimestampNow()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZXKi4GbEeuPkZNKCcfHxw" name="timer" visibility="private" type="_AYRlZIGbEeuPkZNKCcfHxw" association="_AaCf_IGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZXKjYGbEeuPkZNKCcfHxw" name="panelVisible" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZXxkYGbEeuPkZNKCcfHxw" name="selectedUser" visibility="private" type="_ARBt4IGbEeuPkZNKCcfHxw" association="_AaDHAYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZXxk4GbEeuPkZNKCcfHxw" name="companyField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaDHBIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZXxlYGbEeuPkZNKCcfHxw" name="bUnitComboBox" visibility="private" type="_AYVPw4GbEeuPkZNKCcfHxw" association="_AaDHB4GbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZXxloGbEeuPkZNKCcfHxw" value="new JComboBox()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZXxmIGbEeuPkZNKCcfHxw" name="bUnitActiveFilterCheckBox" visibility="private" type="_AYXsAYGbEeuPkZNKCcfHxw" association="_AaDHCoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZXxmoGbEeuPkZNKCcfHxw" name="userComboBox" visibility="private" type="_AYVPw4GbEeuPkZNKCcfHxw" association="_AaDHDYGbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZXxm4GbEeuPkZNKCcfHxw" value="new JComboBox()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZXxnYGbEeuPkZNKCcfHxw" name="userActiveFilterCheckBox" visibility="private" type="_AYXsAYGbEeuPkZNKCcfHxw" association="_AaDuEYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZYYoIGbEeuPkZNKCcfHxw" name="userTypeComboBox" visibility="private" type="_AYVPw4GbEeuPkZNKCcfHxw" association="_AaDuFIGbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZYYoYGbEeuPkZNKCcfHxw" value="new JComboBox()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZYYo4GbEeuPkZNKCcfHxw" name="userAliasField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaDuF4GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZYYpYGbEeuPkZNKCcfHxw" name="userNameField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaDuGoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZYYp4GbEeuPkZNKCcfHxw" name="userLastNameField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaEVIYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZYYqYGbEeuPkZNKCcfHxw" name="currentPasswordField" visibility="private" type="_AYMs4YGbEeuPkZNKCcfHxw" association="_AaEVJIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZYYq4GbEeuPkZNKCcfHxw" name="newPasswordField" visibility="private" type="_AYMs4YGbEeuPkZNKCcfHxw" association="_AaEVJ4GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZYYrYGbEeuPkZNKCcfHxw" name="confirmPasswordField" visibility="private" type="_AYMs4YGbEeuPkZNKCcfHxw" association="_AaEVKoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZY_sIGbEeuPkZNKCcfHxw" name="activeCheckBox" visibility="private" type="_AYXsAYGbEeuPkZNKCcfHxw" association="_AaE8MIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZY_soGbEeuPkZNKCcfHxw" name="infoLabel" visibility="private" type="_AYLexoGbEeuPkZNKCcfHxw" association="_AaE8M4GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZY_tIGbEeuPkZNKCcfHxw" name="editButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaE8NoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZY_toGbEeuPkZNKCcfHxw" name="cancelButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaE8OYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZY_uIGbEeuPkZNKCcfHxw" name="oKButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaE8PIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZY_uoGbEeuPkZNKCcfHxw" name="newButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaFjQYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZY_vIGbEeuPkZNKCcfHxw" name="lastActive" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZZmwIGbEeuPkZNKCcfHxw" name="lastUserType" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZZmwoGbEeuPkZNKCcfHxw" name="lastUserTypeIndex" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZZmxIGbEeuPkZNKCcfHxw" name="bUnitComboList" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZZmxYGbEeuPkZNKCcfHxw" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZZmyIGbEeuPkZNKCcfHxw" name="userComboList" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZZmyYGbEeuPkZNKCcfHxw" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZZmzIGbEeuPkZNKCcfHxw" name="userTypeComboList" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZZmzYGbEeuPkZNKCcfHxw" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZZm0IGbEeuPkZNKCcfHxw" name="labelList" visibility="private" type="_AYLexoGbEeuPkZNKCcfHxw" isOrdered="true" association="_AaFjRIGbEeuPkZNKCcfHxw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZaN0IGbEeuPkZNKCcfHxw" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZaN0YGbEeuPkZNKCcfHxw" value="new ArrayList&lt;JLabel>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZaN04GbEeuPkZNKCcfHxw" name="textFieldList" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" isOrdered="true" association="_AaFjR4GbEeuPkZNKCcfHxw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZaN1IGbEeuPkZNKCcfHxw" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZaN1YGbEeuPkZNKCcfHxw" value="new ArrayList&lt;JTextField>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZaN14GbEeuPkZNKCcfHxw" name="textFieldContentList" visibility="private" isOrdered="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZaN2IGbEeuPkZNKCcfHxw" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZaN2YGbEeuPkZNKCcfHxw" value="new ArrayList&lt;String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZaN24GbEeuPkZNKCcfHxw" name="editAction" visibility="private" isLeaf="true" type="_AYPwMoGbEeuPkZNKCcfHxw" isReadOnly="true" association="_AaFjSoGbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZaN3IGbEeuPkZNKCcfHxw" value="new EditAction()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZaN3oGbEeuPkZNKCcfHxw" name="cancelAction" visibility="private" isLeaf="true" type="_AYPwMoGbEeuPkZNKCcfHxw" isReadOnly="true" association="_AaGKUIGbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZaN34GbEeuPkZNKCcfHxw" value="new CancelAction()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZaN4YGbEeuPkZNKCcfHxw" name="oKAction" visibility="private" isLeaf="true" type="_AYPwMoGbEeuPkZNKCcfHxw" isReadOnly="true" association="_AaGKU4GbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZaN4oGbEeuPkZNKCcfHxw" value="new OKAction()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZa04YGbEeuPkZNKCcfHxw" name="newAction" visibility="private" isLeaf="true" type="_AYPwMoGbEeuPkZNKCcfHxw" isReadOnly="true" association="_AaGKVoGbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZa04oGbEeuPkZNKCcfHxw" value="new NewAction()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZa05IGbEeuPkZNKCcfHxw" name="okActionSelector" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZa05YGbEeuPkZNKCcfHxw" value="UserUI.OK_ACTION_UNDEFINED"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZshsIGbEeuPkZNKCcfHxw" name="UserUI" specification="_AYY6IIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZshsYGbEeuPkZNKCcfHxw" name="session" type="_AQp6foGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZshsoGbEeuPkZNKCcfHxw" type="_AQvaAIGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>this.session = session;&#xD;
		setLayout(null);&#xD;
		panelVisible = true;&#xD;
		selectedUser = session.getUser();&#xD;
		&#xD;
		infoLabel = new JLabel();&#xD;
		infoLabel.setHorizontalAlignment(SwingConstants.CENTER);&#xD;
		infoLabel.setBounds(50, 675, 1000, 25);&#xD;
		add(infoLabel);&#xD;
		&#xD;
		oKButton = new JButton();&#xD;
		oKButton.setAction(oKAction);&#xD;
		oKButton.setBounds(727, 725, 89, 23);&#xD;
		oKButton.setEnabled(false);&#xD;
		oKButton.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					oKButton.doClick();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		add(oKButton);&#xD;
		&#xD;
		cancelButton = new JButton();&#xD;
		cancelButton.setAction(cancelAction);&#xD;
		cancelButton.setBounds(628, 725, 89, 23);&#xD;
		cancelButton.setEnabled(false);&#xD;
		add(cancelButton);&#xD;
		&#xD;
		editButton = new JButton();&#xD;
		editButton.setAction(editAction);&#xD;
		editButton.setBounds(527, 725, 89, 23);&#xD;
		add(editButton);&#xD;
		&#xD;
		newButton = new JButton();&#xD;
		newButton.setAction(newAction);&#xD;
		newButton.setBounds(427, 725, 89, 23);&#xD;
		if (session.getUser().getUserType().equals(&quot;USER&quot;)) {&#xD;
			newButton.setEnabled(false);&#xD;
		}&#xD;
		add(newButton);&#xD;
		&#xD;
		JTextPane bUnitTxt = new JTextPane();&#xD;
		bUnitTxt.setFont(new Font(&quot;Tahoma&quot;, Font.BOLD, 20));&#xD;
		bUnitTxt.setText(&quot;DATOS DE LOS USUARIOS&quot;);&#xD;
		bUnitTxt.setBackground(UIManager.getColor(this.getBackground()));&#xD;
		bUnitTxt.setEditable(false);&#xD;
		bUnitTxt.setFocusable(false);&#xD;
		bUnitTxt.setBounds(50, 50, 380, 30);&#xD;
		add(bUnitTxt);&#xD;
		&#xD;
		JLabel companyLabel = new JLabel(&quot;Empresa&quot;);&#xD;
		companyLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		companyLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		companyLabel.setBounds(50, 125, 200, 25);&#xD;
		add(companyLabel);&#xD;
		&#xD;
		JLabel selectBunitLabel = new JLabel(&quot;Unidades de negocio&quot;);&#xD;
		selectBunitLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		selectBunitLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		selectBunitLabel.setBounds(50, 175, 200, 25);&#xD;
		add(selectBunitLabel);&#xD;
		&#xD;
		JLabel userLabel = new JLabel(&quot;Usuarios&quot;);&#xD;
		userLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		userLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		userLabel.setBounds(50, 225, 200, 25);&#xD;
		add(userLabel);&#xD;
		&#xD;
		JLabel userTypeLabel = new JLabel(&quot;Tipo de usuario&quot;);&#xD;
		userTypeLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		userTypeLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		userTypeLabel.setBounds(50, 275, 200, 25);&#xD;
		add(userTypeLabel);&#xD;
		&#xD;
		JLabel userAliasLabel = new JLabel(&quot;Alias de usuario&quot;);&#xD;
		userAliasLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		userAliasLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		userAliasLabel.setBounds(50, 325, 200, 25);&#xD;
		add(userAliasLabel);&#xD;
		&#xD;
		JLabel userNameLabel = new JLabel(&quot;Nombre&quot;);&#xD;
		userNameLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		userNameLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		userNameLabel.setBounds(50, 375, 200, 25);&#xD;
		add(userNameLabel);&#xD;
		&#xD;
		JLabel userLastNameLabel = new JLabel(&quot;Apellido&quot;);&#xD;
		userLastNameLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		userLastNameLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		userLastNameLabel.setBounds(50, 425, 200, 25);&#xD;
		add(userLastNameLabel);&#xD;
		&#xD;
		JLabel currentPassLabel = new JLabel(&quot;Password actual&quot;);&#xD;
		currentPassLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		currentPassLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		currentPassLabel.setBounds(50, 475, 200, 25);&#xD;
		add(currentPassLabel);&#xD;
		&#xD;
		JLabel newPassLabel = new JLabel(&quot;Nuevo password&quot;);&#xD;
		newPassLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		newPassLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		newPassLabel.setBounds(50, 525, 200, 25);&#xD;
		add(newPassLabel);&#xD;
		&#xD;
		JLabel confirmPassLabel = new JLabel(&quot;Confirmar password&quot;);&#xD;
		confirmPassLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		confirmPassLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		confirmPassLabel.setBounds(50, 575, 200, 25);&#xD;
		add(confirmPassLabel);&#xD;
		&#xD;
		JLabel activaLabel = new JLabel(&quot;Activo&quot;);&#xD;
		activaLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		activaLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		activaLabel.setBounds(50, 625, 200, 25);&#xD;
		add(activaLabel);&#xD;
		&#xD;
		companyField = new JTextField();&#xD;
		companyField.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		companyField.setBackground(UIManager.getColor(new JPanel().getBackground()));&#xD;
		companyField.setBounds(260, 125, 400, 25);&#xD;
		companyField.setText(session.getbUnit().get().getNombre());&#xD;
		companyField.setEditable(false);&#xD;
		textFieldList.add(companyField);&#xD;
		textFieldContentList.add(session.getbUnit().get().getNombre());&#xD;
		add(companyField);&#xD;
		&#xD;
		userAliasField = new JTextField();&#xD;
		userAliasField.setText(selectedUser.getUserAlias());&#xD;
		userAliasField.setEditable(false);&#xD;
		userAliasField.setColumns(10);&#xD;
		userAliasField.setBounds(260, 325, 400, 25);&#xD;
		userAliasField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					userNameField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(userAliasField);&#xD;
		textFieldContentList.add(selectedUser.getUserAlias());&#xD;
		add(userAliasField);&#xD;
		&#xD;
		userNameField = new JTextField();&#xD;
		userNameField.setText(selectedUser.getNombre());&#xD;
		userNameField.setEditable(false);&#xD;
		userNameField.setColumns(10);&#xD;
		userNameField.setBounds(260, 375, 400, 25);&#xD;
		userNameField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					userLastNameField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(userNameField);&#xD;
		textFieldContentList.add(selectedUser.getNombre());&#xD;
		add(userNameField);&#xD;
		&#xD;
		userLastNameField = new JTextField();&#xD;
		userLastNameField.setText(selectedUser.getApellido());&#xD;
		userLastNameField.setEditable(false);&#xD;
		userLastNameField.setColumns(10);&#xD;
		userLastNameField.setBounds(260, 425, 400, 25);&#xD;
		userLastNameField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					currentPasswordField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(userLastNameField);&#xD;
		textFieldContentList.add(selectedUser.getApellido());&#xD;
		add(userLastNameField);&#xD;
		&#xD;
		activeCheckBox = new JCheckBox();&#xD;
		activeCheckBox.setBounds(260, 625, 100, 25);&#xD;
		activeCheckBox.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		activeCheckBox.setSelected(selectedUser.isActivo());&#xD;
		activeCheckBox.setEnabled(false);&#xD;
		activeCheckBox.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyTyped(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_SPACE) {&#xD;
					activeCheckBox.setSelected(activeCheckBox.isSelected() ? false : true);&#xD;
				}&#xD;
			}&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					oKButton.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		lastActive = activeCheckBox.isSelected();&#xD;
		add(activeCheckBox);&#xD;
		&#xD;
		bUnitActiveFilterCheckBox = new JCheckBox(&quot; solo activas&quot;);&#xD;
		bUnitActiveFilterCheckBox.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		bUnitActiveFilterCheckBox.setBounds(666, 175, 150, 25);&#xD;
		bUnitActiveFilterCheckBox.addItemListener(new BunitCheckBoxListener());&#xD;
		bUnitActiveFilterCheckBox.setSelected(session.getbUnit().isActivo() ? true : false);&#xD;
		if (!session.getUser().getUserType().equals(&quot;ADMIN&quot;)) {&#xD;
			bUnitActiveFilterCheckBox.setEnabled(false);&#xD;
		}&#xD;
		add(bUnitActiveFilterCheckBox);&#xD;
		&#xD;
		bUnitComboList = getBunitComboBoxItemsFromSession(bUnitActiveFilterCheckBox.isSelected());&#xD;
		bUnitComboBox = new JComboBox(bUnitComboList);&#xD;
		bUnitComboBox.setSelectedIndex(getSelectedBunitIndexFromArray(bUnitComboList));&#xD;
		bUnitComboBox.setBounds(260, 175, 400, 25);&#xD;
		bUnitComboBox.addItemListener(new BunitComboListener());&#xD;
		bUnitComboBox.setEditable(false);&#xD;
		ToolBox.setBlackForeground(bUnitComboBox);&#xD;
		bUnitComboBox.setBackground(Color.WHITE);&#xD;
		add(bUnitComboBox);&#xD;
		if (!session.getUser().getUserType().equals(&quot;ADMIN&quot;)) {&#xD;
			bUnitComboBox.setEnabled(false);&#xD;
		}&#xD;
		&#xD;
		userActiveFilterCheckBox = new JCheckBox(&quot; solo activos&quot;);&#xD;
		userActiveFilterCheckBox.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		userActiveFilterCheckBox.setBounds(666, 225, 150, 25);&#xD;
		userActiveFilterCheckBox.addItemListener(new UserCheckBoxListener());&#xD;
		userActiveFilterCheckBox.setSelected(session.getbUnit().isActivo() ? true : false);&#xD;
		add(userActiveFilterCheckBox);&#xD;
		&#xD;
		userComboList = getUserComboBoxItemsFromSession(userActiveFilterCheckBox.isSelected());&#xD;
		//Si la lista está vacía&#xD;
		if (userComboList.length == 0) {&#xD;
			userComboList = new String[1];&#xD;
			userComboList[0] = &quot;&lt;Ningún usuario seleccionable>&quot;;&#xD;
		}		&#xD;
		userComboBox = new JComboBox(userComboList);&#xD;
		userComboBox.setSelectedIndex(getSelectedUserIndexFromArray(userComboList, true));&#xD;
		userComboBox.setBounds(260, 225, 400, 25);&#xD;
		userComboBox.addItemListener(new UserComboListener());&#xD;
		userComboBox.setEditable(false);&#xD;
		ToolBox.setBlackForeground(userComboBox);&#xD;
		userComboBox.setBackground(Color.WHITE);&#xD;
		add(userComboBox);&#xD;
		if (session.getUser().getUserType().equals(&quot;USER&quot;)) {&#xD;
			userComboBox.setEnabled(false);&#xD;
		}&#xD;
		&#xD;
		userTypeComboList = getUserTypeComboBoxItemsFromSession();&#xD;
		userTypeComboBox = new JComboBox(userTypeComboList);&#xD;
		userTypeComboBox.setSelectedIndex(getSelectedUserTypeIndexFromArray(userTypeComboList));&#xD;
		userTypeComboBox.setBounds(260, 275, 400, 25);&#xD;
		userTypeComboBox.addItemListener(new UserTypeComboListener());&#xD;
		userTypeComboBox.setEditable(false);&#xD;
		userTypeComboBox.setEnabled(false);&#xD;
		ToolBox.setBlackForeground(userTypeComboBox);&#xD;
		userTypeComboBox.setBackground(Color.WHITE);&#xD;
		add(userTypeComboBox);&#xD;
		lastUserType = userTypeComboBox.getSelectedItem().toString();&#xD;
		lastUserTypeIndex = getSelectedItemIndex(userTypeComboList, lastUserType);&#xD;
		&#xD;
		currentPasswordField = new JPasswordField();&#xD;
		currentPasswordField.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		currentPasswordField.setColumns(10);&#xD;
		currentPasswordField.setBounds(260, 475, 400, 25);&#xD;
		currentPasswordField.setEditable(false);&#xD;
		currentPasswordField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					newPasswordField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		add(currentPasswordField);&#xD;
		&#xD;
		newPasswordField = new JPasswordField();&#xD;
		newPasswordField.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		newPasswordField.setColumns(10);&#xD;
		newPasswordField.setBounds(260, 525, 400, 25);&#xD;
		newPasswordField.setEditable(false);&#xD;
		newPasswordField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					confirmPasswordField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		add(newPasswordField);&#xD;
		&#xD;
		confirmPasswordField = new JPasswordField();&#xD;
		confirmPasswordField.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		confirmPasswordField.setColumns(10);&#xD;
		confirmPasswordField.setBounds(260, 575, 400, 25);&#xD;
		confirmPasswordField.setEditable(false);&#xD;
		confirmPasswordField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					activeCheckBox.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		add(confirmPasswordField);&#xD;
		&#xD;
		JLabel maxCharsLabel = new JLabel(&quot;Max: 20 caracteres&quot;);&#xD;
		maxCharsLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel.setBounds(670, 325, 146, 25);&#xD;
		maxCharsLabel.setVisible(false);&#xD;
		labelList.add(maxCharsLabel);&#xD;
		add(maxCharsLabel);&#xD;
		&#xD;
		JLabel maxCharsLabel2 = new JLabel(&quot;Max: 50 caracteres&quot;);&#xD;
		maxCharsLabel2.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel2.setBounds(670, 375, 146, 25);&#xD;
		maxCharsLabel2.setVisible(false);&#xD;
		labelList.add(maxCharsLabel2);&#xD;
		add(maxCharsLabel2);&#xD;
		&#xD;
		JLabel maxCharsLabel3 = new JLabel(&quot;Max: 50 caracteres&quot;);&#xD;
		maxCharsLabel3.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel3.setBounds(670, 425, 146, 25);&#xD;
		maxCharsLabel3.setVisible(false);&#xD;
		labelList.add(maxCharsLabel3);&#xD;
		add(maxCharsLabel3);&#xD;
		&#xD;
		JLabel maxCharsLabel4 = new JLabel(&quot;Min: 8 caracteres&quot;);&#xD;
		maxCharsLabel4.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel4.setBounds(670, 515, 146, 25);&#xD;
		add(maxCharsLabel4);&#xD;
		&#xD;
		JLabel maxCharsLabel5 = new JLabel(&quot;Max: 25 caracteres [a-z], [A-Z], [0-9], [*!$%&amp;@#^]&quot;);&#xD;
		maxCharsLabel5.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel5.setBounds(670, 535, 380, 25);&#xD;
		add(maxCharsLabel5);&#xD;
		&#xD;
		/*Iniciamos la comprobación periódica de actualizaciones&#xD;
		* Se realiza 2 veces por cada comprobación de los cambios en la base de datos que hace&#xD;
		* el objeto session. Esto evita que si se produce la comprobación de datos que hace cada panel&#xD;
		* cuando la actualización de datos que hace el objeto session aún no ha finalizado, se considere&#xD;
		* por error que no había cambios.&#xD;
		* Existe la posibilidad de que eso ocurra porque se comprueban y actualizan los datos de cada tabla&#xD;
		* de manera consecutiva. Si a media actualización de los datos, un panel comprueba los datos que le&#xD;
		* atañen y su actualización aún no se ha hecho, no los actualizará. Además, el registro de cambios&#xD;
		* interno del objeto session se sobreescribirá en cuanto inicie una nueva comprobación, y el panel&#xD;
		* nunca podrá reflejar los cambios. Eso pasaría si la actualización del panel se hace al mismo ritmo&#xD;
		* o más lenta que la comprobación de los datos que hace el objeto session.&#xD;
		*/&#xD;
		timer = new Timer();&#xD;
		TimerTask task = new TimerJob();&#xD;
		timer.scheduleAtFixedRate(task, 1000, 30000);&#xD;
		&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZshs4GbEeuPkZNKCcfHxw" name="getBunitComboBoxItemsFromSession" specification="_AQwoIIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZshtIGbEeuPkZNKCcfHxw" name="active">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZshtYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZshtoGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;String> tempList = new ArrayList&lt;String>();&#xD;
		for (BusinessUnit bUnit: session.getCompany().getBusinessUnits()) {&#xD;
			if (active) {&#xD;
				if (bUnit.isActivo()) {&#xD;
					tempList.add(bUnit.getNombre());&#xD;
				}&#xD;
			} else {&#xD;
				tempList.add(bUnit.getNombre());&#xD;
			}&#xD;
		}&#xD;
		Object[] object = (Object[]) tempList.toArray();&#xD;
		String[] itemList = new String[object.length];&#xD;
		for (int i = 0; i &lt; object.length; i++) {&#xD;
			itemList[i] = object[i].toString();&#xD;
		}&#xD;
		Arrays.sort(itemList);&#xD;
		return itemList;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZsht4GbEeuPkZNKCcfHxw" name="getSelectedBunitIndexFromArray" specification="_AQwoJYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZshuIGbEeuPkZNKCcfHxw" name="array">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZshuYGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZshuoGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>for (int i = 0; i &lt; array.length; i++) {&#xD;
			if (array[i].equals(session.getbUnit().getNombre())) {&#xD;
				return i;&#xD;
			}&#xD;
		}&#xD;
		return 0;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZshu4GbEeuPkZNKCcfHxw" name="getUserComboBoxItemsFromSession" specification="_AQwoKYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZshvIGbEeuPkZNKCcfHxw" name="active">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZshvYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZshvoGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;String> tempList = new ArrayList&lt;String>();&#xD;
		for (User user : session.getbUnit().getUsers()) {&#xD;
			if (active) {&#xD;
				if (user.isActivo()) {&#xD;
					tempList.add(user.getUserAlias());&#xD;
				}&#xD;
			} else {&#xD;
				tempList.add(user.getUserAlias());&#xD;
			}&#xD;
		}&#xD;
		Object[] object = (Object[]) tempList.toArray();&#xD;
		String[] itemList = new String[object.length];&#xD;
		for (int i = 0; i &lt; object.length; i++) {&#xD;
			itemList[i] = object[i].toString();&#xD;
		}&#xD;
		Arrays.sort(itemList);&#xD;
		return itemList;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZshv4GbEeuPkZNKCcfHxw" name="getSelectedUserIndexFromArray" specification="_AQxPMoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZshwIGbEeuPkZNKCcfHxw" name="array">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZshwYGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZshwoGbEeuPkZNKCcfHxw" name="firstSearch">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZshw4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>if (firstSearch) {&#xD;
			for (int i = 0; i &lt; array.length; i++) {&#xD;
				if (array[i].equals(session.getUser().getUserAlias())) {&#xD;
					selectedUser = buildUserSelected(new User().getUserByAlias(session.getbUnit(), array[i]));&#xD;
					firstSearch = false;&#xD;
					return i;&#xD;
				}&#xD;
			} &#xD;
		} else {&#xD;
			for (int i = 0; i &lt; array.length; i++) {&#xD;
				if (array[i].equals(userAliasField.getText())) {&#xD;
					selectedUser = buildUserSelected(new User().getUserByAlias(session.getbUnit(), array[i]));&#xD;
					return i;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		selectedUser = buildUserSelected(new User().getUserByAlias(session.getbUnit(), array[0]));&#xD;
		return 0;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZshxIGbEeuPkZNKCcfHxw" name="buildUserSelected" specification="_AYY6JYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZshxYGbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZshxoGbEeuPkZNKCcfHxw" type="_ARBt4IGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>if (user == null) {&#xD;
			user = new User(-1, session.getbUnit(), &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, false);&#xD;
		}&#xD;
		return user;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZshx4GbEeuPkZNKCcfHxw" name="getUserTypeComboBoxItemsFromSession" specification="_AQxPN4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZshyIGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZshyYGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>String[] fullList = TypesStatesContainer.getuType().getUserTypesArray();&#xD;
		if (selectedUser.getId() == -1 &amp;&amp; okActionSelector != UserUI.OK_ACTION_NEW) {&#xD;
			String[] emptyList = {&quot;&quot;};&#xD;
			return emptyList;&#xD;
		} else {&#xD;
			return fullList;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZshyoGbEeuPkZNKCcfHxw" name="getSelectedUserTypeIndexFromArray" specification="_AQxPO4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZshy4GbEeuPkZNKCcfHxw" name="array">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZshzIGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZshzYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>for (int i = 0; i &lt; array.length; i++) {&#xD;
			if (selectedUser.getUserType().equals(array[i])) {&#xD;
				return i;&#xD;
			}&#xD;
		}&#xD;
		return 0;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZshzoGbEeuPkZNKCcfHxw" name="getSelectedItemIndex" specification="_AQxPP4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZshz4GbEeuPkZNKCcfHxw" name="itemList">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZsh0IGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZsh0YGbEeuPkZNKCcfHxw" name="itemValue">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZsh0oGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>for (int i = 0; i &lt; itemList.length; i++) {&#xD;
			if (itemList[i].equals(itemValue)) {&#xD;
				return i;&#xD;
			}&#xD;
		}&#xD;
		return 0;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZsh04GbEeuPkZNKCcfHxw" name="populateUserFields" specification="_AQx2QYGbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>companyField.setText(session.getCompany().getNombre());&#xD;
		userTypeComboList = getUserTypeComboBoxItemsFromSession();&#xD;
		userTypeComboBox.setModel(new DefaultComboBoxModel(userTypeComboList));&#xD;
		userTypeComboBox.setSelectedIndex(getSelectedUserTypeIndexFromArray(userTypeComboList));&#xD;
		userAliasField.setText(selectedUser.getUserAlias());&#xD;
		userNameField.setText(selectedUser.getNombre());&#xD;
		userLastNameField.setText(selectedUser.getApellido());&#xD;
		//Aunque no es un textfield, el valor de activeCheckBox también hay que mostrarlo actualizado&#xD;
		activeCheckBox.setSelected(selectedUser.isActivo());&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZsh1IGbEeuPkZNKCcfHxw" name="updateDataCache" specification="_AQx2QoGbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>//Vaciamos la lista de datos del caché de datos&#xD;
		textFieldContentList.clear();&#xD;
		//Añadimos los nuevos datos&#xD;
		for (int i = 0; i &lt; textFieldList.size(); i++) {&#xD;
			textFieldContentList.add(textFieldList.get(i).getText());&#xD;
		}&#xD;
		//Guardamos el valor del ckeckbox &quot;Activa&quot;&#xD;
		lastActive = session.getbUnit().isActivo();&#xD;
		//Guardamos el valor de userTypeComboBox&#xD;
		lastUserType = userTypeComboBox.getSelectedItem().toString();&#xD;
		lastUserTypeIndex = getSelectedItemIndex(userTypeComboList, lastUserType);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZsh1YGbEeuPkZNKCcfHxw" name="editableDataOn" specification="_AQx2Q4GbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>//Activar visibilidad de etiquetas de longitud máxima de datos&#xD;
		for (JLabel label : labelList) {&#xD;
			label.setVisible(true);&#xD;
		}&#xD;
		//Datos editables&#xD;
		for (JTextField tField : textFieldList) {&#xD;
			if (tField != companyField) {&#xD;
				tField.setEditable(true);&#xD;
				tField.setBackground(Color.WHITE);&#xD;
			}&#xD;
		}&#xD;
		//El usuario administrador por defecto no puede cambiar su condición de administrador&#xD;
		//Un usuario de tipo user no puede cambiar su tipo de usuario&#xD;
		if (session.getUser().getId() == 1 &amp;&amp; selectedUser.getId() == 1 || session.getUser().getUserType().equals(&quot;USER&quot;)) {&#xD;
			userTypeComboBox.setEnabled(false);&#xD;
		} else {&#xD;
			userTypeComboBox.setEnabled(true);&#xD;
		}&#xD;
		&#xD;
		currentPasswordField.setEditable(true);&#xD;
		newPasswordField.setEditable(true);&#xD;
		confirmPasswordField.setEditable(true);&#xD;
		//Habilitamos checkbox &quot;Activa&quot; si el usuario de la sesión no es de tipo user y si no es el administrador por defecto&#xD;
		if (session.getUser().getUserType().equals(&quot;USER&quot;) || (session.getUser().getId() == 1 &amp;&amp; selectedUser.getId() == 1)) {&#xD;
			activeCheckBox.setEnabled(false);&#xD;
		} else {&#xD;
			activeCheckBox.setEnabled(true);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZsh1oGbEeuPkZNKCcfHxw" name="editableDataOff" specification="_AQx2RIGbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>//Quitar visibilidad de etiquetas de longitud máxima de datos&#xD;
		for (JLabel label : labelList) {&#xD;
			label.setVisible(false);&#xD;
		}&#xD;
		//Datos no editables&#xD;
		for (JTextField tField : textFieldList) {&#xD;
			tField.setBackground(UIManager.getColor(new JPanel().getBackground()));&#xD;
			tField.setEditable(false);&#xD;
		}&#xD;
		userTypeComboBox.setEnabled(false);&#xD;
		//Password fields no editables&#xD;
		currentPasswordField.setEditable(false);&#xD;
		currentPasswordField.setBackground(UIManager.getColor(new JPanel().getBackground()));&#xD;
		newPasswordField.setEditable(false);&#xD;
		newPasswordField.setBackground(UIManager.getColor(new JPanel().getBackground()));&#xD;
		confirmPasswordField.setEditable(false);&#xD;
		confirmPasswordField.setBackground(UIManager.getColor(new JPanel().getBackground()));&#xD;
		//Vaciamos los passwordFields&#xD;
		currentPasswordField.setText(&quot;&quot;);&#xD;
		newPasswordField.setText(&quot;&quot;);&#xD;
		confirmPasswordField.setText(&quot;&quot;);&#xD;
		//Deshabilitamos checkbox &quot;Activa&quot;&#xD;
		activeCheckBox.setEnabled(false);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZsh14GbEeuPkZNKCcfHxw" name="afterNewOrEditUser" specification="_AQx2RYGbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>//Hacemos backup del contenido de los datos del formulario&#xD;
		updateDataCache();&#xD;
		//Formulario no editable&#xD;
		editableDataOff();&#xD;
		&#xD;
		//Cambio de estado de los botones y los combobox&#xD;
		//Impedimos que un usuario manager pueda editar usuarios admin tras cancelar&#xD;
		if (session.getUser().getUserType().equals(&quot;MANAGER&quot; )) {&#xD;
			verifyManagerEditConditions();&#xD;
		} else {&#xD;
			editButton.setEnabled(true);&#xD;
			disableEditIfDummyUserSelected();&#xD;
		}&#xD;
		newButton.setEnabled(true);&#xD;
		if (session.getUser().getUserType().equals(&quot;ADMIN&quot;)) {&#xD;
			bUnitComboBox.setEnabled(true);&#xD;
			bUnitActiveFilterCheckBox.setEnabled(true);&#xD;
		}&#xD;
		//Impedimos que un usuario user pueda seleccionar usuarios tras cancelar&#xD;
		if (!session.getUser().getUserType().equals(&quot;USER&quot;)) {&#xD;
			userComboBox.setEnabled(true);&#xD;
			userActiveFilterCheckBox.setEnabled(true);&#xD;
		}&#xD;
		userTypeComboBox.setEnabled(false);&#xD;
		oKButton.setEnabled(false);&#xD;
		cancelButton.setEnabled(false);&#xD;
		&#xD;
		//El selector de acción retorna al estado sin definir&#xD;
		okActionSelector = UserUI.OK_ACTION_UNDEFINED;&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZsh2IGbEeuPkZNKCcfHxw" name="testData" specification="_AYY6KIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZsh2YGbEeuPkZNKCcfHxw" name="userToCheck" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZsh2oGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>//Comprobamos que los datos no exceden el tamaño máximo, no llegan al mínimo, o no hay nombres duplicados&#xD;
		Boolean errorLength = false;&#xD;
		Boolean oldPasswordOk = false;&#xD;
		String errorAliasText = &quot;YA EXISTE UN USUARIO CON ESE ALIAS&quot;;&#xD;
		String errorLengthText = &quot;TAMAÑO MÁXIMO DE TEXTO SUPERADO O FALTAN DATOS.&quot;;&#xD;
		String errorCurrentPassText = &quot;SI DESEA GUARDAR UNA NUEVA CONTRASEÑA, INTRODUZCA LA CONTRASEÑA ACTUAL&quot;;&#xD;
		String error2CurrentPassText = &quot;CONTRASEÑA ACTUAL INCORRECTA&quot;;&#xD;
		String errorSamePasswordText = &quot;LA NUEVA CONTRASEÑA NO PUEDE SER IGUAL A LA CONTRASEÑA ACTUAL&quot;;&#xD;
		String errorPassLengthText = &quot;CONTRASEÑA DE LONGITUD INCORRECTA.&quot;;&#xD;
		String errorPassTypeText = &quot;LA NUEVA CONTRASEÑA DEBE INCLUIR AL MENOS UNA MAYÚSCULA,&quot;&#xD;
				+ &quot;UNA MINÚSCULA, UN DÍGITO Y UN CARACTER ESPECIAL&quot;;&#xD;
		String errorPassMatchText = &quot;LA NUEVA CONTRASEÑA Y LA CONFIRMACIÓN NO COINCIDEN&quot;;&#xD;
		&#xD;
		//Si estamos creando un nuevo usuario y el alias del usuario creado ya existe en alguna unidad de negocio,&#xD;
		//no se permite la asignación del alias. Los alias son únicos en la base de datos, no pueden tener duplicados&#xD;
		if (okActionSelector == UserUI.OK_ACTION_NEW) {&#xD;
			List&lt;BusinessUnit> bUnitList = new BusinessUnit().getBusinessUnitsFromDB(session.getConnection(),&#xD;
					session.getCompany());&#xD;
			for (BusinessUnit unit : bUnitList) {&#xD;
				List&lt;User> userList = new User().getUsersFromDB(session.getConnection(), unit);&#xD;
				for (User user : userList) {&#xD;
					if (user.getUserAlias().equals(userToCheck.getUserAlias())) {&#xD;
						infoLabel.setText(errorAliasText);&#xD;
						userAliasField.setBackground(Color.YELLOW);&#xD;
						return false;&#xD;
					}&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		//Comprobamos la longitud de los datos&#xD;
		if (userToCheck.getUserAlias().length() > 20 || userToCheck.getUserAlias().length() == 0) {&#xD;
			userAliasField.setBackground(Color.YELLOW);&#xD;
			errorLength = true;&#xD;
		}	&#xD;
		if (userToCheck.getNombre().length() > 50 || userToCheck.getNombre().length() == 0) {&#xD;
			userNameField.setBackground(Color.YELLOW);&#xD;
			errorLength = true;&#xD;
		}&#xD;
		if (userToCheck.getApellido().length() > 50 || userToCheck.getApellido().length() == 0) {&#xD;
			userLastNameField.setBackground(Color.YELLOW);&#xD;
			errorLength = true;&#xD;
		}&#xD;
		//Si hay un error de longitud de datos, mensaje de error y retornamos false&#xD;
		if (errorLength) {&#xD;
			infoLabel.setText(errorLengthText);&#xD;
			return false;&#xD;
		}&#xD;
		//Si estamos creando un nuevo usuario&#xD;
		if (okActionSelector == UserUI.OK_ACTION_NEW) {&#xD;
			//Comprobamos que la nueva contraseña tiene el tamaño correcto&#xD;
			if (userToCheck.getPassword().length() > 25 || userToCheck.getPassword().length() &lt; 8) {&#xD;
				newPasswordField.setBackground(Color.YELLOW);&#xD;
				infoLabel.setText(errorPassLengthText);&#xD;
				return false;&#xD;
			}&#xD;
			//Comprobamos que la contraseña solo incluye caracteres permitidos&#xD;
			if (!userToCheck.isAValidPassword(userToCheck.getPassword())) {&#xD;
				newPasswordField.setBackground(Color.YELLOW);&#xD;
				infoLabel.setText(errorPassTypeText);&#xD;
				return false;&#xD;
			}&#xD;
			//Comprobamos que la nueva contraseña y la confirmación son iguales&#xD;
			if (!String.valueOf(newPasswordField.getPassword())&#xD;
					.equals(String.valueOf(confirmPasswordField.getPassword()))) {&#xD;
				newPasswordField.setBackground(Color.YELLOW);&#xD;
				confirmPasswordField.setBackground(Color.YELLOW);&#xD;
				infoLabel.setText(errorPassMatchText);&#xD;
				return false;&#xD;
			} &#xD;
		}&#xD;
		//Si estamos editando un usuario existente&#xD;
		if (okActionSelector == UserUI.OK_ACTION_EDIT) {&#xD;
			//Si hay datos en currentPasswordField, newPasswordField o confirmPasswordField&#xD;
			if (!String.valueOf(currentPasswordField.getPassword()).equals(&quot;&quot;)&#xD;
					|| !String.valueOf(newPasswordField.getPassword()).equals(&quot;&quot;)&#xD;
					|| !String.valueOf(confirmPasswordField.getPassword()).equals(&quot;&quot;)) {&#xD;
				//Comprobamos la contraseña actual del usuario seleccionado&#xD;
				//Si currentPasswordField está vacío, error&#xD;
				if (String.valueOf(currentPasswordField.getPassword()).equals(&quot;&quot;)) {&#xD;
					currentPasswordField.setBackground(Color.YELLOW);&#xD;
					infoLabel.setText(errorCurrentPassText);&#xD;
					return false;&#xD;
				//Si currentPasswordField no está vacío, comparamos con la contraseña del usuario seleccionado&#xD;
				} else {&#xD;
					String hashedPass = new User().passwordHash(String.valueOf(currentPasswordField.getPassword()));&#xD;
					//Si no coinciden, error&#xD;
					if (!hashedPass.equals(String.valueOf(selectedUser.getPassword()))) {&#xD;
						currentPasswordField.setBackground(Color.YELLOW);&#xD;
						infoLabel.setText(error2CurrentPassText);&#xD;
						return false;&#xD;
					} &#xD;
				}&#xD;
				//Comprobamos que la nueva contraseña tiene el tamaño correcto&#xD;
				if (userToCheck.getPassword().length() > 25 || userToCheck.getPassword().length() &lt; 8) {&#xD;
					newPasswordField.setBackground(Color.YELLOW);&#xD;
					infoLabel.setText(errorPassLengthText);&#xD;
					return false;&#xD;
				}&#xD;
				//Comprobamos que la nueva contraseña y la contraseña actual no son iguales&#xD;
				String hashedPass = new User().passwordHash(String.valueOf(newPasswordField.getPassword()));&#xD;
				if (hashedPass.equals(String.valueOf(selectedUser.getPassword()))) {&#xD;
					newPasswordField.setBackground(Color.YELLOW);&#xD;
					infoLabel.setText(errorSamePasswordText);&#xD;
					return false;&#xD;
				}&#xD;
				//Comprobamos que la contraseña solo incluye caracteres permitidos&#xD;
				if (!userToCheck.isAValidPassword(userToCheck.getPassword())) {&#xD;
					newPasswordField.setBackground(Color.YELLOW);&#xD;
					infoLabel.setText(errorPassTypeText);&#xD;
					return false;&#xD;
				}&#xD;
				//Comprobamos que la nueva contraseña y la confirmación son iguales&#xD;
				if (!String.valueOf(newPasswordField.getPassword())&#xD;
						.equals(String.valueOf(confirmPasswordField.getPassword()))) {&#xD;
					newPasswordField.setBackground(Color.YELLOW);&#xD;
					confirmPasswordField.setBackground(Color.YELLOW);&#xD;
					infoLabel.setText(errorPassMatchText);&#xD;
					return false;&#xD;
				} &#xD;
			} &#xD;
		}&#xD;
		return true;		&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZsh24GbEeuPkZNKCcfHxw" name="refreshBunitComboBox" specification="_AQx2RoGbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>bUnitComboList = getBunitComboBoxItemsFromSession(bUnitActiveFilterCheckBox.isSelected());&#xD;
		bUnitComboBox.setModel(new DefaultComboBoxModel(bUnitComboList));&#xD;
		bUnitComboBox.setSelectedIndex(getSelectedBunitIndexFromArray(bUnitComboList));&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZsh3IGbEeuPkZNKCcfHxw" name="refreshUserComboBox" specification="_AQx2R4GbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>userComboList = getUserComboBoxItemsFromSession(userActiveFilterCheckBox.isSelected());&#xD;
		//Si la lista está vacía&#xD;
		if (userComboList.length == 0) {&#xD;
			userComboList = new String[1];&#xD;
			userComboList[0] = &quot;&lt;Ningún usuario seleccionable>&quot;;&#xD;
		}&#xD;
		userComboBox.setModel(new DefaultComboBoxModel(userComboList));&#xD;
		userComboBox.setSelectedIndex(getSelectedUserIndexFromArray(userComboList, false));&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZsh3YGbEeuPkZNKCcfHxw" name="refreshUserTypeComboBox" specification="_AQx2SIGbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>//Almacenamos la anterior lista de tipos de usuario&#xD;
		lastUserType = userTypeComboBox.getSelectedItem().toString();&#xD;
		lastUserTypeIndex = getSelectedItemIndex(userTypeComboList, lastUserType);&#xD;
		//Recargamos la lista completa&#xD;
		userTypeComboList = getUserTypeComboBoxItemsFromSession();&#xD;
		//Recortamos la lista si es necesario&#xD;
		if (session.getUser().getUserType().equals(&quot;MANAGER&quot;)) {&#xD;
			String [] managerList = {userTypeComboList[1], userTypeComboList[2]};&#xD;
			userTypeComboList = managerList;&#xD;
		}&#xD;
		userTypeComboBox.setModel(new DefaultComboBoxModel(userTypeComboList));&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZsh3oGbEeuPkZNKCcfHxw" name="verifyManagerEditConditions" specification="_AQx2SYGbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>//Un usuario manager no puede editar los datos de un usuario administrador&#xD;
		if (session.getUser().getUserType().equals(&quot;MANAGER&quot;) &amp;&amp; selectedUser.getUserType().equals(&quot;ADMIN&quot;)) {&#xD;
			editButton.setEnabled(false);&#xD;
		} else if (session.getUser().getUserType().equals(&quot;MANAGER&quot;) &amp;&amp; !selectedUser.getUserType().equals(&quot;ADMIN&quot;)) {&#xD;
			editButton.setEnabled(true);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtIwIGbEeuPkZNKCcfHxw" name="verifyAdminEditConditions" specification="_AQx2SoGbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>//Si el usuario de la sesión es un usuario administrador y el usuario seleccionado no lo es, habilitamos&#xD;
		//siempre la edición del usuario seleccionado&#xD;
		if (session.getUser().getUserType().equals(&quot;ADMIN&quot;) &amp;&amp; !selectedUser.getUserType().equals(&quot;ADMIN&quot;)) {&#xD;
			editButton.setEnabled(true);&#xD;
		}&#xD;
		&#xD;
		//Los datos del usuario administrador por defecto no pueden ser modificados por ningún otro usuario administrador&#xD;
		if (session.getUser().getUserType().equals(&quot;ADMIN&quot;) &amp;&amp; session.getUser().getId() != 1 &amp;&amp; &#xD;
				selectedUser.getId() == 1) {&#xD;
			editButton.setEnabled(false);&#xD;
		} else if (session.getUser().getUserType().equals(&quot;ADMIN&quot;) &amp;&amp; session.getUser().getId() == 1) {&#xD;
			editButton.setEnabled(true);&#xD;
		}&#xD;
		&#xD;
		//Los datos de un usuario administrador solo pueden ser modificados por si mismo y por el usuario administrador&#xD;
		//por defecto&#xD;
		if (session.getUser().getUserType().equals(&quot;ADMIN&quot;) &amp;&amp; session.getUser().getId() == selectedUser.getId()) {&#xD;
			editButton.setEnabled(true);&#xD;
		} else if (session.getUser().getUserType().equals(&quot;ADMIN&quot;) &amp;&amp; session.getUser().getId() != 1 &amp;&amp;&#xD;
				selectedUser.getUserType().equals(&quot;ADMIN&quot;)) {&#xD;
			editButton.setEnabled(false);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtIwYGbEeuPkZNKCcfHxw" name="disableEditIfDummyUserSelected" specification="_AQx2S4GbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>if (selectedUser.getId() == -1) {&#xD;
			editButton.setEnabled(false);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtIwoGbEeuPkZNKCcfHxw" name="messageTest" specification="_AQx2TIGbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>String testMessage = &quot;PROBANDO MENSAJE CENTRADO EN MONITOR DE APLICACIÓN&quot;;&#xD;
//		JOptionPane testPane = new JOptionPane(testMessage, JOptionPane.WARNING_MESSAGE);&#xD;
		JFrame parentFrame = (JFrame) SwingUtilities.getRoot((Component) this);&#xD;
		&#xD;
		&#xD;
//		Rectangle rectangle = testPane.getBounds();&#xD;
//	    int paneWidth = rectangle.width;&#xD;
//	    int paneHeight = rectangle.height;&#xD;
		&#xD;
		GraphicsDevice [] displays = GraphicsEnvironment.getLocalGraphicsEnvironment().getScreenDevices();&#xD;
		GraphicsDevice currentDisplay = parentFrame.getGraphicsConfiguration().getDevice();&#xD;
		&#xD;
		Frame messageFrame = new Frame(currentDisplay.getDefaultConfiguration());&#xD;
		Rectangle frameRectangle = messageFrame.getBounds();&#xD;
	    int paneWidth = frameRectangle.width;&#xD;
	    int paneHeight = frameRectangle.height;&#xD;
		&#xD;
	    int coordinateX = currentDisplay.getDefaultConfiguration().getBounds().x;&#xD;
	    int coordinateY = currentDisplay.getDefaultConfiguration().getBounds().y;&#xD;
	    int currentWidth = 0;&#xD;
	    int currentHeight = 0;&#xD;
		//Centrado de pantalla multimonitor&#xD;
		for (int i = 0; i &lt; displays.length; i++) {&#xD;
		    if (currentDisplay.getIDstring().equals(displays[i].getIDstring())) {&#xD;
				currentWidth = currentDisplay.getDisplayMode().getWidth();&#xD;
				currentHeight = currentDisplay.getDisplayMode().getHeight();&#xD;
				messageFrame.setBounds((currentWidth - paneWidth) / 2 + coordinateX, (currentHeight - paneHeight) / 2 + coordinateY, paneWidth, paneHeight);&#xD;
		    }&#xD;
		}&#xD;
		JOptionPane.showMessageDialog(messageFrame, testMessage, &quot;Prueba&quot;, JOptionPane.WARNING_MESSAGE);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQwoIIGbEeuPkZNKCcfHxw" name="getBunitComboBoxItemsFromSession" method="_AZshs4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rrYGbEeuPkZNKCcfHxw">
                <body>Obtiene la lista de unidades de negocio cargadas en el objeto company. Serán todas las que&#xD;
	 * existan en la base de datos si el usuario que abre sesión es de tipo administrador, y solo una&#xD;
	 * (la correspondiente al usuario que abre sesión) si es un usuario de otro tipo&#xD;
	 * @param active true si se muestran solo las unidades de negocio activas, false para mostrarlas todas&#xD;
	 * @return array ordenado alfabéticamente con la lista de unidades de negocio</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQwoIYGbEeuPkZNKCcfHxw" name="active">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQwoIoGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AQwoI4GbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQwoJYGbEeuPkZNKCcfHxw" name="getSelectedBunitIndexFromArray" method="_AZsht4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rroGbEeuPkZNKCcfHxw">
                <body>Obiene el índice del elemento de bUnitComboBox que será seleccionado por defecto a partir&#xD;
	 * del array pasado por parámetro&#xD;
	 * --- CANDIDATO A REFACTOR >> MANDAR A CURRENTSESSION ---&#xD;
	 * @param array array con la lista de unidades de negocio&#xD;
	 * @return índice del elemento a seleccionar por defecto</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQwoJoGbEeuPkZNKCcfHxw" name="array">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AQwoKIGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQwoJ4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQwoKYGbEeuPkZNKCcfHxw" name="getUserComboBoxItemsFromSession" method="_AZshu4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rr4GbEeuPkZNKCcfHxw">
                <body>Obtiene la lista de usuarios de la unidad de negocio de la sesión. Serán todos los usuarios si&#xD;
	 * userActiveFilterCheckBox está deseleccionado, y solo los usuarios activos si userActiveFilterCheckBox&#xD;
	 * está seleccionado.&#xD;
	 * @param active true si se muestran solo los usuarios activos, false para mostrarlos todos&#xD;
	 * @return array ordenado alfabéticamente con la lista de usuarios</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQwoKoGbEeuPkZNKCcfHxw" name="active">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQwoK4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AQxPMIGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQxPMoGbEeuPkZNKCcfHxw" name="getSelectedUserIndexFromArray" method="_AZshv4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rsIGbEeuPkZNKCcfHxw">
                <body>Obiene el índice del elemento de userComboBox que será seleccionado por defecto a partir del array de alias de usuarios&#xD;
	 * pasado por parámetro. El alias seleccionado será asignado como usuario seleccionado.&#xD;
	 * @param array array con la lista de usuarios de la unidad de negocio de la sesión&#xD;
	 * @param firstSearch determina si se accede al método por primera vez&#xD;
	 * @return el índice que corresponda al alias del usuario que abrió sesión, o bien el índice del nuevo usuario seleccionado,&#xD;
	 * creado o editado (si no queda inactivo y el filtro de usuarios está activo), o bien 0 si el usuario no está en la lista&#xD;
	 * (se escoge el primer usuario de la lista)</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQxPM4GbEeuPkZNKCcfHxw" name="array">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AQxPNoGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQxPNIGbEeuPkZNKCcfHxw" name="firstSearch">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQxPNYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQxPN4GbEeuPkZNKCcfHxw" name="getUserTypeComboBoxItemsFromSession" method="_AZshx4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rsoGbEeuPkZNKCcfHxw">
                <body>Obtiene la lista de los tipos de usuarios definidos en el programa. Si userSelected es un usuario dummy con id -1&#xD;
	 * y no estamos creando un usuario nuevo, la lista tendrá un único elemento vacío.&#xD;
	 * @return lista de tipos de usuarios, o lista con un único elemento vacío</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQxPOIGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AQxPOYGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQxPO4GbEeuPkZNKCcfHxw" name="getSelectedUserTypeIndexFromArray" method="_AZshyoGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rs4GbEeuPkZNKCcfHxw">
                <body>Obiene el índice del elemento de userTypeComboBox que será seleccionado por defecto a partir&#xD;
	 * del array pasado por parámetro&#xD;
	 * @param array array con la lista de tipos de usuarios, o array con un único elemento vacío si&#xD;
	 * userSelected es un usuario dummy con id -1&#xD;
	 * @return índice del elemento a seleccionar por defecto</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQxPPIGbEeuPkZNKCcfHxw" name="array">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AQxPPoGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQxPPYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQxPP4GbEeuPkZNKCcfHxw" name="getSelectedItemIndex" method="_AZshzoGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rtIGbEeuPkZNKCcfHxw">
                <body>Obtiene el índice del elemento seleccionado en userTypeComboBox&#xD;
	 * @param itemList lista de valores que aparecen en userTypeComboBox&#xD;
	 * @param itemValue valor del que buscamos el índice&#xD;
	 * @return índice del valor buscado, o 0 si el valor no está en la lista</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQxPQIGbEeuPkZNKCcfHxw" name="itemList">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AQx2QIGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQxPQYGbEeuPkZNKCcfHxw" name="itemValue">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQxPQoGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQx2QYGbEeuPkZNKCcfHxw" name="populateUserFields" method="_AZsh04GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rtYGbEeuPkZNKCcfHxw">
                <body>Refresca los datos del usuario seleccionado para que se visualicen en pantalla</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AQx2QoGbEeuPkZNKCcfHxw" name="updateDataCache" method="_AZsh1IGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rtoGbEeuPkZNKCcfHxw">
                <body>Hace una copia de los datos que figuran en el formulario. Al cancelar la edición o la creación de un&#xD;
	 * nuev usuario, podremos recuperar por pantalla los datos del último usuario que estaba seleccionado</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AQx2Q4GbEeuPkZNKCcfHxw" name="editableDataOn" method="_AZsh1YGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rt4GbEeuPkZNKCcfHxw">
                <body>Habilita los campos del formulario para que pueda introducirse información. El usuario administrador por defecto&#xD;
	 * no puede cambiar su condición de administrador. Un usuario de tipo user no puede cambiar su tipo de usuario. Los&#xD;
	 * usuarios de tipo user y el administrador por defecto tampoco pueden cambiar su condición de activos.</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AQx2RIGbEeuPkZNKCcfHxw" name="editableDataOff" method="_AZsh1oGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1ruIGbEeuPkZNKCcfHxw">
                <body>Deshabilita los campos del formulario para impedir que se modifique su contenido</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AQx2RYGbEeuPkZNKCcfHxw" name="afterNewOrEditUser" method="_AZsh14GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1ruYGbEeuPkZNKCcfHxw">
                <body>Devuelve el formulario a su estado previo tras la creación o la edición de una unidad de negocio</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AQx2RoGbEeuPkZNKCcfHxw" name="refreshBunitComboBox" method="_AZsh24GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1ru4GbEeuPkZNKCcfHxw">
                <body>Actualiza el contenido del comboBox que selecciona la unidad de negocio activa</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AQx2R4GbEeuPkZNKCcfHxw" name="refreshUserComboBox" method="_AZsh3IGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rvIGbEeuPkZNKCcfHxw">
                <body>Actualiza el contenido del comboBox que selecciona los usuarios</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AQx2SIGbEeuPkZNKCcfHxw" name="refreshUserTypeComboBox" method="_AZsh3YGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rvYGbEeuPkZNKCcfHxw">
                <body>Actualiza el contenido del combobox que selecciona los tipos de usuario. Si el usuario de la sesión&#xD;
	 * es de tipo manager, y dicho usuario edita un usuario existente o crea uno nuevo, se elimina de la lista&#xD;
	 * de tipos de usuario el usuario admin porque solo puede crear usuarios de tipo manager o user.</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AQx2SYGbEeuPkZNKCcfHxw" name="verifyManagerEditConditions" method="_AZsh3oGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rvoGbEeuPkZNKCcfHxw">
                <body>Si el usuario de la sesión es de tipo manager y el usuario seleccionado no es de tipo administrador, habilita&#xD;
	 * la edición de datos del usuario seleccionado</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AQx2SoGbEeuPkZNKCcfHxw" name="verifyAdminEditConditions" method="_AZtIwIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rv4GbEeuPkZNKCcfHxw">
                <body>Si el usuario de la sesión es de tipo administrador, habilita la edición de sus propios datos y los de cualquier&#xD;
	 * otro usuario que no sea de tipo administrador. Si el usuario de la sesión es el administrador por defecto también&#xD;
	 * habilita la edición de los datos de cualquier usuario administrador.</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AQx2S4GbEeuPkZNKCcfHxw" name="disableEditIfDummyUserSelected" method="_AZtIwYGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rwIGbEeuPkZNKCcfHxw">
                <body>Si userSelected es un usuario dummy con id -1, la edición de datos se deshabilita</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AQx2TIGbEeuPkZNKCcfHxw" name="messageTest" method="_AZtIwoGbEeuPkZNKCcfHxw"/>
            <ownedOperation xmi:id="_AYY6IIGbEeuPkZNKCcfHxw" name="UserUI" method="_AZshsIGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AYY6IoGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AYY6I4GbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_AZ1rrIGbEeuPkZNKCcfHxw">
                <body>@wbp.parser.constructor</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYY6IYGbEeuPkZNKCcfHxw" name="session" type="_AQp6foGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYY6JIGbEeuPkZNKCcfHxw" type="_AQvaAIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYY6JYGbEeuPkZNKCcfHxw" name="buildUserSelected" method="_AZshxIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rsYGbEeuPkZNKCcfHxw">
                <body>Devuelve el usuario entrado por parámetro si dicho usuario no es null. Si es null, crea un usuario dummy con&#xD;
	 * un id (-1) que no existe en la base de datos para poderlo distinguir de cualquier otro usuario real&#xD;
	 * @param user objeto User, o null&#xD;
	 * @return usuario entrado por parámetro sin modificar, o un usuario vacío</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYY6JoGbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYY6J4GbEeuPkZNKCcfHxw" type="_ARBt4IGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYY6KIGbEeuPkZNKCcfHxw" name="testData" method="_AZsh2IGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1ruoGbEeuPkZNKCcfHxw">
                <body>Comprueba la corrección de los datos introducidos en el formulario. Cualquier dato incorrecto se resalta&#xD;
	 * con el fondo del campo en amarillo&#xD;
	 * @param userToCheck usuario del que se comprueban los datos&#xD;
	 * @return true si son correctos, false si no lo son</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYY6KYGbEeuPkZNKCcfHxw" name="userToCheck" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYY6KoGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQx2TYGbEeuPkZNKCcfHxw" name="BunitComboListener" visibility="private">
              <ownedComment xmi:id="_AZ1rwYGbEeuPkZNKCcfHxw">
                <body>Listener que define el comportamiento del comboBox bUnitComboBox. Cada elemento se corresponde con&#xD;
	 * las unidades de negocio de la compañía que se han cargado en la sesión. Por el nombre seleccionado&#xD;
	 * se localiza el objeto BusinessUnit al que pertenece y se asigna dicho objeto como unidad de negocio&#xD;
	 * de la sessión, reemplazando al que hubiera hasta ese momento. Si activeFilterCheckBox está seleccionado,&#xD;
	 * no se mostrarán las unidades de negocio que estén marcadas como no activas</body>
              </ownedComment>
              <interfaceRealization xmi:id="_AY8TwIGbEeuPkZNKCcfHxw" client="_AQx2TYGbEeuPkZNKCcfHxw" supplier="_AYWd5IGbEeuPkZNKCcfHxw" contract="_AYWd5IGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtIw4GbEeuPkZNKCcfHxw" name="itemStateChanged" specification="_AY8TwYGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtIxIGbEeuPkZNKCcfHxw" name="e" type="_AYWd4oGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>String item = (String) bUnitComboBox.getSelectedItem();&#xD;
			Company company = session.getCompany();&#xD;
			//Recuperamos la unidad de negocio seleccionada&#xD;
			BusinessUnit selectedBunit = new BusinessUnit().getBusinessUnitByName(company, item);			&#xD;
			//La asignamos a la sesión&#xD;
			session.setbUnit(selectedBunit);&#xD;
			//Actualizamos los usuarios de la unidad de negocio de la sesión&#xD;
			refreshUserComboBox();&#xD;
			//Mostramos los datos del usuario seleccionado&#xD;
			populateUserFields();&#xD;
			//Hacemos backup del contenido de los datos del formulario&#xD;
			updateDataCache();&#xD;
			//Vaciamos label de información&#xD;
			infoLabel.setText(&quot;&quot;);&#xD;
			&#xD;
			//Si cambiamos la unidad de negocio de la sesión, comprobamos las condiciones de edición de datos de los usuarios&#xD;
			//administradores y deshabilitamos la edición de datos si el usuario seleccionado es un usuario dummy&#xD;
			verifyAdminEditConditions();&#xD;
			disableEditIfDummyUserSelected();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AY8TwYGbEeuPkZNKCcfHxw" name="itemStateChanged" method="_AZtIw4GbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AY8TwoGbEeuPkZNKCcfHxw" name="e" type="_AYWd4oGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQydUIGbEeuPkZNKCcfHxw" name="BunitCheckBoxListener" visibility="private">
              <ownedComment xmi:id="_AZ1rwoGbEeuPkZNKCcfHxw">
                <body>Listener que define el comportamiento del checkbox bUnitActiveFilterCheckBox.&#xD;
	 * Si activamos el checkbox solo visualizaremos los usuarios de las unidades de negocio activas. Si lo deseleccionamos&#xD;
	 * visualizaremos los usuarios de todas las unidades de negocio. La visualización de usuarios está afectada también&#xD;
	 * por el propio filtro de usuarios activos.</body>
              </ownedComment>
              <interfaceRealization xmi:id="_AY8TxoGbEeuPkZNKCcfHxw" client="_AQydUIGbEeuPkZNKCcfHxw" supplier="_AYWd5IGbEeuPkZNKCcfHxw" contract="_AYWd5IGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtIxYGbEeuPkZNKCcfHxw" name="itemStateChanged" specification="_AY8Tx4GbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtIxoGbEeuPkZNKCcfHxw" name="e" type="_AYWd4oGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>int state = e.getStateChange();&#xD;
			if (state == ItemEvent.SELECTED) {&#xD;
				//Si la bUnit de la sesión no está activa&#xD;
				if (session.getbUnit().isActivo() == false) {		&#xD;
					//Buscamos la bUnit del usuario que abrió sesión&#xD;
					BusinessUnit userBunit = new BusinessUnit().getBusinessUnitById(session.getCompany(), session.getUser().getbUnit().getId());&#xD;
					//La asignamos como bUnit de la sesión&#xD;
					session.setbUnit(userBunit);&#xD;
					//Renovamos la lista de las unidades de negocio del comboBox&#xD;
					refreshBunitComboBox();&#xD;
					//Actualizamos los usuarios de la unidad de negocio de la sesión&#xD;
					refreshUserComboBox();&#xD;
					//Mostramos los datos del usuario seleccionado&#xD;
					populateUserFields();&#xD;
					//Hacemos backup del contenido de los datos del formulario&#xD;
					updateDataCache();&#xD;
					//Vaciamos label de información&#xD;
					infoLabel.setText(&quot;&quot;);&#xD;
				//Si la bUnit de la sesión está activa, hay que renovar el combobox igualmente para que ya no salgan las bUnits no activas&#xD;
				} else {&#xD;
					//Renovamos la lista de las unidades de negocio del comboBox&#xD;
					refreshBunitComboBox();&#xD;
				}&#xD;
			} else if (state == ItemEvent.DESELECTED) {&#xD;
				//Renovamos la lista de las unidades de negocio del comboBox&#xD;
				refreshBunitComboBox();&#xD;
			}&#xD;
			&#xD;
			//Si cambiamos la unidad de negocio de la sesión, comprobamos condiciones de edición de datos de los usuarios&#xD;
			//administradores y deshabilitamos la edición de datos si el usuario seleccionado es un usuario dummy&#xD;
			verifyAdminEditConditions();&#xD;
			disableEditIfDummyUserSelected();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AY8Tx4GbEeuPkZNKCcfHxw" name="itemStateChanged" method="_AZtIxYGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AY8TyIGbEeuPkZNKCcfHxw" name="e" type="_AYWd4oGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQydUYGbEeuPkZNKCcfHxw" name="UserComboListener" visibility="private">
              <ownedComment xmi:id="_AZ1rw4GbEeuPkZNKCcfHxw">
                <body>Listener que define el comportamiento del ComboBox userComboBox. Cada elemento se corresponde con&#xD;
	 * los usuarios de la unidad de negocio seleccionada, que es la unidad de negocio de la sesión.&#xD;
	 * Si userActiveFilterCheckBox está seleccionado, no se mostrarán los usuarios que estén marcados como no activos</body>
              </ownedComment>
              <interfaceRealization xmi:id="_AY8TzIGbEeuPkZNKCcfHxw" client="_AQydUYGbEeuPkZNKCcfHxw" supplier="_AYWd5IGbEeuPkZNKCcfHxw" contract="_AYWd5IGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtIx4GbEeuPkZNKCcfHxw" name="itemStateChanged" specification="_AY860IGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtIyIGbEeuPkZNKCcfHxw" name="e" type="_AYWd4oGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>String item = (String) userComboBox.getSelectedItem();&#xD;
			//Recuperamos el usuario seleccionado&#xD;
			selectedUser = new User().getUserByAlias(session.getbUnit(), item);&#xD;
			//Mostramos los datos del usuario seleccionado&#xD;
			populateUserFields();&#xD;
			//Hacemos backup del contenido de los datos del formulario&#xD;
			updateDataCache();&#xD;
			//Vaciamos label de información&#xD;
			infoLabel.setText(&quot;&quot;);&#xD;
			&#xD;
			//Si cambiamos el usuario seleccionado, comprobamos las condiciones de edición de datos de los usuarios manager&#xD;
			//y administrador y deshabilitamos la edición de datos si el usuario seleccionado es un usuario dummy&#xD;
			verifyManagerEditConditions();&#xD;
			verifyAdminEditConditions();&#xD;
			disableEditIfDummyUserSelected();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AY860IGbEeuPkZNKCcfHxw" name="itemStateChanged" method="_AZtIx4GbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AY860YGbEeuPkZNKCcfHxw" name="e" type="_AYWd4oGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQydUoGbEeuPkZNKCcfHxw" name="UserCheckBoxListener" visibility="private">
              <ownedComment xmi:id="_AZ1rxIGbEeuPkZNKCcfHxw">
                <body>Listener que define el comportamiento del checkbox userActiveFilterCheckBox. Si activamos el checkbox solo&#xD;
	 * visualizaremos los usuarios activos de la unidad de negocio seleccionada. Si lo deseleccionamos visualizaremos&#xD;
	 * todos los usuarios de dicha unidad de negocio.</body>
              </ownedComment>
              <interfaceRealization xmi:id="_AY861YGbEeuPkZNKCcfHxw" client="_AQydUoGbEeuPkZNKCcfHxw" supplier="_AYWd5IGbEeuPkZNKCcfHxw" contract="_AYWd5IGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtIyYGbEeuPkZNKCcfHxw" name="itemStateChanged" specification="_AY861oGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtIyoGbEeuPkZNKCcfHxw" name="e" type="_AYWd4oGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>refreshUserComboBox();&#xD;
			//Mostramos sus datos&#xD;
			populateUserFields();&#xD;
			//Hacemos backup del contenido de los datos del formulario&#xD;
			updateDataCache();&#xD;
			//Vaciamos label de información&#xD;
			infoLabel.setText(&quot;&quot;);&#xD;
			&#xD;
			//Si el cambio de estado de userActiveFilterCheckBox cambia el usuario seleccionado, comprobamos las condiciones&#xD;
			//de edición de datos de los usuarios manager y administrador y deshabilitamos la edición de datos si el usuario&#xD;
			//seleccionado es un usuario dummy&#xD;
			verifyManagerEditConditions();&#xD;
			verifyAdminEditConditions();&#xD;
			disableEditIfDummyUserSelected();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AY861oGbEeuPkZNKCcfHxw" name="itemStateChanged" method="_AZtIyYGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AY8614GbEeuPkZNKCcfHxw" name="e" type="_AYWd4oGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQydU4GbEeuPkZNKCcfHxw" name="UserTypeComboListener" visibility="private">
              <ownedComment xmi:id="_AZ1rxYGbEeuPkZNKCcfHxw">
                <body>Listener que define el comportamiento del comboBox userTypeComboBox. Cada elemento se corresponde con los tipos de usuarios&#xD;
	 * que existen en la aplicación: ADMIN, MANAGER y USER. Al crear o editar un usuario se podrá asignar dicho tipo.&#xD;
	 *</body>
              </ownedComment>
              <interfaceRealization xmi:id="_AY8624GbEeuPkZNKCcfHxw" client="_AQydU4GbEeuPkZNKCcfHxw" supplier="_AYWd5IGbEeuPkZNKCcfHxw" contract="_AYWd5IGbEeuPkZNKCcfHxw"/>
              <ownedOperation xmi:id="_AY863IGbEeuPkZNKCcfHxw" name="itemStateChanged">
                <ownedParameter xmi:id="_AY863YGbEeuPkZNKCcfHxw" name="e" type="_AYWd4oGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQzEYIGbEeuPkZNKCcfHxw" name="NewAction" visibility="private">
              <ownedComment xmi:id="_AZ2SsIGbEeuPkZNKCcfHxw">
                <body>Acción del botón Nueva. Se deshabilita el propio botón, el botón Editar y el combobox. Vaciamos los&#xD;
	 * campos de texto y habilitamos su edición para añadir la información de un nuevo usuario.&#xD;
	 * Habilitamos el botón de Cancelar para que los cambios no se registren y el de Aceptar para que sí lo hagan.</body>
              </ownedComment>
              <generalization xmi:id="_AY9h5YGbEeuPkZNKCcfHxw" general="_AYPwMIGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtIy4GbEeuPkZNKCcfHxw" name="NewAction" specification="_AQzEYYGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtIzIGbEeuPkZNKCcfHxw" type="_AQzEYIGbEeuPkZNKCcfHxw" direction="return"/>
                <language>java</language>
                <body>putValue(NAME, &quot;Nuevo&quot;);&#xD;
			putValue(SHORT_DESCRIPTION, &quot;Add new user&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtIzYGbEeuPkZNKCcfHxw" name="actionPerformed" specification="_AY9h44GbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtIzoGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>okActionSelector = UserUI.OK_ACTION_NEW;&#xD;
			//Cambio de estado de los botones y userTypeComboBox&#xD;
			oKButton.setEnabled(true);&#xD;
			cancelButton.setEnabled(true);&#xD;
			userTypeComboBox.setEnabled(true);&#xD;
			//Actualizamos lista de tipos de usuario&#xD;
			refreshUserTypeComboBox();&#xD;
			//Tipo de usuario user habilitado por defecto&#xD;
			userTypeComboBox.setSelectedIndex(userTypeComboList.length - 1);		&#xD;
			//Password fields editables&#xD;
			newPasswordField.setEditable(true);&#xD;
			confirmPasswordField.setEditable(true);&#xD;
			//Habilitamos checkbox &quot;Activa&quot;&#xD;
			activeCheckBox.setEnabled(true);&#xD;
			activeCheckBox.setSelected(true);&#xD;
			//Activar visibilidad de etiquetas de longitud máxima de datos&#xD;
			for (JLabel label : labelList) {&#xD;
				label.setVisible(true);&#xD;
			}&#xD;
			//Datos editables y campos vacíos&#xD;
			for (JTextField tField : textFieldList) {&#xD;
				if (tField != companyField) {&#xD;
					tField.setEditable(true);&#xD;
					tField.setBackground(Color.WHITE);&#xD;
					tField.setText(&quot;&quot;);&#xD;
				}&#xD;
			}&#xD;
			infoLabel.setText(&quot;&quot;);&#xD;
			//Cambio de estado del resto de botones y combobox&#xD;
			editButton.setEnabled(false);&#xD;
			newButton.setEnabled(false);&#xD;
			bUnitComboBox.setEnabled(false);&#xD;
			bUnitActiveFilterCheckBox.setEnabled(false);&#xD;
			userComboBox.setEnabled(false);&#xD;
			userActiveFilterCheckBox.setEnabled(false);&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQzEYYGbEeuPkZNKCcfHxw" name="NewAction" method="_AZtIy4GbEeuPkZNKCcfHxw">
                <eAnnotations xmi:id="_AQzEYoGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AQzEY4GbEeuPkZNKCcfHxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AQzEZIGbEeuPkZNKCcfHxw" type="_AQzEYIGbEeuPkZNKCcfHxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AY9h44GbEeuPkZNKCcfHxw" name="actionPerformed" method="_AZtIzYGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AY9h5IGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQzEZYGbEeuPkZNKCcfHxw" name="EditAction" visibility="private">
              <ownedComment xmi:id="_AZ2SsYGbEeuPkZNKCcfHxw">
                <body>Acción del botón Editar. Se deshabilita el propio botón. Habilita la edición de la información&#xD;
	 * del formulario, el botón de Cancelar para que los cambios no se registren y el de Aceptar para&#xD;
	 * que sí lo hagan.</body>
              </ownedComment>
              <generalization xmi:id="_AY9h6IGbEeuPkZNKCcfHxw" general="_AYPwMIGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtIz4GbEeuPkZNKCcfHxw" name="EditAction" specification="_AQzEZoGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtI0IGbEeuPkZNKCcfHxw" type="_AQzEZYGbEeuPkZNKCcfHxw" direction="return"/>
                <language>java</language>
                <body>putValue(NAME, &quot;Editar&quot;);&#xD;
			putValue(SHORT_DESCRIPTION, &quot;Enable data edit&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtI0YGbEeuPkZNKCcfHxw" name="actionPerformed" specification="_AY9h5oGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtI0oGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>okActionSelector = UserUI.OK_ACTION_EDIT;&#xD;
			//Cambio de estado de los botones y el combobox&#xD;
			oKButton.setEnabled(true);&#xD;
			cancelButton.setEnabled(true);&#xD;
			userTypeComboBox.setEnabled(true);&#xD;
			//Actualizamos lista de tipos de usuario&#xD;
			refreshUserTypeComboBox();&#xD;
			//Si la lista de tipos de usuario tiene solo 2 elementos, desplazamos el índice a seleccionar&#xD;
			if (userTypeComboList.length == 2) {&#xD;
				userTypeComboBox.setSelectedIndex(lastUserTypeIndex - 1);&#xD;
			} else {&#xD;
				userTypeComboBox.setSelectedIndex(lastUserTypeIndex);&#xD;
			}&#xD;
			editButton.setEnabled(false);&#xD;
			newButton.setEnabled(false);&#xD;
			bUnitComboBox.setEnabled(false);&#xD;
			bUnitActiveFilterCheckBox.setEnabled(false);&#xD;
			userComboBox.setEnabled(false);&#xD;
			userActiveFilterCheckBox.setEnabled(false);&#xD;
			infoLabel.setText(&quot;&quot;);&#xD;
			//Formulario editable&#xD;
			editableDataOn();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQzEZoGbEeuPkZNKCcfHxw" name="EditAction" method="_AZtIz4GbEeuPkZNKCcfHxw">
                <eAnnotations xmi:id="_AQzEZ4GbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AQzEaIGbEeuPkZNKCcfHxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AQzEaYGbEeuPkZNKCcfHxw" type="_AQzEZYGbEeuPkZNKCcfHxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AY9h5oGbEeuPkZNKCcfHxw" name="actionPerformed" method="_AZtI0YGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AY9h54GbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQzrcIGbEeuPkZNKCcfHxw" name="CancelAction" visibility="private">
              <ownedComment xmi:id="_AZ2SsoGbEeuPkZNKCcfHxw">
                <body>Acción del botón Cancelar. Se deshabilita el propio botón y el botón Aceptar. Se habilita el botón Editar y el&#xD;
	 * botón Nueva. Descarta los cambios en los datos introducidos en el formulario. No se graban en la base de datos &#xD;
	 * ni en el objeto User. Se recupera la información que figuraba anteriormente en el formulario. Se borra &#xD;
	 * cualquier mensaje de error mostrado anteriormente</body>
              </ownedComment>
              <generalization xmi:id="_AY9h64GbEeuPkZNKCcfHxw" general="_AYPwMIGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtI04GbEeuPkZNKCcfHxw" name="CancelAction" specification="_AQzrcYGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtI1IGbEeuPkZNKCcfHxw" type="_AQzrcIGbEeuPkZNKCcfHxw" direction="return"/>
                <language>java</language>
                <body>putValue(NAME, &quot;Cancelar&quot;);&#xD;
			putValue(SHORT_DESCRIPTION, &quot;Cancel data edit&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtI1YGbEeuPkZNKCcfHxw" name="actionPerformed" specification="_AY9h6YGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtI1oGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>okActionSelector = UserUI.OK_ACTION_UNDEFINED;&#xD;
			//Cambio de estado de los botones y los combobox&#xD;
			//Impedimos que un usuario manager pueda editar usuarios admin tras cancelar&#xD;
			if (session.getUser().getUserType().equals(&quot;MANAGER&quot; )) {&#xD;
				verifyManagerEditConditions();&#xD;
			} else {&#xD;
				editButton.setEnabled(true);&#xD;
			}&#xD;
			if (session.getUser().getUserType().equals(&quot;ADMIN&quot;)) {&#xD;
				bUnitComboBox.setEnabled(true);&#xD;
				bUnitActiveFilterCheckBox.setEnabled(true);&#xD;
			}&#xD;
			//Impedimos que un usuario user pueda seleccionar usuarios tras cancelar&#xD;
			//Botón &quot;nuevo&quot; deshabilitado para un usuario user tras cancelar&#xD;
			if (!session.getUser().getUserType().equals(&quot;USER&quot;)) {&#xD;
				userComboBox.setEnabled(true);&#xD;
				userActiveFilterCheckBox.setEnabled(true);&#xD;
				newButton.setEnabled(true);&#xD;
			}&#xD;
			userTypeComboBox.setEnabled(false);&#xD;
			oKButton.setEnabled(false);&#xD;
			cancelButton.setEnabled(false);&#xD;
			infoLabel.setText(&quot;&quot;);&#xD;
			//Formulario no editable&#xD;
			editableDataOff();		&#xD;
			//Recuperar valores previos a la edición de los datos&#xD;
			for (int i = 0; i &lt; textFieldList.size(); i++) {&#xD;
				textFieldList.get(i).setText(textFieldContentList.get(i));&#xD;
			}&#xD;
			//Recuperamos el valor de userTypeComboBox&#xD;
			userTypeComboList = getUserTypeComboBoxItemsFromSession();&#xD;
			userTypeComboBox.setModel(new DefaultComboBoxModel(userTypeComboList));&#xD;
			userTypeComboBox.setSelectedIndex(lastUserTypeIndex);&#xD;
			//Recuperamos el valor anterior del checkbox &quot;Activa&quot;&#xD;
			activeCheckBox.setSelected(lastActive);&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQzrcYGbEeuPkZNKCcfHxw" name="CancelAction" method="_AZtI04GbEeuPkZNKCcfHxw">
                <eAnnotations xmi:id="_AQzrcoGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AQzrc4GbEeuPkZNKCcfHxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AQzrdIGbEeuPkZNKCcfHxw" type="_AQzrcIGbEeuPkZNKCcfHxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AY9h6YGbEeuPkZNKCcfHxw" name="actionPerformed" method="_AZtI1YGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AY9h6oGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQzrdYGbEeuPkZNKCcfHxw" name="OKAction" visibility="private">
              <ownedComment xmi:id="_AZ2Ss4GbEeuPkZNKCcfHxw">
                <body>Acción del botón Aceptar. Se deshabilita el propio botón y el botón Cancelar. Se habilitan los&#xD;
	 * botones Editar y Nueva. Se intentan guardar los datos del usuario actualizados en la base&#xD;
	 * de datos, o bien los datos de un nuevo usuario. Si se consigue, se actualiza el objeto User&#xD;
	 * con dichos datos o se crea uno nuevo. Si no se consigue, no se produce la actualización o la creación&#xD;
	 * del objeto User y se muestra un mensaje de error. Se intenta guardar el registro&#xD;
	 * de la actualización de datos en la base de datos. Si no se consigue se muestra un mensaje de error.</body>
              </ownedComment>
              <generalization xmi:id="_AY-I8IGbEeuPkZNKCcfHxw" general="_AYPwMIGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtI14GbEeuPkZNKCcfHxw" name="OKAction" specification="_AQzrdoGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtI2IGbEeuPkZNKCcfHxw" type="_AQzrdYGbEeuPkZNKCcfHxw" direction="return"/>
                <language>java</language>
                <body>putValue(NAME, &quot;Aceptar&quot;);&#xD;
			putValue(SHORT_DESCRIPTION, &quot;Save new data or data edit&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtI2YGbEeuPkZNKCcfHxw" name="actionPerformed" specification="_AY9h7IGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtI2oGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>//Se recupera el fondo blanco de los campos para que una anterior validación errónea de los mismos&#xD;
			//no los deje amarillos permanentemente&#xD;
			for (JTextField tField : textFieldList) {&#xD;
				if (tField != companyField) {&#xD;
					tField.setBackground(Color.WHITE);&#xD;
				}&#xD;
			}&#xD;
			newPasswordField.setBackground(Color.WHITE);&#xD;
			confirmPasswordField.setBackground(Color.WHITE);&#xD;
			//Selección de comportamiento&#xD;
			&#xD;
			//Aceptamos la creación de una nueva unidad de negocio&#xD;
			if (okActionSelector == UserUI.OK_ACTION_NEW) {&#xD;
				//Debug&#xD;
				System.out.println(&quot;Acción de grabar un nuevo usuario&quot;);&#xD;
				&#xD;
				//Creamos nuevo BusinessUnit a partir de los datos del formulario&#xD;
				User newUser = new User();&#xD;
				newUser.setbUnit(session.getbUnit());&#xD;
				newUser.setUserType(userTypeComboBox.getSelectedItem().toString());&#xD;
				newUser.setUserAlias(userAliasField.getText());&#xD;
				newUser.setNombre(userNameField.getText());&#xD;
				newUser.setApellido(userLastNameField.getText());&#xD;
				//Password en texto plano&#xD;
				newUser.setPassword(String.valueOf(newPasswordField.getPassword()));&#xD;
				newUser.setActivo(activeCheckBox.isSelected());&#xD;
				//Validamos los datos del formulario&#xD;
				if (testData(newUser)) {&#xD;
					//Aplicamos hash a la contraseña del nuevo usuario&#xD;
					newUser.setPassword(newUser.passwordHash(String.valueOf(newUser.getPassword())));&#xD;
					&#xD;
					//Debug&#xD;
					System.out.println(&quot;Nuevo usuario validado correctamente&quot;);&#xD;
					&#xD;
					//Intentamos grabar el nuevo usuario en la base de datos, retornando un objeto con idénticos&#xD;
					//datos que incluye también el id que le ha asignado dicha base de datos&#xD;
					User storedUser = new User().addNewUser(session.getConnection(), newUser);&#xD;
					//Si el usuario se almacena correctamente en la base de datos&#xD;
					if (storedUser != null) {&#xD;
						//Registramos fecha y hora de la actualización de los datos de la tabla business_unit&#xD;
						tNow = ToolBox.getTimestampNow();&#xD;
						infoLabel.setText(&quot;NUEVO USUARIO REGISTRADO EN &quot; + session.getbUnit().getNombre() + &quot;: &quot;  + session.formatTimestamp(tNow, null));&#xD;
						//Actualizamos los datos de la tabla last_modification&#xD;
						boolean changeRegister = PersistenceManager.updateTimeStampToDB(session.getConnection(), User.TABLE_NAME, tNow);&#xD;
						//Si se produce un error de actualización de la tabla last_modification. La actualización de la tabla user&#xD;
						//no queda registrada&#xD;
						if(!changeRegister) {&#xD;
							infoLabel.setText(infoLabel.getText() + &quot; .ERROR DE REGISTRO DE ACTUALIZACIÓN&quot;);&#xD;
						}&#xD;
						//Añadimos al nuevo usuario a la lista de usuarios de unidad de negocio de la sesión&#xD;
						session.getbUnit().getUsers().add(storedUser);&#xD;
						&#xD;
						//Si el filtro de usuarios está activo y el nuevo usuario se crea como no activo, no puede asignarse como usuario&#xD;
						//seleccionado y por tanto tampoco puede visualizarse al aceptar su creación&#xD;
						if (userActiveFilterCheckBox.isSelected() &amp;&amp; storedUser.isActivo() == false) {&#xD;
							&#xD;
							//Mostramos los datos del anterior usuario seleccionado. No renovamos el contenido de userComboBox porque&#xD;
							//no es necesario. Tampoco hacemos backup del contenido de los datos del formulario, se mantienen los anteriores&#xD;
							populateUserFields();&#xD;
						&#xD;
						//Si el filtro de usuarios está activo y el usuario se crea como activo, pasa a ser el usuario seleccionado.&#xD;
						//Si el filtro de usuarios no está activo, el nuevo usuario pasa a ser el usuario seleccionado tanto si se&#xD;
						//crea como activo como si no&#xD;
						} else {&#xD;
							selectedUser = storedUser;&#xD;
							//Renovamos la lista de usuarios del comboBox&#xD;
							userComboList = getUserComboBoxItemsFromSession(userActiveFilterCheckBox.isSelected());&#xD;
							userComboBox.setModel(new DefaultComboBoxModel(userComboList));&#xD;
							for (int i = 0; i &lt; userComboList.length; i++) {&#xD;
								if (userComboList[i].equals(selectedUser.getUserAlias())) {&#xD;
									userComboBox.setSelectedIndex(i);&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
						//Retornamos el formulario a su estado previo a la creación de un nuevo usuario&#xD;
						afterNewOrEditUser();&#xD;
&#xD;
					//Si el usuario no se almacena correctamente en la base de datos &#xD;
					} else {&#xD;
						infoLabel.setText(&quot;ERROR DE GRABACIÓN DEL NUEVO USUARIO EN LA BASE DE DATOS&quot;);&#xD;
					}&#xD;
				}&#xD;
			&#xD;
			//Aceptamos los cambios de la unidad de negocio editada&#xD;
			} else if (okActionSelector == UserUI.OK_ACTION_EDIT) {&#xD;
				&#xD;
				//Debug&#xD;
				System.out.println(&quot;Acción de editar un nuevo usuario&quot;);&#xD;
				System.out.println(&quot;selectedUser alias: &quot; + selectedUser.getUserAlias());&#xD;
				&#xD;
				currentPasswordField.setBackground(Color.WHITE);&#xD;
				&#xD;
				//Objeto que recoge los datos actualizados&#xD;
				User updatedUser = new User();&#xD;
				updatedUser.setId(selectedUser.getId());&#xD;
				updatedUser.setbUnit(selectedUser.getbUnit());&#xD;
				updatedUser.setUserType(userTypeComboBox.getSelectedItem().toString());&#xD;
				updatedUser.setUserAlias(userAliasField.getText());&#xD;
				updatedUser.setNombre(userNameField.getText());&#xD;
				updatedUser.setApellido(userLastNameField.getText());&#xD;
				//Password en texto plano&#xD;
				updatedUser.setPassword(String.valueOf(newPasswordField.getPassword()));&#xD;
				updatedUser.setActivo(activeCheckBox.isSelected());&#xD;
				&#xD;
				//Validamos los datos del formulario&#xD;
				if (testData(updatedUser)) {&#xD;
					//Si no hay contraseña nueva dejamos la del usuario seleccionado&#xD;
					if (updatedUser.getPassword().equals(&quot;&quot;)) {&#xD;
						updatedUser.setPassword(selectedUser.getPassword());&#xD;
						&#xD;
						//Debug&#xD;
						System.out.println(&quot;Contraseña sin modificar&quot;);&#xD;
						&#xD;
					//Si hay contraseña nueva le aplicamos el hash&#xD;
					} else {&#xD;
						updatedUser.setPassword(new User().passwordHash(String.valueOf(updatedUser.getPassword())));&#xD;
						&#xD;
						//Debug&#xD;
						System.out.println(&quot;Contraseña modificada&quot;);&#xD;
						System.out.println(new User().passwordHash(String.valueOf(updatedUser.getPassword())));&#xD;
						&#xD;
					}&#xD;
					&#xD;
					//Debug&#xD;
					System.out.println(&quot;updatedUser alias: &quot; + updatedUser.getUserAlias());&#xD;
					&#xD;
					//Si los datos actualizados se graban en la base de datos&#xD;
					if (new User().updateUserToDB(session.getConnection(), updatedUser)) {&#xD;
						//Registramos fecha y hora de la actualización de los datos de la tabla user&#xD;
						tNow = ToolBox.getTimestampNow();&#xD;
						//Control de la actualización de la tabla last_modification por el cambio en la tabla user&#xD;
						boolean UserChangeRegister = PersistenceManager.updateTimeStampToDB(session.getConnection(),&#xD;
								User.TABLE_NAME, tNow);&#xD;
						infoLabel.setText(&quot;DATOS DEL USUARIO ACTUALIZADOS: &quot; + session.formatTimestamp(tNow, null));&#xD;
						//Variable de control para saber si la sesión sigue activa tras la edición de un usuario&#xD;
						boolean stillOpenSession = true;&#xD;
						//Localizar en la lista de usuarios de la unidad de negocio de la sesión al usuario con el mismo id que el usuario editado &#xD;
						// y suprimirlo&#xD;
				        Iterator&lt;User> iter = session.getbUnit().getUsers().iterator();&#xD;
				        while (iter.hasNext()) {&#xD;
				            User user = iter.next();&#xD;
				            if (user.getId() == updatedUser.getId()) {&#xD;
				                iter.remove();&#xD;
				            }&#xD;
				        }&#xD;
						&#xD;
						//Si el usuario que abre sesión deja activo al usuario editado, se actualizan los datos de la sesión&#xD;
						//Si el usuario que abre sesión deja inactivo a un usuario que no es él mismo y el filtro de usuarios está inactivo,&#xD;
						//también se actualizan los datos de la sesión&#xD;
						if (updatedUser.isActivo() || (!updatedUser.isActivo() &amp;&amp; updatedUser.getId() != session.getUser().getId()&#xD;
								&amp;&amp; !userActiveFilterCheckBox.isSelected())) {&#xD;
							&#xD;
							//Debug&#xD;
							System.out.println(&quot;Opción EDIT 1&quot;);&#xD;
							&#xD;
					        //El usuario editado pasa a ser el usuario seleccionado, y lo añadimos a la lista de usuarios de la unidad de negocio&#xD;
							//de la sesión&#xD;
							selectedUser = updatedUser;&#xD;
					        session.getbUnit().getUsers().add(selectedUser);&#xD;
					        //Renovamos la lista de usuarios del comboBox y recuperamos al anterior usuario seleccionado&#xD;
							refreshUserComboBox();&#xD;
							//Mostramos los datos del usuario seleccionado&#xD;
							populateUserFields();&#xD;
					        //Si se produce un error de actualización de la tabla last_modification. La actualización de la tabla user&#xD;
							//no queda registrada&#xD;
							if(!UserChangeRegister) {&#xD;
								infoLabel.setText(infoLabel.getText() + &quot; . ERROR DE REGISTRO DE ACTUALIZACIÓN&quot;);&#xD;
							}&#xD;
						&#xD;
						//Si el usuario que abre sesión deja inactivo a un usuario que no es él mismo y el filtro de usuarios está activo,&#xD;
						//el usuario editado no puede seguir siendo el usuario seleccionado y por tanto tampoco puede visualizarse&#xD;
						} else if (!updatedUser.isActivo() &amp;&amp; updatedUser.getId() != session.getUser().getId()&#xD;
								&amp;&amp; userActiveFilterCheckBox.isSelected()) {&#xD;
							&#xD;
							//Debug&#xD;
							System.out.println(&quot;Opción EDIT 2&quot;);&#xD;
							&#xD;
							//Añadimos al usuario editado a la lista de usuarios de la unidad de negocio de la sesión&#xD;
							session.getbUnit().getUsers().add(updatedUser);&#xD;
							//Renovamos la lista de usuarios del comboBox y recuperamos al anterior usuario seleccionado&#xD;
							refreshUserComboBox();&#xD;
							//Mostramos los datos del usuario seleccionado&#xD;
							populateUserFields();&#xD;
//							//Si la edición del usuario cambia el usuario seleccionado, comprobamos las condiciones de edición de datos&#xD;
//							//de los usuarios manager y administrador y deshabilitamos la edición de datos si el usuario seleccionado es&#xD;
//							//un usuario dummy&#xD;
//							verifyManagerEditConditions();&#xD;
//							verifyAdminEditConditions();&#xD;
//							disableEditIfDummyUserSelected();&#xD;
	&#xD;
						//Si el usuario que abre sesión deja inactivo su propio usuario	&#xD;
						} else if (!updatedUser.isActivo() &amp;&amp; updatedUser.getId() == session.getUser().getId()) {&#xD;
							&#xD;
							//Debug&#xD;
							System.out.println(&quot;Opción EDIT 3&quot;);&#xD;
							&#xD;
							//Se cerrará la sesión&#xD;
							stillOpenSession = false;&#xD;
							//Cerrar sesión y volver a login. El usuario que abrió sesión ya no puede hacer login porque ha sido desactivado&#xD;
							session.setUsersUpdated(true);&#xD;
							session.backToLogin(User.TABLE_NAME, session.getDisplays(), session.getCurrentDisplay());&#xD;
							&#xD;
						}&#xD;
			&#xD;
						//Si la sesión sigue abierta&#xD;
						if (stillOpenSession) {&#xD;
							//Devolvemos el formulario a su estado previo&#xD;
							afterNewOrEditUser();&#xD;
						}	&#xD;
						&#xD;
					//Si los datos actualizados no se graban en la base de datos&#xD;
					} else {&#xD;
						infoLabel.setText(&quot;ERROR DE ACTUALIZACIÓN DE DATOS EN LA BASE DE DATOS&quot;);&#xD;
					}&#xD;
					&#xD;
					&#xD;
					//Debug&#xD;
					System.out.println(&quot;Usuario editado correctamente&quot;);&#xD;
&#xD;
					&#xD;
				}&#xD;
&#xD;
			}&#xD;
			&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQzrdoGbEeuPkZNKCcfHxw" name="OKAction" method="_AZtI14GbEeuPkZNKCcfHxw">
                <eAnnotations xmi:id="_AQzrd4GbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AQzreIGbEeuPkZNKCcfHxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AQzreYGbEeuPkZNKCcfHxw" type="_AQzrdYGbEeuPkZNKCcfHxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AY9h7IGbEeuPkZNKCcfHxw" name="actionPerformed" method="_AZtI2YGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AY9h7YGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQzreoGbEeuPkZNKCcfHxw" name="TimerJob" visibility="private">
              <ownedComment xmi:id="_AZ2StIGbEeuPkZNKCcfHxw">
                <body>Clase que consulta al objeto session si los datos que le atañen han sido actualizados en la base de datos,&#xD;
	 * de manera que pueda actualizar el contenido del panel con dichos datos. Si el panel se encuentra en modo&#xD;
	 * de edición de los datos, o no está visible, no se produce la comprobación porque no es necesaria.</body>
              </ownedComment>
              <generalization xmi:id="_AY-I8YGbEeuPkZNKCcfHxw" general="_AYSzh4GbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtI24GbEeuPkZNKCcfHxw" name="run" specification="_AQzre4GbEeuPkZNKCcfHxw">
                <language>java</language>
                <body>if (!UserUI.this.isShowing()) {&#xD;
				UserUI.this.panelVisible = false;&#xD;
				this.cancel();&#xD;
				UserUI.this.timer.cancel();&#xD;
				 System.out.println(&quot;Se ha cerrado la ventana Usuarios&quot;);&#xD;
			}&#xD;
			//No se comprueba la actualización de los datos si los estamos editando o añadiendo&#xD;
			if (cancelButton.isEnabled() &amp;&amp; oKButton.isEnabled() &amp;&amp; UserUI.this.isShowing()) {&#xD;
				//Do nothing&#xD;
			//Se comprueba la actualización de los datos si no los estamos modificando&#xD;
			} else if (UserUI.this.panelVisible == true){&#xD;
				&#xD;
				//Debug&#xD;
				System.out.println(&quot;Comprobando actualización de datos de los usuarios&quot;);&#xD;
				System.out.println(session.getUpdatedTables().size());&#xD;
				&#xD;
				//Loop por el Map de CurrentSession, si aparece la tabla user, recargar datos&#xD;
				for (Map.Entry&lt;String, Timestamp> updatedTable : session.getUpdatedTables().entrySet()) {&#xD;
					&#xD;
					//Debug&#xD;
					System.out.println(updatedTable.getKey());&#xD;
					System.out.println(updatedTable.getValue());&#xD;
					&#xD;
					//Si en la tabla de actualizaciones aparece la clave User.TABLE_NAME&#xD;
					if (updatedTable.getKey().equals(User.TABLE_NAME)) {&#xD;
						&#xD;
						//Si la unidad de negocio de la sesión ha sido marcada como no activa y el filtro de unidades de negocio está&#xD;
						//activado, la unidad de negocio de la sesión pasa a ser la del usuario que abrió sesión&#xD;
						if (bUnitActiveFilterCheckBox.isSelected() &amp;&amp; session.getbUnit().isActivo() == false) {&#xD;
							//Buscamos la bUnit del usuario que abrió sesión&#xD;
							BusinessUnit userBunit = new BusinessUnit().getBusinessUnitById(session.getCompany(), session.getUser().getbUnit().getId());&#xD;
							//La asignamos como bUnit de la sesión&#xD;
							session.setbUnit(userBunit);&#xD;
							//Renovamos la lista de las unidades de negocio del comboBox&#xD;
							refreshBunitComboBox();&#xD;
						}&#xD;
						&#xD;
						//Debug&#xD;
						System.out.println(&quot;Actualizando pantalla cambiando el usuario seleccionado&quot;);&#xD;
						System.out.println(&quot;El usuario seleccionado era &quot; + selectedUser.getUserAlias());&#xD;
						&#xD;
						//Si el usuario seleccionado ha sido desactivado y el filtro de usuarios está activo, el usuario&#xD;
						//seleccionado pasará a ser el usuario de la sesión (si estamos mostrando la unidad de negocio de dicho usuario)&#xD;
						//o el primer usuario de la lista de usuarios de cualquier otra unidad de negocio que estemos mostrando&#xD;
						//(si hay alguno que esté activo), y será este usuario (o ninguno) el que visualicemos&#xD;
						//Si el usuario seleccionado no ha sido desactivado, o lo ha sido pero el filtro de usuarios no está activo,&#xD;
						//seguirá siendo el usuario seleccionado y visualizaremos sus datos actualizados&#xD;
						&#xD;
						//Renovamos la lista de usuarios del comboBox y designamos un nuevo usuario seleccionado&#xD;
						refreshUserComboBox();&#xD;
						//Mostramos los datos del usuario seleccionado&#xD;
						populateUserFields();&#xD;
						//Hacemos backup del contenido de los datos del formulario&#xD;
						updateDataCache();&#xD;
						&#xD;
						//Debug&#xD;
						String string = (selectedUser.getUserAlias() != &quot;&quot;) ? selectedUser.getUserAlias() : &quot;ninguno&quot;;&#xD;
						System.out.println(&quot;El nuevo usuario seleccionado es &quot; + string );&#xD;
						&#xD;
						//Informamos por pantalla de la actualización&#xD;
						//Si el usuario seleccionado no ha sufrido ninguna modificación no habrá ningún cambio en la información&#xD;
						//mostrada, pero seguirá interesando saber que algún usuario ha sido modificado o añadido&#xD;
						UserUI.this.infoLabel.setText(&quot;DATOS DE LOS USUARIOS ACTUALIZADOS: &quot; +&#xD;
						session.formatTimestamp(updatedTable.getValue(), null));&#xD;
					}&#xD;
				}&#xD;
			}	&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQzre4GbEeuPkZNKCcfHxw" name="run" method="_AZtI24GbEeuPkZNKCcfHxw"/>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_AQ3V0IGbEeuPkZNKCcfHxw" name="CompanyUI">
            <generalization xmi:id="_AY_-KoGbEeuPkZNKCcfHxw" general="_AYLexIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZbb8IGbEeuPkZNKCcfHxw" name="session" visibility="private" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AaGKWYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZbb8oGbEeuPkZNKCcfHxw" name="tNow" visibility="package" type="_AYH0YoGbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZbb84GbEeuPkZNKCcfHxw" value="ToolBox.getTimestampNow()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZbb9YGbEeuPkZNKCcfHxw" name="timer" visibility="private" type="_AYRlZIGbEeuPkZNKCcfHxw" association="_AaGKXIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZbb94GbEeuPkZNKCcfHxw" name="panelVisible" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZbb-YGbEeuPkZNKCcfHxw" name="nameField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaGxYYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZbb-4GbEeuPkZNKCcfHxw" name="addressField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaGxZIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZbb_YGbEeuPkZNKCcfHxw" name="provinceField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaGxZ4GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZcDAYGbEeuPkZNKCcfHxw" name="stateField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaGxaoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZcDA4GbEeuPkZNKCcfHxw" name="postalCodeField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaGxbYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZcDBYGbEeuPkZNKCcfHxw" name="telephoneField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaHYcYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZcDB4GbEeuPkZNKCcfHxw" name="mailField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaHYdIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZcDCYGbEeuPkZNKCcfHxw" name="webField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaHYd4GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZcDC4GbEeuPkZNKCcfHxw" name="editButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaHYeoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZcDDYGbEeuPkZNKCcfHxw" name="cancelButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaH_gYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZcqEIGbEeuPkZNKCcfHxw" name="oKButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaH_hIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZcqEoGbEeuPkZNKCcfHxw" name="infoLabel" visibility="private" type="_AYLexoGbEeuPkZNKCcfHxw" association="_AaH_h4GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZcqFIGbEeuPkZNKCcfHxw" name="labelList" visibility="private" type="_AYLexoGbEeuPkZNKCcfHxw" isOrdered="true" association="_AaH_ioGbEeuPkZNKCcfHxw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZcqFYGbEeuPkZNKCcfHxw" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZcqFoGbEeuPkZNKCcfHxw" value="new ArrayList&lt;JLabel>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZcqGIGbEeuPkZNKCcfHxw" name="textFieldList" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" isOrdered="true" association="_AaH_jYGbEeuPkZNKCcfHxw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZcqGYGbEeuPkZNKCcfHxw" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZcqGoGbEeuPkZNKCcfHxw" value="new ArrayList&lt;JTextField>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZcqHIGbEeuPkZNKCcfHxw" name="textFieldContentList" visibility="private" isOrdered="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZcqHYGbEeuPkZNKCcfHxw" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZcqHoGbEeuPkZNKCcfHxw" value="new ArrayList&lt;String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZcqIIGbEeuPkZNKCcfHxw" name="editAction" visibility="private" isLeaf="true" type="_AYPwMoGbEeuPkZNKCcfHxw" isReadOnly="true" association="_AaImkYGbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZcqIYGbEeuPkZNKCcfHxw" value="new EditAction()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZdRIYGbEeuPkZNKCcfHxw" name="cancelAction" visibility="private" isLeaf="true" type="_AYPwMoGbEeuPkZNKCcfHxw" isReadOnly="true" association="_AaImlIGbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZdRIoGbEeuPkZNKCcfHxw" value="new CancelAction()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZdRJIGbEeuPkZNKCcfHxw" name="oKAction" visibility="private" isLeaf="true" type="_AYPwMoGbEeuPkZNKCcfHxw" isReadOnly="true" association="_AaIml4GbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZdRJYGbEeuPkZNKCcfHxw" value="new OKAction()"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtv0IGbEeuPkZNKCcfHxw" name="CompanyUI" specification="_AYb9cIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZtv0YGbEeuPkZNKCcfHxw" name="session" type="_AQp6foGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZtv0oGbEeuPkZNKCcfHxw" type="_AQ3V0IGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>this.session = session;&#xD;
		setLayout(null);&#xD;
		panelVisible = true;&#xD;
		&#xD;
		JTextPane companyTxt = new JTextPane();&#xD;
		companyTxt.setFont(new Font(&quot;Tahoma&quot;, Font.BOLD, 20));&#xD;
		companyTxt.setText(&quot;DATOS DE LA EMPRESA&quot;);&#xD;
		companyTxt.setBackground(UIManager.getColor(this.getBackground()));&#xD;
		companyTxt.setEditable(false);&#xD;
		companyTxt.setFocusable(false);&#xD;
		companyTxt.setBounds(50, 50, 300, 30);&#xD;
		add(companyTxt);&#xD;
		&#xD;
		JLabel nameLabel = new JLabel(&quot;Nombre&quot;);&#xD;
		nameLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		nameLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		nameLabel.setBounds(50, 125, 200, 25);&#xD;
		add(nameLabel);&#xD;
		&#xD;
		JLabel addressLabel = new JLabel(&quot;Dirección&quot;);&#xD;
		addressLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		addressLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		addressLabel.setBounds(50, 175, 200, 25);&#xD;
		add(addressLabel);&#xD;
		&#xD;
		JLabel provinceLabel = new JLabel(&quot;Provincia&quot;);&#xD;
		provinceLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		provinceLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		provinceLabel.setBounds(50, 225, 200, 25);&#xD;
		add(provinceLabel);&#xD;
		&#xD;
		JLabel stateLabel = new JLabel(&quot;Estado&quot;);&#xD;
		stateLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		stateLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		stateLabel.setBounds(50, 275, 200, 25);&#xD;
		add(stateLabel);&#xD;
		&#xD;
		JLabel postalCodeLabel = new JLabel(&quot;Código postal&quot;);&#xD;
		postalCodeLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		postalCodeLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		postalCodeLabel.setBounds(50, 325, 200, 25);&#xD;
		add(postalCodeLabel);&#xD;
		&#xD;
		JLabel telephoneLabel = new JLabel(&quot;Teléfono&quot;);&#xD;
		telephoneLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		telephoneLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		telephoneLabel.setBounds(50, 375, 200, 25);&#xD;
		add(telephoneLabel);&#xD;
		&#xD;
		JLabel mailLabel = new JLabel(&quot;E-mail&quot;);&#xD;
		mailLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		mailLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		mailLabel.setBounds(50, 425, 200, 25);&#xD;
		add(mailLabel);&#xD;
		&#xD;
		JLabel webLabel = new JLabel(&quot;Web&quot;);&#xD;
		webLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		webLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		webLabel.setBounds(50, 475, 200, 25);&#xD;
		add(webLabel);&#xD;
		&#xD;
		nameField = new JTextField();&#xD;
		nameField.setColumns(10);&#xD;
		nameField.setBounds(260, 125, 400, 25);&#xD;
		nameField.setText(session.getCompany().getNombre());&#xD;
		nameField.setEditable(false);&#xD;
		nameField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					addressField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(nameField);&#xD;
		textFieldContentList.add(session.getCompany().getNombre());&#xD;
		add(nameField);&#xD;
		&#xD;
		addressField = new JTextField();&#xD;
		addressField.setColumns(10);&#xD;
		addressField.setBounds(260, 175, 400, 25);&#xD;
		addressField.setText(session.getCompany().getDireccion());&#xD;
		addressField.setEditable(false);&#xD;
		addressField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					provinceField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(addressField);&#xD;
		textFieldContentList.add(session.getCompany().getDireccion());&#xD;
		add(addressField);&#xD;
		&#xD;
		provinceField = new JTextField();&#xD;
		provinceField.setColumns(10);&#xD;
		provinceField.setBounds(260, 225, 200, 25);&#xD;
		provinceField.setText(session.getCompany().getProvincia());&#xD;
		provinceField.setEditable(false);&#xD;
		provinceField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					stateField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(provinceField);&#xD;
		textFieldContentList.add(session.getCompany().getProvincia());&#xD;
		add(provinceField);&#xD;
		&#xD;
		stateField = new JTextField();&#xD;
		stateField.setColumns(10);&#xD;
		stateField.setBounds(260, 275, 200, 25);&#xD;
		stateField.setText(session.getCompany().getEstado());&#xD;
		stateField.setEditable(false);&#xD;
		stateField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					postalCodeField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(stateField);&#xD;
		textFieldContentList.add(session.getCompany().getEstado());&#xD;
		add(stateField);&#xD;
		&#xD;
		postalCodeField = new JTextField();&#xD;
		postalCodeField.setColumns(10);&#xD;
		postalCodeField.setBounds(260, 325, 100, 25);&#xD;
		postalCodeField.setText(session.getCompany().getCpostal());&#xD;
		postalCodeField.setEditable(false);&#xD;
		postalCodeField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					telephoneField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(postalCodeField);&#xD;
		textFieldContentList.add(session.getCompany().getCpostal());&#xD;
		add(postalCodeField);&#xD;
		&#xD;
		telephoneField = new JTextField();&#xD;
		telephoneField.setColumns(10);&#xD;
		telephoneField.setBounds(260, 375, 100, 25);&#xD;
		telephoneField.setText(session.getCompany().getTelefono());&#xD;
		telephoneField.setEditable(false);&#xD;
		telephoneField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					mailField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(telephoneField);&#xD;
		textFieldContentList.add(session.getCompany().getTelefono());&#xD;
		add(telephoneField);&#xD;
		&#xD;
		mailField = new JTextField();&#xD;
		mailField.setColumns(10);&#xD;
		mailField.setBounds(260, 425, 400, 25);&#xD;
		mailField.setText(session.getCompany().getMail());&#xD;
		mailField.setEditable(false);&#xD;
		mailField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					webField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(mailField);&#xD;
		textFieldContentList.add(session.getCompany().getMail());&#xD;
		add(mailField);&#xD;
		&#xD;
		webField = new JTextField();&#xD;
		webField.setColumns(10);&#xD;
		webField.setBounds(260, 475, 400, 25);&#xD;
		webField.setText(session.getCompany().getWeb());&#xD;
		webField.setEditable(false);&#xD;
		webField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					oKButton.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(webField);&#xD;
		textFieldContentList.add(session.getCompany().getWeb());&#xD;
		add(webField);&#xD;
		&#xD;
		JLabel maxCharsLabel = new JLabel(&quot;Max: 100 caracteres&quot;);&#xD;
		maxCharsLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel.setBounds(670, 125, 150, 25);&#xD;
		maxCharsLabel.setVisible(false);&#xD;
		labelList.add(maxCharsLabel);&#xD;
		add(maxCharsLabel);&#xD;
		&#xD;
		JLabel maxCharsLabel2 = new JLabel(&quot;Max: 150 caracteres&quot;);&#xD;
		maxCharsLabel2.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel2.setBounds(670, 175, 150, 25);&#xD;
		maxCharsLabel2.setVisible(false);&#xD;
		labelList.add(maxCharsLabel2);&#xD;
		add(maxCharsLabel2);&#xD;
		&#xD;
		JLabel maxCharsLabel3 = new JLabel(&quot;Max: 50 caracteres&quot;);&#xD;
		maxCharsLabel3.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel3.setBounds(470, 227, 150, 25);&#xD;
		maxCharsLabel3.setVisible(false);&#xD;
		labelList.add(maxCharsLabel3);&#xD;
		add(maxCharsLabel3);&#xD;
		&#xD;
		JLabel maxCharsLabel4 = new JLabel(&quot;Max: 50 caracteres&quot;);&#xD;
		maxCharsLabel4.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel4.setBounds(470, 277, 150, 25);&#xD;
		maxCharsLabel4.setVisible(false);&#xD;
		labelList.add(maxCharsLabel4);&#xD;
		add(maxCharsLabel4);&#xD;
		&#xD;
		JLabel maxCharsLabel5 = new JLabel(&quot;Max: 8 caracteres&quot;);&#xD;
		maxCharsLabel5.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel5.setBounds(370, 327, 150, 25);&#xD;
		maxCharsLabel5.setVisible(false);&#xD;
		labelList.add(maxCharsLabel5);&#xD;
		add(maxCharsLabel5);&#xD;
		&#xD;
		JLabel maxCharsLabel6 = new JLabel(&quot;Max: 15 caracteres&quot;);&#xD;
		maxCharsLabel6.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel6.setBounds(370, 377, 150, 25);&#xD;
		maxCharsLabel6.setVisible(false);&#xD;
		labelList.add(maxCharsLabel6);&#xD;
		add(maxCharsLabel6);&#xD;
		&#xD;
		JLabel maxCharsLabel7 = new JLabel(&quot;Max: 100 caracteres&quot;);&#xD;
		maxCharsLabel7.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel7.setBounds(670, 425, 150, 25);&#xD;
		maxCharsLabel7.setVisible(false);&#xD;
		labelList.add(maxCharsLabel7);&#xD;
		add(maxCharsLabel7);&#xD;
		&#xD;
		JLabel maxCharsLabel8 = new JLabel(&quot;Max: 200 caracteres&quot;);&#xD;
		maxCharsLabel8.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel8.setBounds(670, 475, 150, 25);&#xD;
		maxCharsLabel8.setVisible(false);&#xD;
		labelList.add(maxCharsLabel8);&#xD;
		add(maxCharsLabel8);&#xD;
		&#xD;
		infoLabel = new JLabel();&#xD;
		infoLabel.setHorizontalAlignment(SwingConstants.CENTER);&#xD;
		infoLabel.setBounds(50, 530, 770, 25);&#xD;
		add(infoLabel);&#xD;
		&#xD;
		oKButton = new JButton();&#xD;
		oKButton.setAction(oKAction);&#xD;
		oKButton.setBounds(731, 580, 89, 23);&#xD;
		oKButton.setEnabled(false);&#xD;
		add(oKButton);&#xD;
		&#xD;
		cancelButton = new JButton();&#xD;
		cancelButton.setAction(cancelAction);&#xD;
		cancelButton.setBounds(632, 580, 89, 23);&#xD;
		cancelButton.setEnabled(false);&#xD;
		add(cancelButton);&#xD;
		&#xD;
		editButton = new JButton();&#xD;
		editButton.setAction(editAction);&#xD;
		editButton.setBounds(531, 580, 89, 23);&#xD;
		if (!session.getUser().getUserType().equals(&quot;ADMIN&quot;)) {&#xD;
			editButton.setEnabled(false);&#xD;
		}&#xD;
		add(editButton);&#xD;
		&#xD;
		/*Iniciamos la comprobación periódica de actualizaciones&#xD;
		* Se realiza 2 veces por cada comprobación de los cambios en la base de datos que hace&#xD;
		* el objeto session. Esto evita que si se produce la comprobación de datos que hace cada panel&#xD;
		* cuando la actualización de datos que hace el objeto session aún no ha finalizado, se considere&#xD;
		* por error que no había cambios.&#xD;
		* Existe la posibilidad de que eso ocurra porque se comprueban y actualizan los datos de cada tabla&#xD;
		* de manera consecutiva. Si a media actualización de los datos, un panel comprueba los datos que le&#xD;
		* atañen y su actualización aún no se ha hecho, no los actualizará. Además, el registro de cambios&#xD;
		* interno del objeto session se sobreescribirá en cuanto inicie una nueva actualización, y el panel&#xD;
		* nunca podrá reflejar los cambios. Esto pasaría si la actualización del panel se hace al mismo ritmo&#xD;
		* o más lenta que la comprobación de los datos que hace el objeto session.&#xD;
		*/&#xD;
		timer = new Timer();&#xD;
		TimerTask task = new TimerJob();&#xD;
		timer.scheduleAtFixedRate(task, 1000, 30000);&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtv04GbEeuPkZNKCcfHxw" name="populateTextFields" specification="_AQ384IGbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>nameField.setText(session.getCompany().getNombre());&#xD;
		addressField.setText(session.getCompany().getDireccion());&#xD;
		provinceField.setText(session.getCompany().getProvincia());&#xD;
		stateField.setText(session.getCompany().getEstado());&#xD;
		postalCodeField.setText(session.getCompany().getCpostal());&#xD;
		telephoneField.setText(session.getCompany().getTelefono());&#xD;
		mailField.setText(session.getCompany().getMail());&#xD;
		webField.setText(session.getCompany().getWeb());&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtv1IGbEeuPkZNKCcfHxw" name="testData" specification="_AYb9dYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZtv1YGbEeuPkZNKCcfHxw" name="company" type="_AQYNqIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZtv1oGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>//Comprobamos que los datos no exceden el tamaño máximo&#xD;
		Boolean error = false;&#xD;
		String errorText = &quot;LA LONGITUD DE LOS DATOS EXCEDE EL TAMAÑO MÁXIMO O FALTAN DATOS&quot;;&#xD;
		if (company.getNombre().length() > 100 || company.getNombre().length() == 0) {&#xD;
			nameField.setBackground(Color.YELLOW);&#xD;
			error = true;&#xD;
		}&#xD;
		if (company.getDireccion().length() > 150) {&#xD;
			addressField.setBackground(Color.YELLOW);&#xD;
			error = true;&#xD;
		}&#xD;
		if (company.getProvincia().length() > 50) {&#xD;
			provinceField.setBackground(Color.YELLOW);&#xD;
			error = true;&#xD;
		}&#xD;
		if (company.getEstado().length() > 50) {&#xD;
			stateField.setBackground(Color.YELLOW);&#xD;
			error = true;&#xD;
		}&#xD;
		if (company.getCpostal().length() > 8) {&#xD;
			postalCodeField.setBackground(Color.YELLOW);&#xD;
			error = true;&#xD;
		}&#xD;
		if (company.getTelefono().length() > 15) {&#xD;
			telephoneField.setBackground(Color.YELLOW);&#xD;
			error = true;&#xD;
		}&#xD;
		if (company.getMail().length() > 100) {&#xD;
			mailField.setBackground(Color.YELLOW);&#xD;
			error = true;&#xD;
		}&#xD;
		if (company.getWeb().length() > 200) {&#xD;
			webField.setBackground(Color.YELLOW);&#xD;
			error = true;&#xD;
		}&#xD;
		//Si hay un error, mensaje de error y retornamos false&#xD;
		if (error) {&#xD;
			infoLabel.setText(errorText);&#xD;
			return false;&#xD;
		}&#xD;
		return true;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQ384IGbEeuPkZNKCcfHxw" name="populateTextFields" method="_AZtv04GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ2StoGbEeuPkZNKCcfHxw">
                <body>Refresca los datos de la compañía de la sesión para que se visualicen en pantalla</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AYb9cIGbEeuPkZNKCcfHxw" name="CompanyUI" method="_AZtv0IGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AYb9coGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AYb9c4GbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_AZ2StYGbEeuPkZNKCcfHxw">
                <body>@wbp.parser.constructor</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYb9cYGbEeuPkZNKCcfHxw" name="session" type="_AQp6foGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYb9dIGbEeuPkZNKCcfHxw" type="_AQ3V0IGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYb9dYGbEeuPkZNKCcfHxw" name="testData" method="_AZtv1IGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ2St4GbEeuPkZNKCcfHxw">
                <body>Comprueba la corrección de los datos introducidos en el formulario. Cualquier&#xD;
	 * dato incorrecto se resalta con el fondo del campo en amarillo&#xD;
	 * @return true si son correctos, false si no lo son</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYb9doGbEeuPkZNKCcfHxw" name="company" type="_AQYNqIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYb9d4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQ384YGbEeuPkZNKCcfHxw" name="EditAction" visibility="private">
              <ownedComment xmi:id="_AZ2SuIGbEeuPkZNKCcfHxw">
                <body>Acción del botón Editar. Se deshabilita el propio botón. Habilita la edición de la información&#xD;
	 * del formulario, el botón de Cancelar para que los cambios no se registren y el de Aceptar para&#xD;
	 * que sí lo hagan.</body>
              </ownedComment>
              <generalization xmi:id="_AY_-IoGbEeuPkZNKCcfHxw" general="_AYPwMIGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtv14GbEeuPkZNKCcfHxw" name="EditAction" specification="_AQ384oGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtv2IGbEeuPkZNKCcfHxw" type="_AQ384YGbEeuPkZNKCcfHxw" direction="return"/>
                <language>java</language>
                <body>putValue(NAME, &quot;Editar&quot;);&#xD;
			putValue(SHORT_DESCRIPTION, &quot;Enable data edit&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtv2YGbEeuPkZNKCcfHxw" name="actionPerformed" specification="_AY_-IIGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtv2oGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>editButton.setEnabled(false);&#xD;
			oKButton.setEnabled(true);&#xD;
			cancelButton.setEnabled(true);&#xD;
			infoLabel.setText(&quot;&quot;);&#xD;
			//Activar visibilidad de etiquetas de longitud máxima de datos&#xD;
			for (JLabel label : labelList) {&#xD;
				label.setVisible(true);&#xD;
			}&#xD;
			//Datos editables&#xD;
			for (JTextField tField : textFieldList) {&#xD;
				tField.setEditable(true);&#xD;
				tField.setBackground(Color.WHITE);&#xD;
			}&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQ384oGbEeuPkZNKCcfHxw" name="EditAction" method="_AZtv14GbEeuPkZNKCcfHxw">
                <eAnnotations xmi:id="_AQ3844GbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AQ385IGbEeuPkZNKCcfHxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AQ385YGbEeuPkZNKCcfHxw" type="_AQ384YGbEeuPkZNKCcfHxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AY_-IIGbEeuPkZNKCcfHxw" name="actionPerformed" method="_AZtv2YGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AY_-IYGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQ385oGbEeuPkZNKCcfHxw" name="CancelAction" visibility="private">
              <ownedComment xmi:id="_AZ2SuYGbEeuPkZNKCcfHxw">
                <body>Acción del botón Cancelar. Se deshabilita el propio botón y el botón Aceptar. Se habilita el botón Editar.&#xD;
	 * Descarta los cambios en los datos introducidos en el formulario. No se graban en la base de datos ni en el&#xD;
	 * objeto company. Se recupera la información que figuraba anteriormente en el formulario. Se borra cualquier&#xD;
	 * mensaje de error mostrado anteriormente</body>
              </ownedComment>
              <generalization xmi:id="_AY_-JYGbEeuPkZNKCcfHxw" general="_AYPwMIGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtv24GbEeuPkZNKCcfHxw" name="CancelAction" specification="_AQ4j8IGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtv3IGbEeuPkZNKCcfHxw" type="_AQ385oGbEeuPkZNKCcfHxw" direction="return"/>
                <language>java</language>
                <body>putValue(NAME, &quot;Cancelar&quot;);&#xD;
			putValue(SHORT_DESCRIPTION, &quot;Cancel data edit&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtv3YGbEeuPkZNKCcfHxw" name="actionPerformed" specification="_AY_-I4GbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtv3oGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>editButton.setEnabled(true);&#xD;
			oKButton.setEnabled(false);&#xD;
			cancelButton.setEnabled(false);&#xD;
			infoLabel.setText(&quot;&quot;);&#xD;
			//Quitar visibilidad de etiquetas de longitud máxima de datos&#xD;
			for (JLabel label : labelList) {&#xD;
				label.setVisible(false);&#xD;
			}&#xD;
			//Datos no editables&#xD;
			for (JTextField tField : textFieldList) {&#xD;
				tField.setBackground(UIManager.getColor(new JPanel().getBackground()));&#xD;
				tField.setEditable(false);&#xD;
			}&#xD;
			//Recuperar valores previos a la edición de los datos&#xD;
			for (int i = 0; i &lt; textFieldList.size(); i++) {&#xD;
				textFieldList.get(i).setText(textFieldContentList.get(i));&#xD;
			}&#xD;
			&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQ4j8IGbEeuPkZNKCcfHxw" name="CancelAction" method="_AZtv24GbEeuPkZNKCcfHxw">
                <eAnnotations xmi:id="_AQ4j8YGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AQ4j8oGbEeuPkZNKCcfHxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AQ4j84GbEeuPkZNKCcfHxw" type="_AQ385oGbEeuPkZNKCcfHxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AY_-I4GbEeuPkZNKCcfHxw" name="actionPerformed" method="_AZtv3YGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AY_-JIGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQ4j9IGbEeuPkZNKCcfHxw" name="OKAction" visibility="private">
              <ownedComment xmi:id="_AZ2SuoGbEeuPkZNKCcfHxw">
                <body>Acción del botón Aceptar. Se deshabilita el propio botón y el botón Cancelar. Se habilita el&#xD;
	 * botón Editar. Se intenta guardar los datos de la compañía actualizados en la base de datos.&#xD;
	 * Si se consigue, se actualiza el objeto company con dichos datos. Si no se consigue, no se actualiza&#xD;
	 * el objeto company con los datos y se muestra un mensaje de error. Se intenta guardar el registro&#xD;
	 * de la actualización de datos en la base de datos si dicha actualización tuvo éxito. Si no se consigue&#xD;
	 * se muestra un mensaje de error</body>
              </ownedComment>
              <generalization xmi:id="_AY_-KIGbEeuPkZNKCcfHxw" general="_AYPwMIGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtv34GbEeuPkZNKCcfHxw" name="OKAction" specification="_AQ4j9YGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtv4IGbEeuPkZNKCcfHxw" type="_AQ4j9IGbEeuPkZNKCcfHxw" direction="return"/>
                <language>java</language>
                <body>putValue(NAME, &quot;Aceptar&quot;);&#xD;
			putValue(SHORT_DESCRIPTION, &quot;Execute data edit&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtv4YGbEeuPkZNKCcfHxw" name="actionPerformed" specification="_AY_-JoGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZtv4oGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>//Se recupera el fondo blanco de los campos para que una anterior validación errónea de los mismos&#xD;
			//no los deje amarillos permanentemente&#xD;
			for (JTextField tField : textFieldList) {&#xD;
				tField.setBackground(Color.WHITE);&#xD;
			}			&#xD;
			//Objeto que recoge los datos actualizados&#xD;
			Company updatedCompany = new Company();&#xD;
			updatedCompany.setId(1);&#xD;
			updatedCompany.setNombre(nameField.getText());&#xD;
			updatedCompany.setDireccion(addressField.getText());&#xD;
			updatedCompany.setProvincia(provinceField.getText());&#xD;
			updatedCompany.setEstado(stateField.getText());&#xD;
			updatedCompany.setCpostal(postalCodeField.getText());&#xD;
			updatedCompany.setTelefono(telephoneField.getText());&#xD;
			updatedCompany.setMail(mailField.getText());&#xD;
			updatedCompany.setWeb(webField.getText());&#xD;
			//Si los datos están validados&#xD;
			if (testData(updatedCompany)) {&#xD;
				//Si los datos actualizados se graban en la base de datos, se actualizan los datos de la sesión&#xD;
				//if (session.getCompany().updateCompanyToDB(session.getConnection(), updatedCompany)) {&#xD;
				if (new Company().updateCompanyToDB(session.getConnection(), updatedCompany)) {&#xD;
					session.getCompany().setNombre(updatedCompany.getNombre());&#xD;
					session.getCompany().setDireccion(updatedCompany.getDireccion());&#xD;
					session.getCompany().setProvincia(updatedCompany.getProvincia());&#xD;
					session.getCompany().setEstado(updatedCompany.getEstado());&#xD;
					session.getCompany().setCpostal(updatedCompany.getCpostal());&#xD;
					session.getCompany().setTelefono(updatedCompany.getTelefono());&#xD;
					session.getCompany().setMail(updatedCompany.getMail());&#xD;
					session.getCompany().setWeb(updatedCompany.getWeb());&#xD;
					//Registramos fecha y hora de la actualización de los datos de la tabla company&#xD;
					tNow = ToolBox.getTimestampNow();&#xD;
					//Actualizamos los datos de la tabla last_modification&#xD;
					boolean changeRegister = PersistenceManager.updateTimeStampToDB(session.getConnection(), Company.TABLE_NAME, tNow);&#xD;
					//Si se produce un error de actualización de la tabla last_modification. La actualización de la tabla company&#xD;
					//no queda registrada&#xD;
					if(!changeRegister) {&#xD;
						infoLabel.setText(&quot;ERROR DE REGISTRO DE ACTUALIZACIÓN DE LA BASE DE DATOS&quot;);&#xD;
					} else {&#xD;
						infoLabel.setText(&quot;DATOS DE LA EMPRESA ACTUALIZADOS: &quot; + session.formatTimestamp(tNow, null));&#xD;
					}&#xD;
					editButton.setEnabled(true);&#xD;
					oKButton.setEnabled(false);&#xD;
					cancelButton.setEnabled(false);&#xD;
					for (JLabel label : labelList) {&#xD;
						label.setVisible(false);&#xD;
					}&#xD;
					for (JTextField tField : textFieldList) {&#xD;
						tField.setEditable(false);&#xD;
						tField.setBackground(UIManager.getColor(new JPanel().getBackground()));&#xD;
					}&#xD;
					textFieldContentList.clear();&#xD;
					for (int i = 0; i &lt; textFieldList.size(); i++) {&#xD;
						textFieldContentList.add(textFieldList.get(i).getText());&#xD;
					}&#xD;
				//Error de actualización de los datos en la base de datos&#xD;
				} else {&#xD;
					infoLabel.setText(&quot;ERROR DE ACTUALIZACIÓN DE DATOS EN LA BASE DE DATOS&quot;);&#xD;
				}&#xD;
			}&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQ4j9YGbEeuPkZNKCcfHxw" name="OKAction" method="_AZtv34GbEeuPkZNKCcfHxw">
                <eAnnotations xmi:id="_AQ4j9oGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AQ4j94GbEeuPkZNKCcfHxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AQ4j-IGbEeuPkZNKCcfHxw" type="_AQ4j9IGbEeuPkZNKCcfHxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AY_-JoGbEeuPkZNKCcfHxw" name="actionPerformed" method="_AZtv4YGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AY_-J4GbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQ4j-YGbEeuPkZNKCcfHxw" name="TimerJob" visibility="private">
              <ownedComment xmi:id="_AZ2Su4GbEeuPkZNKCcfHxw">
                <body>Clase que consulta al objeto session si los datos que le atañen han sido actualizados en la base de datos,&#xD;
	 * de manera que pueda actualizar el contenido del panel con dichos datos. Si el panel se encuentra en modo&#xD;
	 * de edición de los datos, o no está visible, no se produce la comprobación porque no es necesaria.</body>
              </ownedComment>
              <generalization xmi:id="_AY_-KYGbEeuPkZNKCcfHxw" general="_AYSzh4GbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtv44GbEeuPkZNKCcfHxw" name="run" specification="_AQ4j-oGbEeuPkZNKCcfHxw">
                <language>java</language>
                <body>if (!CompanyUI.this.isShowing()) {&#xD;
				CompanyUI.this.panelVisible = false;&#xD;
				this.cancel();&#xD;
				CompanyUI.this.timer.cancel();&#xD;
				 System.out.println(&quot;Se ha cerrado la ventana Empresa&quot;);&#xD;
			}&#xD;
			//No se comprueba la actualización de los datos si los estamos editando o añadiendo&#xD;
			if (cancelButton.isEnabled() &amp;&amp; oKButton.isEnabled() &amp;&amp; CompanyUI.this.isShowing()) {&#xD;
				//Do nothing&#xD;
			//Se comprueba la actualización de los datos si no los estamos modificando&#xD;
			} else if (CompanyUI.this.panelVisible == true){&#xD;
				&#xD;
				//Debug&#xD;
				System.out.println(&quot;Comprobando actualización de datos de la empresa&quot;);&#xD;
				System.out.println(session.getUpdatedTables().size());&#xD;
				&#xD;
				//Loop por el Map de CurrentSession, si aparece la tabla company, recargar datos&#xD;
				for (Map.Entry&lt;String, Timestamp> updatedTable : session.getUpdatedTables().entrySet()) {&#xD;
					&#xD;
					//Debug&#xD;
					System.out.println(updatedTable.getKey());&#xD;
					System.out.println(updatedTable.getValue());&#xD;
					&#xD;
					//Si en la tabla de actualizaciones aparece la clave Company.TABLE_NAME&#xD;
					if (updatedTable.getKey().equals(Company.TABLE_NAME)) {&#xD;
						//Asignamos el nuevo contenido a los textfields&#xD;
						CompanyUI.this.populateTextFields();&#xD;
						//renovamos la lista de contenidos de los textfields&#xD;
						textFieldContentList.clear();&#xD;
						for (int i = 0; i &lt; textFieldList.size(); i++) {&#xD;
							textFieldContentList.add(textFieldList.get(i).getText());&#xD;
						}&#xD;
						CompanyUI.this.infoLabel.setText(&quot;DATOS DE LA EMPRESA ACTUALIZADOS: &quot; +&#xD;
						//updatedTable.getValue().toString());&#xD;
						session.formatTimestamp(updatedTable.getValue(), null));&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQ4j-oGbEeuPkZNKCcfHxw" name="run" method="_AZtv44GbEeuPkZNKCcfHxw"/>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_AQ6ZIIGbEeuPkZNKCcfHxw" name="BusinessUnitUI">
            <generalization xmi:id="_AZCaa4GbEeuPkZNKCcfHxw" general="_AYLexIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZdRJ4GbEeuPkZNKCcfHxw" name="OK_ACTION_UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZdRKIGbEeuPkZNKCcfHxw" value="0"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZdRKYGbEeuPkZNKCcfHxw" name="OK_ACTION_EDIT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZdRKoGbEeuPkZNKCcfHxw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZdRK4GbEeuPkZNKCcfHxw" name="OK_ACTION_NEW" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZdRLIGbEeuPkZNKCcfHxw" value="2"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZdRLYGbEeuPkZNKCcfHxw" name="session" visibility="private" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AaImmoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZd4MYGbEeuPkZNKCcfHxw" name="tNow" visibility="private" type="_AYH0YoGbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZd4MoGbEeuPkZNKCcfHxw" value="ToolBox.getTimestampNow()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZd4NIGbEeuPkZNKCcfHxw" name="timer" visibility="private" type="_AYRlZIGbEeuPkZNKCcfHxw" association="_AaJNoYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZd4NoGbEeuPkZNKCcfHxw" name="panelVisible" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZd4OIGbEeuPkZNKCcfHxw" name="companyField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaJNpIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZd4OoGbEeuPkZNKCcfHxw" name="nameField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaJNp4GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZd4PIGbEeuPkZNKCcfHxw" name="addressField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaJNqoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZefQIGbEeuPkZNKCcfHxw" name="provinceField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaJ0sYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZefQoGbEeuPkZNKCcfHxw" name="stateField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaJ0tIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZefRIGbEeuPkZNKCcfHxw" name="postalCodeField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaJ0t4GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZefRoGbEeuPkZNKCcfHxw" name="telephoneField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaJ0uoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZefSIGbEeuPkZNKCcfHxw" name="mailField" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" association="_AaJ0vYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZefSoGbEeuPkZNKCcfHxw" name="activeCheckBox" visibility="private" type="_AYXsAYGbEeuPkZNKCcfHxw" association="_AaKbwYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZefTIGbEeuPkZNKCcfHxw" name="comboBox" visibility="private" type="_AYVPw4GbEeuPkZNKCcfHxw" association="_AaKbxIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZefToGbEeuPkZNKCcfHxw" name="activeFilterCheckBox" visibility="private" type="_AYXsAYGbEeuPkZNKCcfHxw" association="_AaKbx4GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZfGUYGbEeuPkZNKCcfHxw" name="comboList" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZfGUoGbEeuPkZNKCcfHxw" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZfGVYGbEeuPkZNKCcfHxw" name="bUnitShowing" visibility="private" type="_ARExMIGbEeuPkZNKCcfHxw" association="_AaKbyoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZfGV4GbEeuPkZNKCcfHxw" name="editButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaLC0YGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZfGWYGbEeuPkZNKCcfHxw" name="cancelButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaLC1IGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZfGW4GbEeuPkZNKCcfHxw" name="oKButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaLC14GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZfGXYGbEeuPkZNKCcfHxw" name="newButton" visibility="private" type="_AYMs44GbEeuPkZNKCcfHxw" association="_AaLC2oGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZftYYGbEeuPkZNKCcfHxw" name="infoLabel" visibility="private" type="_AYLexoGbEeuPkZNKCcfHxw" association="_AaLp4IGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZftY4GbEeuPkZNKCcfHxw" name="labelList" visibility="private" type="_AYLexoGbEeuPkZNKCcfHxw" isOrdered="true" association="_AaLp44GbEeuPkZNKCcfHxw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZftZIGbEeuPkZNKCcfHxw" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZftZYGbEeuPkZNKCcfHxw" value="new ArrayList&lt;JLabel>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZftZ4GbEeuPkZNKCcfHxw" name="textFieldList" visibility="private" type="_AYMF14GbEeuPkZNKCcfHxw" isOrdered="true" association="_AaLp5oGbEeuPkZNKCcfHxw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZftaIGbEeuPkZNKCcfHxw" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZftaYGbEeuPkZNKCcfHxw" value="new ArrayList&lt;JTextField>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZfta4GbEeuPkZNKCcfHxw" name="textFieldContentList" visibility="private" isOrdered="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZftbIGbEeuPkZNKCcfHxw" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZftbYGbEeuPkZNKCcfHxw" value="new ArrayList&lt;String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZftb4GbEeuPkZNKCcfHxw" name="lastActive" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZgUcIGbEeuPkZNKCcfHxw" name="editAction" visibility="private" isLeaf="true" type="_AYPwMoGbEeuPkZNKCcfHxw" isReadOnly="true" association="_AaLp6YGbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZgUcYGbEeuPkZNKCcfHxw" value="new EditAction()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZgUc4GbEeuPkZNKCcfHxw" name="cancelAction" visibility="private" isLeaf="true" type="_AYPwMoGbEeuPkZNKCcfHxw" isReadOnly="true" association="_AaLp7IGbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZgUdIGbEeuPkZNKCcfHxw" value="new CancelAction()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZgUdoGbEeuPkZNKCcfHxw" name="oKAction" visibility="private" isLeaf="true" type="_AYPwMoGbEeuPkZNKCcfHxw" isReadOnly="true" association="_AaMQ8YGbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZgUd4GbEeuPkZNKCcfHxw" value="new OKAction()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZgUeYGbEeuPkZNKCcfHxw" name="newAction" visibility="private" isLeaf="true" type="_AYPwMoGbEeuPkZNKCcfHxw" isReadOnly="true" association="_AaMQ9IGbEeuPkZNKCcfHxw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZgUeoGbEeuPkZNKCcfHxw" value="new NewAction()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZgUfIGbEeuPkZNKCcfHxw" name="okActionSelector" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZgUfYGbEeuPkZNKCcfHxw" value="BusinessUnitUI.OK_ACTION_UNDEFINED"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtv5IGbEeuPkZNKCcfHxw" name="BusinessUnitUI" specification="_AYdyoIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZtv5YGbEeuPkZNKCcfHxw" name="session" type="_AQp6foGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZtv5oGbEeuPkZNKCcfHxw" type="_AQ6ZIIGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>this.session = session;&#xD;
		setLayout(null);&#xD;
		panelVisible = true;&#xD;
		&#xD;
		JTextPane bUnitTxt = new JTextPane();&#xD;
		bUnitTxt.setFont(new Font(&quot;Tahoma&quot;, Font.BOLD, 20));&#xD;
		bUnitTxt.setText(&quot;DATOS DE LAS UNIDADES DE NEGOCIO&quot;);&#xD;
		bUnitTxt.setBackground(UIManager.getColor(this.getBackground()));&#xD;
		bUnitTxt.setEditable(false);&#xD;
		bUnitTxt.setFocusable(false);&#xD;
		bUnitTxt.setBounds(50, 50, 410, 30);&#xD;
		add(bUnitTxt);&#xD;
		&#xD;
		JLabel companyLabel = new JLabel(&quot;Empresa&quot;);&#xD;
		companyLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		companyLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		companyLabel.setBounds(50, 125, 200, 25);&#xD;
		add(companyLabel);&#xD;
		&#xD;
		JLabel selectLabel = new JLabel(&quot;Unidades de negocio&quot;);&#xD;
		selectLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		selectLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		selectLabel.setBounds(50, 175, 200, 25);&#xD;
		add(selectLabel);&#xD;
		&#xD;
		JLabel nameLabel = new JLabel(&quot;Nombre&quot;);&#xD;
		nameLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		nameLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		nameLabel.setBounds(50, 225, 200, 25);&#xD;
		add(nameLabel);&#xD;
		&#xD;
		JLabel addressLabel = new JLabel(&quot;Dirección&quot;);&#xD;
		addressLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		addressLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		addressLabel.setBounds(50, 275, 200, 25);&#xD;
		add(addressLabel);&#xD;
		&#xD;
		JLabel provinceLabel = new JLabel(&quot;Provincia&quot;);&#xD;
		provinceLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		provinceLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		provinceLabel.setBounds(50, 325, 200, 25);&#xD;
		add(provinceLabel);&#xD;
		&#xD;
		JLabel stateLabel = new JLabel(&quot;Estado&quot;);&#xD;
		stateLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		stateLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		stateLabel.setBounds(50, 375, 200, 25);&#xD;
		add(stateLabel);&#xD;
		&#xD;
		JLabel postalCodeLabel = new JLabel(&quot;Código postal&quot;);&#xD;
		postalCodeLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		postalCodeLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		postalCodeLabel.setBounds(50, 425, 200, 25);&#xD;
		add(postalCodeLabel);&#xD;
		&#xD;
		JLabel telephoneLabel = new JLabel(&quot;Teléfono&quot;);&#xD;
		telephoneLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		telephoneLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		telephoneLabel.setBounds(50, 475, 200, 25);&#xD;
		add(telephoneLabel);&#xD;
		&#xD;
		JLabel mailLabel = new JLabel(&quot;E-mail&quot;);&#xD;
		mailLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		mailLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		mailLabel.setBounds(50, 525, 200, 25);&#xD;
		add(mailLabel);&#xD;
		&#xD;
		JLabel activaLabel = new JLabel(&quot;Activa&quot;);&#xD;
		activaLabel.setHorizontalAlignment(SwingConstants.RIGHT);&#xD;
		activaLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		activaLabel.setBounds(50, 575, 200, 25);&#xD;
		add(activaLabel);&#xD;
		&#xD;
		companyField = new JTextField();&#xD;
		companyField.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		companyField.setBackground(UIManager.getColor(new JPanel().getBackground()));&#xD;
		companyField.setBounds(260, 125, 400, 25);&#xD;
		companyField.setText(session.getbUnit().get().getNombre());&#xD;
		companyField.setEditable(false);&#xD;
		textFieldList.add(companyField);&#xD;
		textFieldContentList.add(session.getbUnit().get().getNombre());&#xD;
		add(companyField);&#xD;
		&#xD;
		activeFilterCheckBox = new JCheckBox(&quot; solo activas&quot;);&#xD;
		activeFilterCheckBox.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		activeFilterCheckBox.setBounds(666, 175, 154, 25);&#xD;
		activeFilterCheckBox.setSelected(session.getbUnit().isActivo() ? true : false);&#xD;
		activeFilterCheckBox.addItemListener(new CheckBoxListener());&#xD;
		add(activeFilterCheckBox);&#xD;
		&#xD;
		comboList = getComboBoxItemsFromSession(activeFilterCheckBox.isSelected());&#xD;
		comboBox = new JComboBox(comboList);&#xD;
		comboBox.setSelectedIndex(getSelectedIndexFromArray(comboList));&#xD;
		comboBox.addItemListener(new ComboListener());&#xD;
		comboBox.setBounds(260, 175, 400, 25);&#xD;
		comboBox.setEditable(false);&#xD;
		ToolBox.setBlackForeground(comboBox);&#xD;
		comboBox.setBackground(Color.WHITE);&#xD;
		add(comboBox);&#xD;
		if (!session.getUser().getUserType().equals(&quot;ADMIN&quot;)) {&#xD;
			comboBox.setEnabled(false);&#xD;
		}&#xD;
	&#xD;
		nameField = new JTextField();&#xD;
		nameField.setColumns(10);&#xD;
		nameField.setBounds(260, 225, 400, 25);&#xD;
		nameField.setText(session.getbUnit().getNombre());&#xD;
		nameField.setEditable(false);&#xD;
		nameField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					addressField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(nameField);&#xD;
		textFieldContentList.add(session.getbUnit().getNombre());&#xD;
		add(nameField);&#xD;
		&#xD;
		addressField = new JTextField();&#xD;
		addressField.setColumns(10);&#xD;
		addressField.setBounds(260, 275, 400, 25);&#xD;
		addressField.setText(session.getbUnit().getDireccion());&#xD;
		addressField.setEditable(false);&#xD;
		addressField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					provinceField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(addressField);&#xD;
		textFieldContentList.add(session.getbUnit().getDireccion());&#xD;
		add(addressField);&#xD;
		&#xD;
		provinceField = new JTextField();&#xD;
		provinceField.setColumns(10);&#xD;
		provinceField.setBounds(260, 325, 200, 25);&#xD;
		provinceField.setText(session.getbUnit().getProvincia());&#xD;
		provinceField.setEditable(false);&#xD;
		provinceField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					stateField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(provinceField);&#xD;
		textFieldContentList.add(session.getbUnit().getProvincia());&#xD;
		add(provinceField);&#xD;
		&#xD;
		stateField = new JTextField();&#xD;
		stateField.setColumns(10);&#xD;
		stateField.setBounds(260, 375, 200, 25);&#xD;
		stateField.setText(session.getbUnit().getEstado());&#xD;
		stateField.setEditable(false);&#xD;
		stateField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					postalCodeField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(stateField);&#xD;
		textFieldContentList.add(session.getbUnit().getEstado());&#xD;
		add(stateField);&#xD;
		&#xD;
		postalCodeField = new JTextField();&#xD;
		postalCodeField.setColumns(10);&#xD;
		postalCodeField.setBounds(260, 425, 100, 25);&#xD;
		postalCodeField.setText(session.getbUnit().getCpostal());&#xD;
		postalCodeField.setEditable(false);&#xD;
		postalCodeField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					telephoneField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(postalCodeField);&#xD;
		textFieldContentList.add(session.getbUnit().getCpostal());&#xD;
		add(postalCodeField);&#xD;
		&#xD;
		telephoneField = new JTextField();&#xD;
		telephoneField.setColumns(10);&#xD;
		telephoneField.setBounds(260, 475, 100, 25);&#xD;
		telephoneField.setText(session.getbUnit().getTelefono());&#xD;
		telephoneField.setEditable(false);&#xD;
		telephoneField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					mailField.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(telephoneField);&#xD;
		textFieldContentList.add(session.getbUnit().getTelefono());&#xD;
		add(telephoneField);&#xD;
		&#xD;
		mailField = new JTextField();&#xD;
		mailField.setColumns(10);&#xD;
		mailField.setBounds(260, 525, 400, 25);&#xD;
		mailField.setText(session.getbUnit().getMail());&#xD;
		mailField.setEditable(false);&#xD;
		mailField.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					activeCheckBox.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		textFieldList.add(mailField);&#xD;
		textFieldContentList.add(session.getbUnit().getMail());&#xD;
		add(mailField);&#xD;
		&#xD;
		activeCheckBox = new JCheckBox();&#xD;
		activeCheckBox.setBounds(260, 575, 100, 25);&#xD;
		activeCheckBox.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		activeCheckBox.setSelected(session.getbUnit().isActivo());&#xD;
		activeCheckBox.setEnabled(false);&#xD;
		activeCheckBox.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyTyped(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_SPACE) {&#xD;
					activeCheckBox.setSelected(activeCheckBox.isSelected() ? false : true);&#xD;
				}&#xD;
			}&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					oKButton.requestFocusInWindow();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		lastActive = activeCheckBox.isSelected();&#xD;
		add(activeCheckBox);&#xD;
				&#xD;
		JLabel maxCharsLabel = new JLabel(&quot;Max: 100 caracteres&quot;);&#xD;
		maxCharsLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel.setBounds(670, 225, 150, 25);&#xD;
		maxCharsLabel.setVisible(false);&#xD;
		labelList.add(maxCharsLabel);&#xD;
		add(maxCharsLabel);&#xD;
		&#xD;
		JLabel maxCharsLabel2 = new JLabel(&quot;Max: 150 caracteres&quot;);&#xD;
		maxCharsLabel2.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel2.setBounds(670, 275, 150, 25);&#xD;
		maxCharsLabel2.setVisible(false);&#xD;
		labelList.add(maxCharsLabel2);&#xD;
		add(maxCharsLabel2);&#xD;
		&#xD;
		JLabel maxCharsLabel3 = new JLabel(&quot;Max: 50 caracteres&quot;);&#xD;
		maxCharsLabel3.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel3.setBounds(470, 327, 150, 25);&#xD;
		maxCharsLabel3.setVisible(false);&#xD;
		labelList.add(maxCharsLabel3);&#xD;
		add(maxCharsLabel3);&#xD;
		&#xD;
		JLabel maxCharsLabel4 = new JLabel(&quot;Max: 50 caracteres&quot;);&#xD;
		maxCharsLabel4.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel4.setBounds(470, 377, 150, 25);&#xD;
		maxCharsLabel4.setVisible(false);&#xD;
		labelList.add(maxCharsLabel4);&#xD;
		add(maxCharsLabel4);&#xD;
		&#xD;
		JLabel maxCharsLabel5 = new JLabel(&quot;Max: 8 caracteres&quot;);&#xD;
		maxCharsLabel5.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel5.setBounds(370, 427, 150, 25);&#xD;
		maxCharsLabel5.setVisible(false);&#xD;
		labelList.add(maxCharsLabel5);&#xD;
		add(maxCharsLabel5);&#xD;
		&#xD;
		JLabel maxCharsLabel6 = new JLabel(&quot;Max: 15 caracteres&quot;);&#xD;
		maxCharsLabel6.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel6.setBounds(370, 475, 150, 25);&#xD;
		maxCharsLabel6.setVisible(false);&#xD;
		labelList.add(maxCharsLabel6);&#xD;
		add(maxCharsLabel6);&#xD;
		&#xD;
		JLabel maxCharsLabel7 = new JLabel(&quot;Max: 100 caracteres&quot;);&#xD;
		maxCharsLabel7.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		maxCharsLabel7.setBounds(670, 525, 150, 25);&#xD;
		maxCharsLabel7.setVisible(false);&#xD;
		labelList.add(maxCharsLabel7);&#xD;
		add(maxCharsLabel7);&#xD;
		&#xD;
		infoLabel = new JLabel();&#xD;
		infoLabel.setHorizontalAlignment(SwingConstants.CENTER);&#xD;
		infoLabel.setBounds(50, 625, 1000, 25);&#xD;
		add(infoLabel);&#xD;
		&#xD;
		oKButton = new JButton();&#xD;
		oKButton.setAction(oKAction);&#xD;
		oKButton.setBounds(731, 675, 89, 23);&#xD;
		oKButton.setEnabled(false);&#xD;
		oKButton.addKeyListener(new KeyAdapter() {&#xD;
			@Override&#xD;
			public void keyPressed(KeyEvent e) {&#xD;
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
					oKButton.doClick();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		add(oKButton);&#xD;
		&#xD;
		cancelButton = new JButton();&#xD;
		cancelButton.setAction(cancelAction);&#xD;
		cancelButton.setBounds(632, 675, 89, 23);&#xD;
		cancelButton.setEnabled(false);&#xD;
		add(cancelButton);&#xD;
		&#xD;
		editButton = new JButton();&#xD;
		editButton.setAction(editAction);&#xD;
		editButton.setBounds(531, 675, 89, 23);&#xD;
		if (!session.getUser().getUserType().equals(&quot;ADMIN&quot;)) {&#xD;
			editButton.setEnabled(false);&#xD;
		}&#xD;
		add(editButton);&#xD;
		&#xD;
		newButton = new JButton();&#xD;
		newButton.setAction(newAction);&#xD;
		newButton.setBounds(431, 675, 89, 23);&#xD;
		if (!session.getUser().getUserType().equals(&quot;ADMIN&quot;)) {&#xD;
			newButton.setEnabled(false);&#xD;
		}&#xD;
		add(newButton);&#xD;
		&#xD;
		/*Iniciamos la comprobación periódica de actualizaciones&#xD;
		* Se realiza 2 veces por cada comprobación de los cambios en la base de datos que hace&#xD;
		* el objeto session. Esto evita que si se produce la comprobación de datos que hace cada panel&#xD;
		* cuando la actualización de datos que hace el objeto session aún no ha finalizado, se considere&#xD;
		* por error que no había cambios.&#xD;
		* Existe la posibilidad de que eso ocurra porque se comprueban y actualizan los datos de cada tabla&#xD;
		* de manera consecutiva. Si a media actualización de los datos, un panel comprueba los datos que le&#xD;
		* atañen y su actualización aún no se ha hecho, no los actualizará. Además, el registro de cambios&#xD;
		* interno del objeto session se sobreescribirá en cuanto inicie una nueva comprobación, y el panel&#xD;
		* nunca podrá reflejar los cambios. Eso pasaría si la actualización del panel se hace al mismo ritmo&#xD;
		* o más lenta que la comprobación de los datos que hace el objeto session.&#xD;
		*/&#xD;
		timer = new Timer();&#xD;
		TimerTask task = new TimerJob();&#xD;
		timer.scheduleAtFixedRate(task, 1000, 30000);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtv54GbEeuPkZNKCcfHxw" name="populateTextFields" specification="_AQ7AMIGbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>companyField.setText(session.getCompany().getNombre());&#xD;
		nameField.setText(session.getbUnit().getNombre());&#xD;
		addressField.setText(session.getbUnit().getDireccion());&#xD;
		provinceField.setText(session.getbUnit().getProvincia());&#xD;
		stateField.setText(session.getbUnit().getEstado());&#xD;
		postalCodeField.setText(session.getbUnit().getCpostal());&#xD;
		telephoneField.setText(session.getbUnit().getTelefono());&#xD;
		mailField.setText(session.getbUnit().getMail());&#xD;
		//Aunque no es un textfield, el valor de activeCheckBox también hay que mostrarlo actualizado&#xD;
		activeCheckBox.setSelected(session.getbUnit().isActivo());&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtv6IGbEeuPkZNKCcfHxw" name="testData" specification="_AYdypYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZtv6YGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZtv6oGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>//Comprobamos que los datos no exceden el tamaño máximo, no llegan al mínimo, o no hay nombres duplicados&#xD;
		Boolean error = false;&#xD;
		String errorLengthText = &quot;LA LONGITUD DE LOS DATOS EXCEDE EL TAMAÑO MÁXIMO O FALTAN DATOS&quot;;&#xD;
		String errorNameText = &quot;YA EXISTE UNA UNIDAD DE NEGOCIO CON ESE NOMBRE&quot;;&#xD;
		&#xD;
		List&lt;BusinessUnit> bUnitList = new BusinessUnit().getBusinessUnitsFromDB(session.getConnection(), session.getCompany());&#xD;
		for (BusinessUnit unit: bUnitList) {&#xD;
			//Si el nombre de la unidad de negocio creada o editada ya existe en alguna unidad de negocio (excluyéndose ella misma),&#xD;
			//no se permite la asignación de nombre&#xD;
			if (bUnit.getNombre().equals(unit.getNombre()) &amp;&amp; !bUnit.getNombre().equals(session.getbUnit().getNombre())) {&#xD;
				infoLabel.setText(errorNameText);&#xD;
				nameField.setBackground(Color.YELLOW);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		if (bUnit.getNombre().length() > 100 || bUnit.getNombre().length() == 0) {&#xD;
			nameField.setBackground(Color.YELLOW);&#xD;
			error = true;&#xD;
		}&#xD;
		if (bUnit.getDireccion().length() > 150) {&#xD;
			addressField.setBackground(Color.YELLOW);&#xD;
			error = true;&#xD;
		}&#xD;
		if (bUnit.getProvincia().length() > 50) {&#xD;
			provinceField.setBackground(Color.YELLOW);&#xD;
			error = true;&#xD;
		}&#xD;
		if (bUnit.getEstado().length() > 50) {&#xD;
			stateField.setBackground(Color.YELLOW);&#xD;
			error = true;&#xD;
		}&#xD;
		if (bUnit.getCpostal().length() > 8) {&#xD;
			postalCodeField.setBackground(Color.YELLOW);&#xD;
			error = true;&#xD;
		}&#xD;
		if (bUnit.getTelefono().length() > 15) {&#xD;
			telephoneField.setBackground(Color.YELLOW);&#xD;
			error = true;&#xD;
		}&#xD;
		if (bUnit.getMail().length() > 100) {&#xD;
			mailField.setBackground(Color.YELLOW);&#xD;
			error = true;&#xD;
		}&#xD;
&#xD;
		//Si hay un error, mensaje de error y retornamos false&#xD;
		if (error) {&#xD;
			infoLabel.setText(errorLengthText);&#xD;
			return false;&#xD;
		}&#xD;
		return true;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtv64GbEeuPkZNKCcfHxw" name="getComboBoxItemsFromSession" specification="_AQ7AMYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZtv7IGbEeuPkZNKCcfHxw" name="active">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZtv7YGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZtv7oGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;String> tempList = new ArrayList&lt;String>();&#xD;
		for (BusinessUnit bUnit: session.getCompany().getBusinessUnits()) {&#xD;
			if (active) {&#xD;
				if (bUnit.isActivo()) {&#xD;
					tempList.add(bUnit.getNombre());&#xD;
				}&#xD;
			} else {&#xD;
				tempList.add(bUnit.getNombre());&#xD;
			}&#xD;
		}&#xD;
		Object[] object = (Object[]) tempList.toArray();&#xD;
		String[] itemList = new String[object.length];&#xD;
		for (int i = 0; i &lt; object.length; i++) {&#xD;
			itemList[i] = object[i].toString();&#xD;
		}&#xD;
		Arrays.sort(itemList);&#xD;
		return itemList;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtv74GbEeuPkZNKCcfHxw" name="getSelectedIndexFromArray" specification="_AQ7ANoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZtv8IGbEeuPkZNKCcfHxw" name="array">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZtv8YGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZtv8oGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>for (int i = 0; i &lt; array.length; i++) {&#xD;
			if (array[i].equals(session.getbUnit().getNombre())) {&#xD;
				return i;&#xD;
			}&#xD;
		}&#xD;
		return 0;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZtv84GbEeuPkZNKCcfHxw" name="refreshComboBox" specification="_AQ7nQ4GbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>comboList = getComboBoxItemsFromSession(activeFilterCheckBox.isSelected());&#xD;
		comboBox.setModel(new DefaultComboBoxModel(comboList));&#xD;
		comboBox.setSelectedIndex(getSelectedIndexFromArray(comboList));&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZuW4IGbEeuPkZNKCcfHxw" name="editableDataOn" specification="_AQ7nRIGbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>//Activar visibilidad de etiquetas de longitud máxima de datos&#xD;
		for (JLabel label : labelList) {&#xD;
			label.setVisible(true);&#xD;
		}&#xD;
		//Datos editables&#xD;
		for (JTextField tField : textFieldList) {&#xD;
			if (tField != companyField) {&#xD;
				tField.setEditable(true);&#xD;
				tField.setBackground(Color.WHITE);&#xD;
			}&#xD;
		}&#xD;
		//Habilitamos checkbox &quot;Activa&quot; si la unidad de negocio no es la unidad de negocio por defecto&#xD;
		if (session.getbUnit().getId() != 1 ) {&#xD;
			activeCheckBox.setEnabled(true);&#xD;
		} else {&#xD;
			activeCheckBox.setEnabled(false);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZuW4YGbEeuPkZNKCcfHxw" name="editableDataOff" specification="_AQ7nRYGbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>//Quitar visibilidad de etiquetas de longitud máxima de datos&#xD;
		for (JLabel label : labelList) {&#xD;
			label.setVisible(false);&#xD;
		}&#xD;
		//Datos no editables&#xD;
		for (JTextField tField : textFieldList) {&#xD;
			tField.setBackground(UIManager.getColor(new JPanel().getBackground()));&#xD;
			tField.setEditable(false);&#xD;
		}&#xD;
		//Deshabilitamos checkbox &quot;Activa&quot;&#xD;
		activeCheckBox.setEnabled(false);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZuW4oGbEeuPkZNKCcfHxw" name="updateDataCache" specification="_AQ7nRoGbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>//Vaciamos la lista de datos del caché de datos&#xD;
		textFieldContentList.clear();&#xD;
		//Añadimos los nuevos datos&#xD;
		for (int i = 0; i &lt; textFieldList.size(); i++) {&#xD;
			textFieldContentList.add(textFieldList.get(i).getText());&#xD;
		}&#xD;
		//Guardamos el valor del ckeckbox &quot;Activa&quot;&#xD;
		lastActive = session.getbUnit().isActivo();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZuW44GbEeuPkZNKCcfHxw" name="afterNewOrEditBunit" specification="_AQ7nR4GbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>//Hacemos backup del contenido de los datos del formulario&#xD;
		updateDataCache();&#xD;
		//Formulario no editable&#xD;
		editableDataOff();&#xD;
		//Cambio de estado de los botones y el combobox&#xD;
		editButton.setEnabled(true);&#xD;
		newButton.setEnabled(true);&#xD;
		comboBox.setEnabled(true);&#xD;
		activeFilterCheckBox.setEnabled(true);&#xD;
		oKButton.setEnabled(false);&#xD;
		cancelButton.setEnabled(false);					&#xD;
		//El selector de acción retorna al estado sin definir&#xD;
		okActionSelector = BusinessUnitUI.OK_ACTION_UNDEFINED;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQ7AMIGbEeuPkZNKCcfHxw" name="populateTextFields" method="_AZtv54GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ2SvYGbEeuPkZNKCcfHxw">
                <body>Refresca los datos de la unidad de negocio de la sesión para que se visualicen en pantalla</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AQ7AMYGbEeuPkZNKCcfHxw" name="getComboBoxItemsFromSession" method="_AZtv64GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ2Sv4GbEeuPkZNKCcfHxw">
                <body>Obtiene la lista de unidades de negocio cargadas en el objeto company. Serán todas las que&#xD;
	 * existan en la base de datos si el usuario que abre sesión es de tipo administrador, y solo una&#xD;
	 * (la correspondiente al usuario que abre sesión) si es un usuario de otro tipo&#xD;
	 * @param active true si se muestran solo las unidades de negocio activas, false para mostrarlas todas&#xD;
	 * @return array ordenado alfabéticamente con la lista de unidades de negocio</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQ7AMoGbEeuPkZNKCcfHxw" name="active">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQ7AM4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AQ7ANIGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQ7ANoGbEeuPkZNKCcfHxw" name="getSelectedIndexFromArray" method="_AZtv74GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ2SwIGbEeuPkZNKCcfHxw">
                <body>Obiene el índice del elemento del objeto comboBox que será seleccionado por defecto a partir&#xD;
	 * del array pasado por parámetro&#xD;
	 * @param array array con la lista de unidades de negocio&#xD;
	 * @return índice del elemento a seleccionar por defecto</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQ7nQIGbEeuPkZNKCcfHxw" name="array">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AQ7nQoGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQ7nQYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQ7nQ4GbEeuPkZNKCcfHxw" name="refreshComboBox" method="_AZtv84GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ2SwYGbEeuPkZNKCcfHxw">
                <body>Actualiza el contenido del comboBox que selecciona la unidad de negocio activa</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AQ7nRIGbEeuPkZNKCcfHxw" name="editableDataOn" method="_AZuW4IGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ2SwoGbEeuPkZNKCcfHxw">
                <body>Habilita los campos del formulario para que pueda introducirse información</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AQ7nRYGbEeuPkZNKCcfHxw" name="editableDataOff" method="_AZuW4YGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ2Sw4GbEeuPkZNKCcfHxw">
                <body>Deshabilita los campos del formulario para impedir que se modifique su contenido</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AQ7nRoGbEeuPkZNKCcfHxw" name="updateDataCache" method="_AZuW4oGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ2SxIGbEeuPkZNKCcfHxw">
                <body>Hace una copia de los datos que figuran en el formulario. Al cancelar la edición o la creación de una&#xD;
	 * nueva unidad de negocio, podremos recuperar por pantalla los datos de la última unidad de negocio que&#xD;
	 * estaba seleccionada.</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AQ7nR4GbEeuPkZNKCcfHxw" name="afterNewOrEditBunit" method="_AZuW44GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ2SxYGbEeuPkZNKCcfHxw">
                <body>Devuelve el formulario a su estado previo tras la creación o la edición de una unidad de negocio</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AYdyoIGbEeuPkZNKCcfHxw" name="BusinessUnitUI" method="_AZtv5IGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AYdyooGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AYdyo4GbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_AZ2SvIGbEeuPkZNKCcfHxw">
                <body>@wbp.parser.constructor</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYdyoYGbEeuPkZNKCcfHxw" name="session" type="_AQp6foGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYdypIGbEeuPkZNKCcfHxw" type="_AQ6ZIIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYdypYGbEeuPkZNKCcfHxw" name="testData" method="_AZtv6IGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ2SvoGbEeuPkZNKCcfHxw">
                <body>Comprueba la corrección de los datos introducidos en el formulario. Cualquier dato incorrecto se resalta&#xD;
	 * con el fondo del campo en amarillo&#xD;
	 * @param bUnit unidad de negocio de la que se comprueban los datos&#xD;
	 * @return true si son correctos, false si no lo son</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYdypoGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYdyp4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQ7nSIGbEeuPkZNKCcfHxw" name="ComboListener" visibility="private">
              <ownedComment xmi:id="_AZ2SxoGbEeuPkZNKCcfHxw">
                <body>Listener que define el comportamiento del objeto comboBox. Cada elemento se corresponde con&#xD;
	 * las unidades de negocio de la compañía que se han cargado en la sesión. Por el nombre seleccionado&#xD;
	 * se localiza el objeto BusinessUnit al que pertenece y se asigna dicho objeto como unidad de negocio&#xD;
	 * de la sessión, reemplazando al que hubiera hasta ese momento. Si activeFilterCheckBox está seleccionado,&#xD;
	 * no se mostrarán las unidades de negocio que estén marcadas como no activas</body>
              </ownedComment>
              <interfaceRealization xmi:id="_AZBzUIGbEeuPkZNKCcfHxw" client="_AQ7nSIGbEeuPkZNKCcfHxw" supplier="_AYWd5IGbEeuPkZNKCcfHxw" contract="_AYWd5IGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZuW5IGbEeuPkZNKCcfHxw" name="itemStateChanged" specification="_AZBzUYGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZuW5YGbEeuPkZNKCcfHxw" name="e" type="_AYWd4oGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>String item = (String) comboBox.getSelectedItem();&#xD;
			Company company = session.getCompany();&#xD;
			//Recuperamos la unidad de negocio seleccionada&#xD;
			BusinessUnit selectedBunit = new BusinessUnit().getBusinessUnitByName(company, item);			&#xD;
			//La asignamos a la sesión&#xD;
			session.setbUnit(selectedBunit);&#xD;
			//Registramos que la unidad de negocio seleccionada es la que se está mostrando&#xD;
			bUnitShowing = selectedBunit;&#xD;
			//Mostramos sus datos&#xD;
			populateTextFields();&#xD;
			//Hacemos backup del contenido de los datos del formulario&#xD;
			updateDataCache();&#xD;
			//Vaciamos label de información&#xD;
			infoLabel.setText(&quot;&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AZBzUYGbEeuPkZNKCcfHxw" name="itemStateChanged" method="_AZuW5IGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZBzUoGbEeuPkZNKCcfHxw" name="e" type="_AYWd4oGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQ7nSYGbEeuPkZNKCcfHxw" name="CheckBoxListener" visibility="private">
              <ownedComment xmi:id="_AZ2Sx4GbEeuPkZNKCcfHxw">
                <body>Listener que define el comportamiento del checkbox activeFilterCheckBox.&#xD;
	 * Si activamos el checkbox y la unidad de negocio en pantalla está activa no habrá ningún cambio. Si no está activa,&#xD;
	 * la unidad de negocio de la sesión pasará a ser la del usuario que abrió sesión, y se mostrará en pantalla. En ese&#xD;
	 * caso comboBox dejará de mostrar las unidades de negocio no activas.&#xD;
	 * Si desactivamos el checkbox no habrá ningún cambio. comboBox pasará a mostrar todas las unidades de negocio cargadas en&#xD;
	 * la sesión.</body>
              </ownedComment>
              <interfaceRealization xmi:id="_AZBzVoGbEeuPkZNKCcfHxw" client="_AQ7nSYGbEeuPkZNKCcfHxw" supplier="_AYWd5IGbEeuPkZNKCcfHxw" contract="_AYWd5IGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZuW5oGbEeuPkZNKCcfHxw" name="itemStateChanged" specification="_AZBzV4GbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZuW54GbEeuPkZNKCcfHxw" name="e" type="_AYWd4oGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>int state = e.getStateChange();&#xD;
			if (state == ItemEvent.SELECTED) {&#xD;
				//Si la bUnit de la sesión no está activa&#xD;
				if (session.getbUnit().isActivo() == false) {		&#xD;
					//Buscamos la bUnit del usuario que abrió sesión&#xD;
					BusinessUnit userBunit = new BusinessUnit().getBusinessUnitById(session.getCompany(), session.getUser().getbUnit().getId());&#xD;
					//La asignamos como bUnit de la sesión&#xD;
					session.setbUnit(userBunit);&#xD;
					//Registramos que la unidad de negocio seleccionada es la que se está mostrando&#xD;
					bUnitShowing = userBunit;&#xD;
					//Mostramos sus datos&#xD;
					populateTextFields();&#xD;
					//Hacemos backup del contenido de los datos del formulario&#xD;
					updateDataCache();&#xD;
					//Renovamos la lista de las unidades de negocio del comboBox&#xD;
					refreshComboBox();&#xD;
					//Vaciamos label de información&#xD;
					infoLabel.setText(&quot;&quot;);&#xD;
				//Si la bUnit de la sesión está activa, hay que renovar el combobox igualmente para que ya no salgan las bUnits no activas&#xD;
				} else {&#xD;
					//Renovamos la lista de las unidades de negocio del comboBox&#xD;
					refreshComboBox();&#xD;
				}&#xD;
			} else if (state == ItemEvent.DESELECTED) {&#xD;
				//Renovamos la lista de las unidades de negocio del comboBox&#xD;
				refreshComboBox();&#xD;
			}&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AZBzV4GbEeuPkZNKCcfHxw" name="itemStateChanged" method="_AZuW5oGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZBzWIGbEeuPkZNKCcfHxw" name="e" type="_AYWd4oGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQ8OUIGbEeuPkZNKCcfHxw" name="NewAction" visibility="private">
              <ownedComment xmi:id="_AZ2SyIGbEeuPkZNKCcfHxw">
                <body>Acción del botón Nueva. Se deshabilita el propio botón, el botón Editar y el combobox. Vaciamos los&#xD;
	 * campos de texto y habilitamos su edición para añadir la información de una nueva unidad de negocio.&#xD;
	 * Habilitamos el botón de Cancelar para que los cambios no se registren y el de Aceptar para que sí lo hagan.</body>
              </ownedComment>
              <generalization xmi:id="_AZCaYIGbEeuPkZNKCcfHxw" general="_AYPwMIGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZuW6IGbEeuPkZNKCcfHxw" name="NewAction" specification="_AQ8OUYGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZuW6YGbEeuPkZNKCcfHxw" type="_AQ8OUIGbEeuPkZNKCcfHxw" direction="return"/>
                <language>java</language>
                <body>putValue(NAME, &quot;Nueva&quot;);&#xD;
			putValue(SHORT_DESCRIPTION, &quot;Add new business unit&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZuW6oGbEeuPkZNKCcfHxw" name="actionPerformed" specification="_AZBzXIGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZuW64GbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>okActionSelector = BusinessUnitUI.OK_ACTION_NEW;&#xD;
			//Cambio de estado de los botones y el combobox&#xD;
			oKButton.setEnabled(true);&#xD;
			cancelButton.setEnabled(true);&#xD;
			editButton.setEnabled(false);&#xD;
			newButton.setEnabled(false);&#xD;
			comboBox.setEnabled(false);&#xD;
			activeFilterCheckBox.setEnabled(false);&#xD;
			infoLabel.setText(&quot;&quot;);&#xD;
			//Formulario editable&#xD;
			editableDataOn();&#xD;
			//Vaciamos los campos de texto&#xD;
			for (JTextField tField : textFieldList) {&#xD;
				if (tField != companyField) {&#xD;
					tField.setText(&quot;&quot;);&#xD;
				}&#xD;
			}&#xD;
			//checkbox &quot;Activa&quot; activo por defecto&#xD;
			activeCheckBox.setSelected(true);&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQ8OUYGbEeuPkZNKCcfHxw" name="NewAction" method="_AZuW6IGbEeuPkZNKCcfHxw">
                <eAnnotations xmi:id="_AQ8OUoGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AQ8OU4GbEeuPkZNKCcfHxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AQ8OVIGbEeuPkZNKCcfHxw" type="_AQ8OUIGbEeuPkZNKCcfHxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AZBzXIGbEeuPkZNKCcfHxw" name="actionPerformed" method="_AZuW6oGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZBzXYGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQ8OVYGbEeuPkZNKCcfHxw" name="EditAction" visibility="private">
              <ownedComment xmi:id="_AZ2SyYGbEeuPkZNKCcfHxw">
                <body>Acción del botón Editar. Se deshabilita el propio botón. Habilita la edición de la información&#xD;
	 * del formulario, el botón de Cancelar para que los cambios no se registren y el de Aceptar para&#xD;
	 * que sí lo hagan.</body>
              </ownedComment>
              <generalization xmi:id="_AZCaY4GbEeuPkZNKCcfHxw" general="_AYPwMIGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZuW7IGbEeuPkZNKCcfHxw" name="EditAction" specification="_AQ8OVoGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZuW7YGbEeuPkZNKCcfHxw" type="_AQ8OVYGbEeuPkZNKCcfHxw" direction="return"/>
                <language>java</language>
                <body>putValue(NAME, &quot;Editar&quot;);&#xD;
			putValue(SHORT_DESCRIPTION, &quot;Enable data edit&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZuW7oGbEeuPkZNKCcfHxw" name="actionPerformed" specification="_AZCaYYGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZuW74GbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>okActionSelector = BusinessUnitUI.OK_ACTION_EDIT;&#xD;
			//Cambio de estado de los botones y el combobox&#xD;
			oKButton.setEnabled(true);&#xD;
			cancelButton.setEnabled(true);&#xD;
			editButton.setEnabled(false);&#xD;
			newButton.setEnabled(false);&#xD;
			comboBox.setEnabled(false);&#xD;
			activeFilterCheckBox.setEnabled(false);&#xD;
			infoLabel.setText(&quot;&quot;);&#xD;
			//Formulario editable&#xD;
			editableDataOn();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQ8OVoGbEeuPkZNKCcfHxw" name="EditAction" method="_AZuW7IGbEeuPkZNKCcfHxw">
                <eAnnotations xmi:id="_AQ8OV4GbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AQ8OWIGbEeuPkZNKCcfHxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AQ8OWYGbEeuPkZNKCcfHxw" type="_AQ8OVYGbEeuPkZNKCcfHxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AZCaYYGbEeuPkZNKCcfHxw" name="actionPerformed" method="_AZuW7oGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZCaYoGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQ8OWoGbEeuPkZNKCcfHxw" name="CancelAction" visibility="private">
              <ownedComment xmi:id="_AZ2SyoGbEeuPkZNKCcfHxw">
                <body>Acción del botón Cancelar. Se deshabilita el propio botón y el botón Aceptar. Se habilita el botón Editar y el&#xD;
	 * botón Nueva. Descarta los cambios en los datos introducidos en el formulario. No se graban en la base de datos &#xD;
	 * ni en el objeto businessUnit. Se recupera la información que figuraba anteriormente en el formulario. Se borra &#xD;
	 * cualquier mensaje de error mostrado anteriormente</body>
              </ownedComment>
              <generalization xmi:id="_AZCaZoGbEeuPkZNKCcfHxw" general="_AYPwMIGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZuW8IGbEeuPkZNKCcfHxw" name="CancelAction" specification="_AQ8OW4GbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZuW8YGbEeuPkZNKCcfHxw" type="_AQ8OWoGbEeuPkZNKCcfHxw" direction="return"/>
                <language>java</language>
                <body>putValue(NAME, &quot;Cancelar&quot;);&#xD;
			putValue(SHORT_DESCRIPTION, &quot;Cancel data edit&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZuW8oGbEeuPkZNKCcfHxw" name="actionPerformed" specification="_AZCaZIGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZuW84GbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>okActionSelector = BusinessUnitUI.OK_ACTION_UNDEFINED;&#xD;
			//Cambio de estado de los botones y el combobox&#xD;
			editButton.setEnabled(true);&#xD;
			newButton.setEnabled(true);&#xD;
			comboBox.setEnabled(true);&#xD;
			activeFilterCheckBox.setEnabled(true);&#xD;
			oKButton.setEnabled(false);&#xD;
			cancelButton.setEnabled(false);&#xD;
			infoLabel.setText(&quot;&quot;);&#xD;
			//Formulario no editable&#xD;
			editableDataOff();		&#xD;
			//Recuperar valores previos a la edición de los datos&#xD;
			for (int i = 0; i &lt; textFieldList.size(); i++) {&#xD;
				textFieldList.get(i).setText(textFieldContentList.get(i));&#xD;
			}&#xD;
			//Recuperamos el valor anterior del checkbox &quot;Activa&quot;&#xD;
			activeCheckBox.setSelected(lastActive);&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQ8OW4GbEeuPkZNKCcfHxw" name="CancelAction" method="_AZuW8IGbEeuPkZNKCcfHxw">
                <eAnnotations xmi:id="_AQ8OXIGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AQ8OXYGbEeuPkZNKCcfHxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AQ8OXoGbEeuPkZNKCcfHxw" type="_AQ8OWoGbEeuPkZNKCcfHxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AZCaZIGbEeuPkZNKCcfHxw" name="actionPerformed" method="_AZuW8oGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZCaZYGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQ81YIGbEeuPkZNKCcfHxw" name="OKAction" visibility="private">
              <ownedComment xmi:id="_AZ2Sy4GbEeuPkZNKCcfHxw">
                <body>Acción del botón Aceptar. Se deshabilita el propio botón y el botón Cancelar. Se habilitan los&#xD;
	 * botones Editar y Nueva. Se intentan guardar los datos de la unidad de negocio actualizados en la base&#xD;
	 * de datos, o bien los datos de una nueva unidad de negocio. Si se consigue, se actualiza el objeto businessUnit&#xD;
	 * con dichos datos o se crea uno nuevo. Si no se consigue, no se produce la actualización o la creación&#xD;
	 * del objeto businessUnit y se muestra un mensaje de error. Se intenta guardar el registro&#xD;
	 * de la actualización de datos en la base de datos. Si no se consigue se muestra un mensaje de error.</body>
              </ownedComment>
              <generalization xmi:id="_AZCaaYGbEeuPkZNKCcfHxw" general="_AYPwMIGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZuW9IGbEeuPkZNKCcfHxw" name="OKAction" specification="_AQ81YYGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZuW9YGbEeuPkZNKCcfHxw" type="_AQ81YIGbEeuPkZNKCcfHxw" direction="return"/>
                <language>java</language>
                <body>putValue(NAME, &quot;Aceptar&quot;);&#xD;
			putValue(SHORT_DESCRIPTION, &quot;Execute new data or data edit&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZuW9oGbEeuPkZNKCcfHxw" name="actionPerformed" specification="_AZCaZ4GbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZuW94GbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>//Se recupera el fondo blanco de los campos para que una anterior validación errónea de los mismos&#xD;
			//no los deje amarillos permanentemente&#xD;
			for (JTextField tField : textFieldList) {&#xD;
				if (tField != companyField) {&#xD;
					tField.setBackground(Color.WHITE);&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			//Selección de comportamiento&#xD;
			&#xD;
			//Aceptamos la creación de una nueva unidad de negocio&#xD;
			if (okActionSelector == BusinessUnitUI.OK_ACTION_NEW) {&#xD;
				//Debug&#xD;
				System.out.println(&quot;Acción de grabar nueva unidad de negocio&quot;);&#xD;
&#xD;
				//Creamos nuevo BusinessUnit a partir de los datos del formulario&#xD;
				BusinessUnit newBunit = new BusinessUnit();&#xD;
				newBunit.set(session.getCompany());&#xD;
				newBunit.setNombre(nameField.getText());&#xD;
				newBunit.setDireccion(addressField.getText());&#xD;
				newBunit.setProvincia(provinceField.getText());&#xD;
				newBunit.setEstado(stateField.getText());&#xD;
				newBunit.setCpostal(postalCodeField.getText());&#xD;
				newBunit.setTelefono(telephoneField.getText());&#xD;
				newBunit.setMail(mailField.getText());&#xD;
				newBunit.setActivo(activeCheckBox.isSelected());&#xD;
				//Validamos los datos del formulario&#xD;
				if(testData(newBunit)) {&#xD;
					//Intentamos grabar la nueva unidad de negocio en la base de datos, retornando un objeto con idénticos&#xD;
					//datos que incluye también el id que le ha asignado dicha base de datos&#xD;
					BusinessUnit storedBunit = new BusinessUnit().addNewBusinessUnit(session.getConnection(), newBunit);&#xD;
					//Si la unidad de negocio se almacena correctamente en la base de datos&#xD;
					if (storedBunit != null) {&#xD;
						//Registramos fecha y hora de la actualización de los datos de la tabla business_unit&#xD;
						tNow = ToolBox.getTimestampNow();&#xD;
						infoLabel.setText(&quot;NUEVA UNIDAD DE NEGOCIO REGISTRADA: &quot; + session.formatTimestamp(tNow, null));&#xD;
						//Actualizamos los datos de la tabla last_modification&#xD;
						boolean changeRegister = PersistenceManager.updateTimeStampToDB(session.getConnection(), BusinessUnit.TABLE_NAME, tNow);&#xD;
						//Si se produce un error de actualización de la tabla last_modification. La actualización de la tabla business_unit&#xD;
						//no queda registrada&#xD;
						if(!changeRegister) {&#xD;
							infoLabel.setText(infoLabel.getText() + &quot; .ERROR DE REGISTRO DE ACTUALIZACIÓN&quot;);&#xD;
						}&#xD;
						//Añadimos la nueva unidad de negocio a la lista de unidades de negocio de la compañía&#xD;
						session.getCompany().getBusinessUnits().add(storedBunit);&#xD;
						&#xD;
						//Si el filtro de unidades de negocio está activo y la nueva unidad de negocio se crea como no activa, no puede asignarse&#xD;
						//como unidad de negocio de la sesión y por tanto tampoco puede visualizarse al aceptar su creación&#xD;
						if (activeFilterCheckBox.isSelected() &amp;&amp; storedBunit.isActivo() == false) {&#xD;
							//Recuperamos la bUnit del usuario que abre sesión&#xD;
							BusinessUnit userBunit = new BusinessUnit().getBusinessUnitById(session.getCompany(), session.getUser().getbUnit().getId());&#xD;
							//La asignamos como bUnit de la sesión&#xD;
							session.setbUnit(userBunit);&#xD;
							//Registramos que la unidad de negocio seleccionada es la que se está mostrando&#xD;
							bUnitShowing = userBunit;&#xD;
							//Mostramos sus datos&#xD;
							populateTextFields();&#xD;
							//Seleccionamos la bUnit de la sesión en el combobox. No hace falta actualizar los elementos del combobox&#xD;
							comboBox.setSelectedIndex(getSelectedIndexFromArray(comboList));&#xD;
							&#xD;
						//Si el filtro de unidades de negocio no está activo, la nueva unidad de negocio pasa a ser la unidad de negocio de la sesión,&#xD;
						//tanto si se crea como activa como si no&#xD;
						} else {&#xD;
							//Asignamos la nueva unidad de negocio como unidad de negocio de la sesión&#xD;
							session.setbUnit(storedBunit);&#xD;
							//Registramos que la nueva unidad de negocio es la que se está mostrando&#xD;
							bUnitShowing = storedBunit;							&#xD;
							//Renovamos la lista de las unidades de negocio del comboBox&#xD;
							refreshComboBox();&#xD;
						}&#xD;
						&#xD;
						//Devolvemos el formulario a su estado previo&#xD;
						afterNewOrEditBunit();&#xD;
				&#xD;
					//Si la unidad de negocio no se almacena correctamente en la base de datos &#xD;
					} else {&#xD;
						infoLabel.setText(&quot;ERROR DE GRABACIÓN DE LA NUEVA UNIDAD DE NEGOCIO EN LA BASE DE DATOS&quot;);&#xD;
					}&#xD;
				}&#xD;
				&#xD;
			//Aceptamos los cambios de la unidad de negocio editada	&#xD;
			} else if (okActionSelector == BusinessUnitUI.OK_ACTION_EDIT) {&#xD;
&#xD;
				//Debug&#xD;
				System.out.println(&quot;Guardando los cambios de la unidad de negocio &quot; + nameField.getText());&#xD;
				&#xD;
				//Objeto que recoge los datos actualizados&#xD;
				BusinessUnit updatedBunit = new BusinessUnit();&#xD;
				updatedBunit.setId(session.getbUnit().getId());&#xD;
				updatedBunit.set(session.getCompany());&#xD;
				updatedBunit.setNombre(nameField.getText());&#xD;
				updatedBunit.setDireccion(addressField.getText());&#xD;
				updatedBunit.setProvincia(provinceField.getText());&#xD;
				updatedBunit.setEstado(stateField.getText());&#xD;
				updatedBunit.setCpostal(postalCodeField.getText());&#xD;
				updatedBunit.setTelefono(telephoneField.getText());&#xD;
				updatedBunit.setMail(mailField.getText());&#xD;
				updatedBunit.setActivo(activeCheckBox.isSelected());&#xD;
				&#xD;
//				//Comprobamos que no se intenta marcar como inactiva la unidad de negocio por defecto de la base de datos&#xD;
//				if (updatedBunit.getId() == 1 &amp;&amp; updatedBunit.isActivo() == false) {&#xD;
//					infoLabel.setText(&quot;LA UNIDAD DE NEGOCIO &quot; + updatedBunit.getNombre() + &quot; NO SE PUEDE MARCAR COMO INACTIVA&quot;);&#xD;
//				} else { }&#xD;
				&#xD;
				//Si los datos están validados&#xD;
				if (testData(updatedBunit)) {&#xD;
					//Si los datos actualizados se graban en la base de datos&#xD;
					if (new BusinessUnit().updateBusinessUnitToDB(session.getConnection(), updatedBunit)) {&#xD;
						//Registramos fecha y hora de la actualización de los datos de la tabla business_unit&#xD;
						tNow = ToolBox.getTimestampNow();&#xD;
						//Control de la actualización de la tabla last_modification por el cambio en la tabla user&#xD;
						boolean UserChangeRegister = true;&#xD;
						//Actualizamos los datos de la tabla last_modification por el cambio en la tabla business_unit&#xD;
						boolean bUnitChangeRegister = PersistenceManager.updateTimeStampToDB(session.getConnection(),&#xD;
								BusinessUnit.TABLE_NAME, tNow);&#xD;
						infoLabel.setText(&quot;DATOS DE LA UNIDAD DE NEGOCIO ACTUALIZADOS: &quot; + session.formatTimestamp(tNow, null));&#xD;
						//Variable de control para saber si la sesión sigue activa tras la edición de una unidad de negocio&#xD;
						boolean stillOpenSession = true;&#xD;
						//Si el usuario que abre sesión deja activa la unidad de negocio editada, se actualizan los datos de la sesión&#xD;
						//Esta opción puede darse con el filtro de unidades de negocio activo o inactivo y se gestiona igual en ambos casos&#xD;
						//Importante: Si la unidad de negocio editada pasa de inactiva a activa, sus usuarios (previamente desactivados también)&#xD;
						//no vuelven automáticamente al estado activo. Hay que reactivarlos en la pantalla de gestión de usuarios&#xD;
						if (updatedBunit.isActivo()) {&#xD;
							&#xD;
							//Debug&#xD;
							System.out.println(&quot;Opción EDIT 1&quot;);&#xD;
							System.out.println(&quot;lastActive: &quot; + lastActive);&#xD;
							&#xD;
							session.getbUnit().set(updatedBunit.get());&#xD;
							session.getbUnit().setNombre(updatedBunit.getNombre());&#xD;
							session.getbUnit().setDireccion(updatedBunit.getDireccion());&#xD;
							session.getbUnit().setProvincia(updatedBunit.getProvincia());&#xD;
							session.getbUnit().setEstado(updatedBunit.getEstado());&#xD;
							session.getbUnit().setCpostal(updatedBunit.getCpostal());&#xD;
							session.getbUnit().setTelefono(updatedBunit.getTelefono());&#xD;
							session.getbUnit().setMail(updatedBunit.getMail());&#xD;
							session.getbUnit().setActivo(updatedBunit.isActivo());&#xD;
&#xD;
							//Si se produce un error de actualización de la tabla last_modification. La actualización de la tabla business_unit&#xD;
							//no queda registrada&#xD;
							if(!bUnitChangeRegister) {&#xD;
								infoLabel.setText(infoLabel.getText() + &quot; . ERROR DE REGISTRO DE ACTUALIZACIÓN&quot;);&#xD;
							}&#xD;
							//Si la unidad de negocio se marca como activa viniendo de un estado inactivo, anunciamos que sus usuarios no han &#xD;
							//cambiado de estado&#xD;
							if (!lastActive) {&#xD;
								infoLabel.setText(infoLabel.getText() + &quot; . EL ESTADO DE LOS USUARIOS NO HA CAMBIADO&quot;);&#xD;
							}&#xD;
							&#xD;
						//Si el usuario que abre sesión deja inactiva una unidad de negocio que no es la suya&#xD;
						//Esta opción puede darse con el filtro de unidades de negocio activo o inactivo, pero se gestiona de&#xD;
						//manera diferente en cada caso&#xD;
						} else if (!updatedBunit.isActivo() &amp;&amp; session.getUser().getbUnit().getId() != updatedBunit.getId()) {&#xD;
							&#xD;
							//Debug&#xD;
							System.out.println(&quot;Opción EDIT 2&quot;);&#xD;
							System.out.println(&quot;lastActive: &quot; + lastActive);&#xD;
							&#xD;
							List&lt;User> updatedUserList = null;&#xD;
							//Si la unidad de negocio estaba activa antes de editarla&#xD;
							if (lastActive) {&#xD;
								&#xD;
								//Debug&#xD;
								System.out.println(&quot;Marcando usuarios inactivos&quot;);&#xD;
								&#xD;
								//Pasar a inactivos todos los usuarios de la unidad de negocio en la base de datos&#xD;
								updatedUserList = new User().setNoActiveUsersToDb(session.getConnection(), updatedBunit);&#xD;
								//Actualizamos los datos de la tabla last_modification por el cambio en la tabla user&#xD;
								UserChangeRegister = PersistenceManager.updateTimeStampToDB(&#xD;
										session.getConnection(), User.TABLE_NAME, tNow);&#xD;
							}&#xD;
							//Si el filtro de unidades de negocio no está activo, se actualizan los datos de la sesión&#xD;
							if (!activeFilterCheckBox.isSelected()) {&#xD;
								&#xD;
								//Debug&#xD;
								System.out.println(&quot;Opción EDIT 2 - filtro no activo&quot;);&#xD;
								&#xD;
								session.getbUnit().set(updatedBunit.get());&#xD;
								session.getbUnit().setNombre(updatedBunit.getNombre());&#xD;
								session.getbUnit().setDireccion(updatedBunit.getDireccion());&#xD;
								session.getbUnit().setProvincia(updatedBunit.getProvincia());&#xD;
								session.getbUnit().setEstado(updatedBunit.getEstado());&#xD;
								session.getbUnit().setCpostal(updatedBunit.getCpostal());&#xD;
								session.getbUnit().setTelefono(updatedBunit.getTelefono());&#xD;
								session.getbUnit().setMail(updatedBunit.getMail());&#xD;
								session.getbUnit().setActivo(updatedBunit.isActivo());&#xD;
								&#xD;
								//Debug&#xD;
								if (updatedUserList != null) {&#xD;
									//System.out.println(&quot;updatedUserList != null: &quot; + updatedUserList != null);&#xD;
									System.out.println(&quot;updatedUserList.size(): &quot; + updatedUserList.size());&#xD;
								}&#xD;
								&#xD;
								//Si se ha actualizado la lista de usuarios de la unidad de negocio editada&#xD;
								if (updatedUserList != null &amp;&amp; updatedUserList.size() > 0) {&#xD;
									&#xD;
									//Debug&#xD;
									System.out.println(&quot;Anunciando usuarios inactivos&quot;);&#xD;
									&#xD;
									//Recargar los usuarios pasados a inactivos en la unidad de negocio editada&#xD;
									session.getbUnit().setUsers(updatedUserList);&#xD;
									infoLabel.setText(infoLabel.getText() + &quot; . USUARIOS INACTIVOS&quot;);&#xD;
								//Si no se ha actualizado la lista de usuarios de la unidad de negocio editada&#xD;
								} else {&#xD;
									infoLabel.setText(infoLabel.getText() + &quot; . EL ESTADO DE LOS USUARIOS NO HA CAMBIADO&quot;);&#xD;
								}							&#xD;
								&#xD;
								//Si se produce un error de actualización de la tabla last_modification. La actualización de la tabla business_unit&#xD;
								//o de la tabla user no queda registrada&#xD;
								if (!bUnitChangeRegister || !UserChangeRegister) {&#xD;
									infoLabel.setText(infoLabel.getText() + &quot;ERROR DE REGISTRO DE ACTUALIZACIÓN&quot;);&#xD;
								}		&#xD;
&#xD;
							//Si el filtro de unidades de negocio está activo y la unidad de negocio editada queda inactiva, no puede seguir siendo&#xD;
							//la unidad de negocio de la sesión y por tanto tampoco puede visualizarse&#xD;
							} else {&#xD;
								&#xD;
								//Debug&#xD;
								System.out.println(&quot;Opción EDIT 2 - filtro activo&quot;);&#xD;
								&#xD;
								//Recuperamos la bUnit editada de la lista de bUnits y le aplicamos los cambios&#xD;
								//Se podrían aplicar los cambios a la unidad de negocio de la sesión porque aún no la hemos cambiado, pero de esta&#xD;
								//manera evitamos ambigüedades&#xD;
								BusinessUnit targetBunit = new BusinessUnit().getBusinessUnitById(session.getCompany(), session.getbUnit().getId());&#xD;
								targetBunit.set(updatedBunit.get());&#xD;
								targetBunit.setNombre(updatedBunit.getNombre());&#xD;
								targetBunit.setDireccion(updatedBunit.getDireccion());&#xD;
								targetBunit.setProvincia(updatedBunit.getProvincia());&#xD;
								targetBunit.setEstado(updatedBunit.getEstado());&#xD;
								targetBunit.setCpostal(updatedBunit.getCpostal());&#xD;
								targetBunit.setTelefono(updatedBunit.getTelefono());&#xD;
								targetBunit.setMail(updatedBunit.getMail());&#xD;
								targetBunit.setActivo(updatedBunit.isActivo());&#xD;
								//Sobreescribimos la notificación de la actualización de la unidad de negocio editada citando su nombre porque ya no&#xD;
								//se visualizará por pantalla&#xD;
								infoLabel.setText(&quot;DATOS DE LA UNIDAD DE NEGOCIO &quot; + targetBunit.getNombre() + &quot; ACTUALIZADOS: &quot; + &#xD;
										session.formatTimestamp(tNow, null));&#xD;
								//Si se ha actualizado la lista de usuarios de la unidad de negocio editada&#xD;
								if (updatedUserList != null &amp;&amp; updatedUserList.size() > 0) {&#xD;
									//Recargar los usuarios pasados a inactivos en la unidad de negocio editada&#xD;
									targetBunit.setUsers(updatedUserList);&#xD;
									infoLabel.setText(infoLabel.getText() +	&quot; . USUARIOS INACTIVOS&quot;);&#xD;
								} else {&#xD;
									infoLabel.setText(infoLabel.getText() + &quot; . EL ESTADO DE LOS USUARIOS NO HA CAMBIADO&quot;);&#xD;
								}&#xD;
								//Recuperamos la bUnit del usuario que abre sesión&#xD;
								BusinessUnit userBunit = new BusinessUnit().getBusinessUnitById(session.getCompany(), session.getUser().getbUnit().getId());&#xD;
								//La asignamos como bUnit de la sesión&#xD;
								session.setbUnit(userBunit);&#xD;
								//Registramos que la unidad de negocio seleccionada es la que se está mostrando&#xD;
								bUnitShowing = userBunit;&#xD;
								//Mostramos sus datos&#xD;
								populateTextFields();&#xD;
								//Renovamos la lista de las unidades de negocio del comboBox&#xD;
								refreshComboBox();						&#xD;
							}&#xD;
							//Los usuarios ya han sido actualizados&#xD;
							session.setUsersUpdated(true);&#xD;
							&#xD;
						//Si el usuario que abre sesión deja inactiva su propia unidad de negocio&#xD;
						//Esta opción puede darse con el filtro de unidades de negocio activo o inactivo y se gestiona igual en ambos casos &#xD;
						} else if (!updatedBunit.isActivo() &amp;&amp; session.getUser().getbUnit().getId() == updatedBunit.getId()) {&#xD;
							&#xD;
							System.out.println(&quot;Opción EDIT 3&quot;);&#xD;
							System.out.println(&quot;lastActive: &quot; + lastActive);&#xD;
											&#xD;
							//Pasar a inactivos todos los usuarios de la unidad de negocio en la base de datos&#xD;
							new User().setNoActiveUsersToDb(session.getConnection(), updatedBunit);&#xD;
							//Actualizamos los datos de la tabla last_modification por el cambio en la tabla user&#xD;
							PersistenceManager.updateTimeStampToDB(session.getConnection(),&#xD;
									User.TABLE_NAME, tNow);&#xD;
							//Se cerrará la sesión&#xD;
							stillOpenSession = false;&#xD;
							//Usuarios de la sesión actualizados&#xD;
							session.setUsersUpdated(true);&#xD;
							&#xD;
							//Cerrar sesión y volver a login. El usuario que abrió sesión ya no puede hacer login porque también ha sido desactivado&#xD;
								session.setUsersUpdated(true);&#xD;
								session.backToLogin(BusinessUnit.TABLE_NAME, session.getDisplays(), session.getCurrentDisplay());&#xD;
						}&#xD;
								&#xD;
						//Si la sesión sigue abierta&#xD;
						if (stillOpenSession) {&#xD;
							//Devolvemos el formulario a su estado previo&#xD;
							afterNewOrEditBunit();&#xD;
						}&#xD;
&#xD;
					//Si los datos actualizados no se graban en la base de datos&#xD;
					} else {&#xD;
						infoLabel.setText(&quot;ERROR DE ACTUALIZACIÓN DE DATOS EN LA BASE DE DATOS&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQ81YYGbEeuPkZNKCcfHxw" name="OKAction" method="_AZuW9IGbEeuPkZNKCcfHxw">
                <eAnnotations xmi:id="_AQ81YoGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AQ81Y4GbEeuPkZNKCcfHxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AQ81ZIGbEeuPkZNKCcfHxw" type="_AQ81YIGbEeuPkZNKCcfHxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AZCaZ4GbEeuPkZNKCcfHxw" name="actionPerformed" method="_AZuW9oGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZCaaIGbEeuPkZNKCcfHxw" name="e" type="_AYMs6YGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQ81ZYGbEeuPkZNKCcfHxw" name="TimerJob" visibility="private">
              <ownedComment xmi:id="_AZ2SzIGbEeuPkZNKCcfHxw">
                <body>Clase que consulta al objeto session si los datos que le atañen han sido actualizados en la base de datos,&#xD;
	 * de manera que pueda actualizar el contenido del panel con dichos datos. Si el panel se encuentra en modo&#xD;
	 * de edición de los datos, o no está visible, no se produce la comprobación porque no es necesaria.</body>
              </ownedComment>
              <generalization xmi:id="_AZCaaoGbEeuPkZNKCcfHxw" general="_AYSzh4GbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZuW-IGbEeuPkZNKCcfHxw" name="run" specification="_AQ81ZoGbEeuPkZNKCcfHxw">
                <language>java</language>
                <body>if (!BusinessUnitUI.this.isShowing()) {&#xD;
				BusinessUnitUI.this.panelVisible = false;&#xD;
				this.cancel();&#xD;
				BusinessUnitUI.this.timer.cancel();&#xD;
				 System.out.println(&quot;Se ha cerrado la ventana Unidad de negocio&quot;);&#xD;
			}&#xD;
			//No se comprueba la actualización de los datos si los estamos editando o añadiendo&#xD;
			if (cancelButton.isEnabled() &amp;&amp; oKButton.isEnabled() &amp;&amp; BusinessUnitUI.this.isShowing()) {&#xD;
				//Do nothing&#xD;
			//Se comprueba la actualización de los datos si no los estamos modificando&#xD;
			} else if (BusinessUnitUI.this.panelVisible == true){&#xD;
&#xD;
				//Debug&#xD;
				System.out.println(&quot;Comprobando actualización de datos de la unidad de negocio&quot;);&#xD;
				System.out.println(session.getUpdatedTables().size());&#xD;
				&#xD;
				//Loop por el Map de CurrentSession, si aparece la tabla business_unit, recargar datos&#xD;
				for (Map.Entry&lt;String, Timestamp> updatedTable : session.getUpdatedTables().entrySet()) {&#xD;
					&#xD;
					//Debug&#xD;
					System.out.println(updatedTable.getKey());&#xD;
					System.out.println(updatedTable.getValue());&#xD;
					&#xD;
					//Si en la tabla de actualizaciones aparece la clave BusinessUnit.TABLE_NAME&#xD;
					if (updatedTable.getKey().equals(BusinessUnit.TABLE_NAME)) {&#xD;
						//Si la unidad de negocio de la sesión ha sido desactivada y el filtro del combobox está activo, la unidad&#xD;
						//de negocio de la sesión pasa a ser la del usuario que abrió sesión, y será la que se visualize&#xD;
						if (activeFilterCheckBox.isSelected() &amp;&amp; session.getbUnit().isActivo() == false) {&#xD;
							&#xD;
							//Debug&#xD;
							System.out.println(&quot;Actualizando pantalla cambiando la bUnit de la sesión&quot;);&#xD;
							System.out.println(&quot;La bUnit de la sesión era &quot; + session.getbUnit().getNombre());&#xD;
							&#xD;
							//Recuperamos la bUnit del usuario que abre sesión&#xD;
							BusinessUnit userBunit = new BusinessUnit().getBusinessUnitById(session.getCompany(), session.getUser().getbUnit().getId());&#xD;
							//La asignamos como bUnit de la sesión&#xD;
							session.setbUnit(userBunit);&#xD;
							&#xD;
							//Debug&#xD;
							System.out.println(&quot;La nueva bUnit de la sesión es &quot; + session.getbUnit().getNombre());&#xD;
							&#xD;
							bUnitShowing = session.getbUnit();&#xD;
&#xD;
							//Renovamos la lista de las unidades de negocio del comboBox&#xD;
							refreshComboBox();&#xD;
							//Asignamos el nuevo contenido a los textfields&#xD;
							populateTextFields();&#xD;
							//Hacemos backup del contenido de los datos del formulario&#xD;
							updateDataCache();&#xD;
						} else {&#xD;
							&#xD;
							//Debug&#xD;
							System.out.println(&quot;Actualizando pantalla sin cambiar la bUnit de la sesión&quot;);&#xD;
							&#xD;
							//Renovamos la lista de las unidades de negocio del comboBox&#xD;
							refreshComboBox();&#xD;
							//Asignamos el nuevo contenido a los textfields&#xD;
							populateTextFields();&#xD;
							//Hacemos backup del contenido de los datos del formulario&#xD;
							updateDataCache();&#xD;
						}&#xD;
&#xD;
						//Informamos por pantalla de la actualización&#xD;
						//Si la unidad de negocio que teníamos en pantalla no ha sufrido ninguna modificación&#xD;
						//no habrá ningún cambio en la información mostrada, pero seguirá interesando saber&#xD;
						//que alguna unidad de negocio ha sido modificada o añadida&#xD;
						BusinessUnitUI.this.infoLabel.setText(&quot;DATOS DE LAS UNIDADES DE NEGOCIO ACTUALIZADOS: &quot; +&#xD;
						session.formatTimestamp(updatedTable.getValue(), null));&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQ81ZoGbEeuPkZNKCcfHxw" name="run" method="_AZuW-IGbEeuPkZNKCcfHxw"/>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_AQ_RoIGbEeuPkZNKCcfHxw" name="AppWindow">
            <generalization xmi:id="_AZFdtoGbEeuPkZNKCcfHxw" general="_AYMs5YGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZg7gIGbEeuPkZNKCcfHxw" name="upPanel" visibility="private" type="_AYLexIGbEeuPkZNKCcfHxw" association="_AZ25wIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZg7gYGbEeuPkZNKCcfHxw" name="downPanel" visibility="private" type="_AYLexIGbEeuPkZNKCcfHxw" association="_AZ25woGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZg7goGbEeuPkZNKCcfHxw" name="centerPanel" visibility="private" type="_AYLexIGbEeuPkZNKCcfHxw" association="_AZ25xIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZg7g4GbEeuPkZNKCcfHxw" name="leftPanel" visibility="private" type="_AYLexIGbEeuPkZNKCcfHxw" association="_AZ25xoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZg7hIGbEeuPkZNKCcfHxw" name="rightPanel" visibility="private" type="_AYLexIGbEeuPkZNKCcfHxw" association="_AZ25yIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZg7hYGbEeuPkZNKCcfHxw" name="basePanel" visibility="private" type="_AYLexIGbEeuPkZNKCcfHxw" association="_AZ25yoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZg7hoGbEeuPkZNKCcfHxw" name="infoLabel" visibility="private" type="_AYLexoGbEeuPkZNKCcfHxw" association="_AZ25zIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZg7h4GbEeuPkZNKCcfHxw" name="versionNumber" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZg7iIGbEeuPkZNKCcfHxw" value="&quot;0.1.8&quot;"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZhikIGbEeuPkZNKCcfHxw" name="session" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AZ25zoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZhikYGbEeuPkZNKCcfHxw" name="conn" visibility="public" type="_AYCU04GbEeuPkZNKCcfHxw" association="_AZ250IGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_l3IaMoJkEeuLTI0MOKBvew" name="centeredWindow" type="_ARAfwIGbEeuPkZNKCcfHxw" aggregation="composite" association="_l3HzIIJkEeuLTI0MOKBvew">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_l3IaM4JkEeuLTI0MOKBvew" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l3IaNIJkEeuLTI0MOKBvew" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZuW-YGbEeuPkZNKCcfHxw" name="AppWindow" specification="_AZDogIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZuW-oGbEeuPkZNKCcfHxw" name="title">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZuW-4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZuW_IGbEeuPkZNKCcfHxw" name="session" type="_AQp6foGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZuW_YGbEeuPkZNKCcfHxw" type="_AQ_RoIGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>super(title);&#xD;
		this.conn = conn;&#xD;
		this.session = session;&#xD;
		initialize();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZuW_oGbEeuPkZNKCcfHxw" name="AppWindow" specification="_AQ_4sIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZuW_4GbEeuPkZNKCcfHxw" type="_AQ_RoIGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>// TODO Auto-generated constructor stub&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZu994GbEeuPkZNKCcfHxw" name="initialize" specification="_AQ_4uYGbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>GraphicsDevice [] displays = GraphicsEnvironment.getLocalGraphicsEnvironment().getScreenDevices();&#xD;
		GraphicsDevice currentDisplay = this.getGraphicsConfiguration().getDevice();&#xD;
		session.setDisplays(displays);&#xD;
		session.setCurrentDisplay(currentDisplay);&#xD;
		&#xD;
		//Debug&#xD;
		System.out.println(&quot;Monitor actual: &quot; + currentDisplay.getIDstring());&#xD;
		&#xD;
	    int appWidth = 1000;&#xD;
	    int appHeight = 700;&#xD;
	    int coordinateX = currentDisplay.getDefaultConfiguration().getBounds().x;&#xD;
	    int coordinateY = currentDisplay.getDefaultConfiguration().getBounds().y;&#xD;
	    int currentWidth = 0;&#xD;
	    int currentHeight = 0;&#xD;
		//Centrado de pantalla multimonitor&#xD;
		for (int i = 0; i &lt; displays.length; i++) {&#xD;
		    if (currentDisplay.getIDstring().equals(displays[i].getIDstring())) {&#xD;
				currentWidth = currentDisplay.getDisplayMode().getWidth();&#xD;
				currentHeight = currentDisplay.getDisplayMode().getHeight();&#xD;
				setBounds((currentWidth - appWidth) / 2 + coordinateX, (currentHeight - appHeight) / 2 + coordinateY, appWidth, appHeight);&#xD;
		    }&#xD;
		}&#xD;
&#xD;
		//OLD CODE&#xD;
//		Point center = GraphicsEnvironment.getLocalGraphicsEnvironment().getCenterPoint();&#xD;
//	    int appWidth = 1000;&#xD;
//	    int appHeight = 700;&#xD;
//		setPreferredSize(new Dimension(appWidth, appHeight));&#xD;
//		setBounds(center.x - appWidth / 2, center.y - appHeight / 2, appWidth, appHeight);&#xD;
	    //OLD CODE&#xD;
&#xD;
		basePanel = new JPanel();&#xD;
		basePanel.setLayout(new BorderLayout());&#xD;
		basePanel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 15));&#xD;
		getContentPane().add(basePanel);&#xD;
&#xD;
		addWindowListener(new WindowAdapter() {&#xD;
			  public void windowClosing(WindowEvent e) {&#xD;
				  if(session.getTimer() != null) {&#xD;
					  session.getTimer().cancel();&#xD;
				  }		  &#xD;
				  PersistenceManager.closeDatabase(conn);&#xD;
				  System.exit(0);&#xD;
			  }&#xD;
		});&#xD;
		&#xD;
		addWindowStateListener(new CenteredWindow(this, displays));&#xD;
		addComponentListener(new CenteredWindow(this, displays));&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZu9-IGbEeuPkZNKCcfHxw" name="setUpWindow" specification="_AQ_4uoGbEeuPkZNKCcfHxw">
              <language>java</language>
              <body>basePanel.removeAll();&#xD;
&#xD;
		centerPanel = new JPanel();&#xD;
		JLabel welcome = new JLabel(&quot;EVENTSURFER APP &quot; + versionNumber);&#xD;
		welcome.setFont(new Font(&quot;Tahoma&quot;, Font.BOLD, 50));&#xD;
		JLabel emptyLabel = new JLabel();&#xD;
		emptyLabel.setPreferredSize(new Dimension(MAXIMIZED_HORIZ, 800));&#xD;
		centerPanel.add(emptyLabel);&#xD;
		centerPanel.add(welcome);&#xD;
&#xD;
		leftPanel = new Selector(this, session);&#xD;
		leftPanel.setBackground(Color.WHITE);&#xD;
		leftPanel.setBorder(new EmptyBorder(10, 10, 10, 10));&#xD;
		&#xD;
		basePanel.add(centerPanel, BorderLayout.CENTER);&#xD;
		basePanel.add(leftPanel, BorderLayout.WEST);&#xD;
		&#xD;
		this.revalidate();&#xD;
		this.repaint();&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQ_4sIGbEeuPkZNKCcfHxw" name="AppWindow" method="_AZuW_oGbEeuPkZNKCcfHxw" raisedException="_AYfn0oGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AQ_4sYGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AQ_4soGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AQ_4s4GbEeuPkZNKCcfHxw" type="_AQ_RoIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AQ_4uYGbEeuPkZNKCcfHxw" name="initialize" method="_AZu994GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_ofhLAIJfEeuLTI0MOKBvew">
                <body>Crea la ventana de la aplicación y la centra en la pantalla. Envía a la sesión la información de las pantallas del sistema&#xD;
	 * y de la pantalla en la que se está ejecutando la aplicación. Actualiza dicha información de manera continuada para que,&#xD;
	 * en un entorno multipantalla, la ventana de login y los mensajes emergentes puedan aparecer siempre centrados en la pantalla &#xD;
	 * en la que se ejecuta la aplicación&#xD;
	 *</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AQ_4uoGbEeuPkZNKCcfHxw" name="setUpWindow" method="_AZu9-IGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_ofhLAYJfEeuLTI0MOKBvew">
                <body>Muestra el panel de bienvenida al pasar la pantalla de login</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_AZDogIGbEeuPkZNKCcfHxw" name="AppWindow" method="_AZuW-YGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AZDohIGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AZDohYGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AZDogYGbEeuPkZNKCcfHxw" name="title">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZDogoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZDog4GbEeuPkZNKCcfHxw" name="session" type="_AQp6foGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZDohoGbEeuPkZNKCcfHxw" type="_AQ_RoIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_ARAfwIGbEeuPkZNKCcfHxw" name="CenteredWindow" visibility="private">
              <generalization xmi:id="_AZFdtYGbEeuPkZNKCcfHxw" general="_AYfn1IGbEeuPkZNKCcfHxw"/>
              <ownedAttribute xmi:id="_AZhikoGbEeuPkZNKCcfHxw" name="parentFrame" visibility="private" type="_AYMs5YGbEeuPkZNKCcfHxw" association="_AaMQ94GbEeuPkZNKCcfHxw"/>
              <ownedAttribute xmi:id="_AZhilIGbEeuPkZNKCcfHxw" name="displays" visibility="private" type="_AYSzgYGbEeuPkZNKCcfHxw" association="_AaMQ-oGbEeuPkZNKCcfHxw">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZhilYGbEeuPkZNKCcfHxw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_l3HzIYJkEeuLTI0MOKBvew" name="appWindow" type="_AQ_RoIGbEeuPkZNKCcfHxw" association="_l3HzIIJkEeuLTI0MOKBvew">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_l3IaMIJkEeuLTI0MOKBvew" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l3IaMYJkEeuLTI0MOKBvew" value="1"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_AZEPmYGbEeuPkZNKCcfHxw" client="_ARAfwIGbEeuPkZNKCcfHxw" supplier="_AYRlYoGbEeuPkZNKCcfHxw" contract="_AYRlYoGbEeuPkZNKCcfHxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZu9-YGbEeuPkZNKCcfHxw" name="CenteredWindow" specification="_AZEPmoGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZu9-oGbEeuPkZNKCcfHxw" name="parentFrame" type="_AYMs5YGbEeuPkZNKCcfHxw"/>
                <ownedParameter xmi:id="_AZu9-4GbEeuPkZNKCcfHxw" name="displays" type="_AYSzgYGbEeuPkZNKCcfHxw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZu9_IGbEeuPkZNKCcfHxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AZu9_YGbEeuPkZNKCcfHxw" type="_ARAfwIGbEeuPkZNKCcfHxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.parentFrame = parentFrame;&#xD;
			this.displays =  displays;&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZu9_oGbEeuPkZNKCcfHxw" name="windowStateChanged" specification="_AZEPoYGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZu9_4GbEeuPkZNKCcfHxw" name="e" type="_AYgO4YGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>GraphicsDevice currentDisplay = parentFrame.getGraphicsConfiguration().getDevice();&#xD;
			session.setDisplays(displays);&#xD;
			session.setCurrentDisplay(currentDisplay);&#xD;
			&#xD;
			//Debug&#xD;
			System.out.println(&quot;Detectado cambio en ventana del programa. Monitor actual: &quot; + currentDisplay.getIDstring());&#xD;
			&#xD;
		  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZu-AIGbEeuPkZNKCcfHxw" name="componentMoved" specification="_AZE2pYGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZu-AYGbEeuPkZNKCcfHxw" name="e" type="_AYRlYIGbEeuPkZNKCcfHxw"/>
                <language>java</language>
                <body>GraphicsDevice currentDisplay = parentFrame.getGraphicsConfiguration().getDevice();&#xD;
			session.setDisplays(displays);&#xD;
			session.setCurrentDisplay(currentDisplay);&#xD;
			&#xD;
			//Debug&#xD;
			System.out.println(&quot;Detectado cambio en ventana del programa. Monitor actual: &quot; + currentDisplay.getIDstring());&#xD;
			&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AZEPmoGbEeuPkZNKCcfHxw" name="CenteredWindow" method="_AZu9-YGbEeuPkZNKCcfHxw">
                <eAnnotations xmi:id="_AZEPnYGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AZEPnoGbEeuPkZNKCcfHxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AZEPm4GbEeuPkZNKCcfHxw" name="parentFrame" type="_AYMs5YGbEeuPkZNKCcfHxw"/>
                <ownedParameter xmi:id="_AZEPnIGbEeuPkZNKCcfHxw" name="displays" type="_AYSzgYGbEeuPkZNKCcfHxw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZEPoIGbEeuPkZNKCcfHxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AZEPn4GbEeuPkZNKCcfHxw" type="_ARAfwIGbEeuPkZNKCcfHxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AZEPoYGbEeuPkZNKCcfHxw" name="windowStateChanged" method="_AZu9_oGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZEPooGbEeuPkZNKCcfHxw" name="e" type="_AYgO4YGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AZE2oIGbEeuPkZNKCcfHxw" name="componentResized">
                <ownedParameter xmi:id="_AZE2oYGbEeuPkZNKCcfHxw" name="e" type="_AYRlYIGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AZE2pYGbEeuPkZNKCcfHxw" name="componentMoved" method="_AZu-AIGbEeuPkZNKCcfHxw">
                <ownedParameter xmi:id="_AZE2poGbEeuPkZNKCcfHxw" name="e" type="_AYRlYIGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AZE2qoGbEeuPkZNKCcfHxw" name="componentShown">
                <ownedParameter xmi:id="_AZE2q4GbEeuPkZNKCcfHxw" name="e" type="_AYRlYIGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AZFdsIGbEeuPkZNKCcfHxw" name="componentHidden">
                <ownedParameter xmi:id="_AZFdsYGbEeuPkZNKCcfHxw" name="e" type="_AYRlYIGbEeuPkZNKCcfHxw"/>
              </ownedOperation>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZz2f4GbEeuPkZNKCcfHxw" name="" memberEnd="_AZRq9YGbEeuPkZNKCcfHxw _AZz2gIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZz2gIGbEeuPkZNKCcfHxw" name="" type="_AQjMwIGbEeuPkZNKCcfHxw" association="_AZz2f4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZz2gYGbEeuPkZNKCcfHxw" name="" memberEnd="_AZRq9oGbEeuPkZNKCcfHxw _AZz2goGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZz2goGbEeuPkZNKCcfHxw" name="" type="_AQjMwIGbEeuPkZNKCcfHxw" association="_AZz2gYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZz2g4GbEeuPkZNKCcfHxw" name="" memberEnd="_AZRq94GbEeuPkZNKCcfHxw _AZz2hIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZz2hIGbEeuPkZNKCcfHxw" name="" type="_AQjMwIGbEeuPkZNKCcfHxw" association="_AZz2g4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZz2hYGbEeuPkZNKCcfHxw" name="" memberEnd="_AZRq-IGbEeuPkZNKCcfHxw _AZz2hoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZz2hoGbEeuPkZNKCcfHxw" name="" type="_AQjMwIGbEeuPkZNKCcfHxw" association="_AZz2hYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZz2h4GbEeuPkZNKCcfHxw" name="" memberEnd="_AZRq-YGbEeuPkZNKCcfHxw _AZz2iIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZz2iIGbEeuPkZNKCcfHxw" name="" type="_AQjMwIGbEeuPkZNKCcfHxw" association="_AZz2h4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZz2iYGbEeuPkZNKCcfHxw" name="" memberEnd="_AZRq-oGbEeuPkZNKCcfHxw _AZz2ioGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZz2ioGbEeuPkZNKCcfHxw" name="" type="_AQjMwIGbEeuPkZNKCcfHxw" association="_AZz2iYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ0dgIGbEeuPkZNKCcfHxw" name="" memberEnd="_AZRq-4GbEeuPkZNKCcfHxw _AZ0dgYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ0dgYGbEeuPkZNKCcfHxw" name="" type="_AQjMwIGbEeuPkZNKCcfHxw" association="_AZ0dgIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ0dgoGbEeuPkZNKCcfHxw" name="" memberEnd="_AZRq_IGbEeuPkZNKCcfHxw _AZ0dg4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ0dg4GbEeuPkZNKCcfHxw" name="" type="_AQjMwIGbEeuPkZNKCcfHxw" association="_AZ0dgoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ0dhIGbEeuPkZNKCcfHxw" name="" memberEnd="_AZSSAIGbEeuPkZNKCcfHxw _AZ0dhYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ0dhYGbEeuPkZNKCcfHxw" name="" type="_AQjMwIGbEeuPkZNKCcfHxw" association="_AZ0dhIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ0dhoGbEeuPkZNKCcfHxw" name="" memberEnd="_AZSSAYGbEeuPkZNKCcfHxw _AZ0dh4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ0dh4GbEeuPkZNKCcfHxw" name="" type="_AQjMwIGbEeuPkZNKCcfHxw" association="_AZ0dhoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ0diIGbEeuPkZNKCcfHxw" name="" memberEnd="_AZSSAoGbEeuPkZNKCcfHxw _AZ0diYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ0diYGbEeuPkZNKCcfHxw" name="" type="_AQjMwIGbEeuPkZNKCcfHxw" association="_AZ0diIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ0dioGbEeuPkZNKCcfHxw" name="" memberEnd="_AZSSA4GbEeuPkZNKCcfHxw _AZ0di4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ0di4GbEeuPkZNKCcfHxw" name="" type="_AQka4IGbEeuPkZNKCcfHxw" association="_AZ0dioGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ0djIGbEeuPkZNKCcfHxw" name="" memberEnd="_AZSSBIGbEeuPkZNKCcfHxw _AZ0djYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ0djYGbEeuPkZNKCcfHxw" name="" type="_AQka4IGbEeuPkZNKCcfHxw" association="_AZ0djIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ0djoGbEeuPkZNKCcfHxw" name="" memberEnd="_AZSSBYGbEeuPkZNKCcfHxw _AZ0dj4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ0dj4GbEeuPkZNKCcfHxw" name="" type="_AQka4IGbEeuPkZNKCcfHxw" association="_AZ0djoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ0dkIGbEeuPkZNKCcfHxw" name="" memberEnd="_AZSSBoGbEeuPkZNKCcfHxw _AZ0dkYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ0dkYGbEeuPkZNKCcfHxw" name="" type="_AQka4IGbEeuPkZNKCcfHxw" association="_AZ0dkIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ0dkoGbEeuPkZNKCcfHxw" name="" memberEnd="_AZSSB4GbEeuPkZNKCcfHxw _AZ0dk4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ0dk4GbEeuPkZNKCcfHxw" name="" type="_AQka4IGbEeuPkZNKCcfHxw" association="_AZ0dkoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ25wIGbEeuPkZNKCcfHxw" name="" memberEnd="_AZg7gIGbEeuPkZNKCcfHxw _AZ25wYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ25wYGbEeuPkZNKCcfHxw" name="" type="_AQ_RoIGbEeuPkZNKCcfHxw" association="_AZ25wIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ25woGbEeuPkZNKCcfHxw" name="" memberEnd="_AZg7gYGbEeuPkZNKCcfHxw _AZ25w4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ25w4GbEeuPkZNKCcfHxw" name="" type="_AQ_RoIGbEeuPkZNKCcfHxw" association="_AZ25woGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ25xIGbEeuPkZNKCcfHxw" name="" memberEnd="_AZg7goGbEeuPkZNKCcfHxw _AZ25xYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ25xYGbEeuPkZNKCcfHxw" name="" type="_AQ_RoIGbEeuPkZNKCcfHxw" association="_AZ25xIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ25xoGbEeuPkZNKCcfHxw" name="" memberEnd="_AZg7g4GbEeuPkZNKCcfHxw _AZ25x4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ25x4GbEeuPkZNKCcfHxw" name="" type="_AQ_RoIGbEeuPkZNKCcfHxw" association="_AZ25xoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ25yIGbEeuPkZNKCcfHxw" name="" memberEnd="_AZg7hIGbEeuPkZNKCcfHxw _AZ25yYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ25yYGbEeuPkZNKCcfHxw" name="" type="_AQ_RoIGbEeuPkZNKCcfHxw" association="_AZ25yIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ25yoGbEeuPkZNKCcfHxw" name="" memberEnd="_AZg7hYGbEeuPkZNKCcfHxw _AZ25y4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ25y4GbEeuPkZNKCcfHxw" name="" type="_AQ_RoIGbEeuPkZNKCcfHxw" association="_AZ25yoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ25zIGbEeuPkZNKCcfHxw" name="" memberEnd="_AZg7hoGbEeuPkZNKCcfHxw _AZ25zYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ25zYGbEeuPkZNKCcfHxw" name="" type="_AQ_RoIGbEeuPkZNKCcfHxw" association="_AZ25zIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ25zoGbEeuPkZNKCcfHxw" name="" memberEnd="_AZhikIGbEeuPkZNKCcfHxw _AZ25z4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ25z4GbEeuPkZNKCcfHxw" name="" type="_AQ_RoIGbEeuPkZNKCcfHxw" association="_AZ25zoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ250IGbEeuPkZNKCcfHxw" name="" memberEnd="_AZhikYGbEeuPkZNKCcfHxw _AZ250YGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ250YGbEeuPkZNKCcfHxw" name="" type="_AQ_RoIGbEeuPkZNKCcfHxw" association="_AZ250IGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaADtIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaADtYGbEeuPkZNKCcfHxw _AZSSCIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaADtYGbEeuPkZNKCcfHxw" name="" type="_AQka4IGbEeuPkZNKCcfHxw" association="_AaADtIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaADt4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaADuIGbEeuPkZNKCcfHxw _AZS5EYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaADuIGbEeuPkZNKCcfHxw" name="" type="_AQlpAIGbEeuPkZNKCcfHxw" association="_AaADt4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaADuoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaADu4GbEeuPkZNKCcfHxw _AZS5E4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaADu4GbEeuPkZNKCcfHxw" name="" type="_AQlpAIGbEeuPkZNKCcfHxw" association="_AaADuoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaADvYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaADvoGbEeuPkZNKCcfHxw _AZS5FYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaADvoGbEeuPkZNKCcfHxw" name="" type="_AQlpAIGbEeuPkZNKCcfHxw" association="_AaADvYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaAqwYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaAqwoGbEeuPkZNKCcfHxw _AZS5GIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaAqwoGbEeuPkZNKCcfHxw" name="" type="_AQlpAIGbEeuPkZNKCcfHxw" association="_AaAqwYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaAqxIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaAqxYGbEeuPkZNKCcfHxw _AZS5G4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaAqxYGbEeuPkZNKCcfHxw" name="" type="_AQlpAIGbEeuPkZNKCcfHxw" association="_AaAqxIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaAqx4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaAqyIGbEeuPkZNKCcfHxw _AZTgIYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaAqyIGbEeuPkZNKCcfHxw" name="" type="_AQlpAIGbEeuPkZNKCcfHxw" association="_AaAqx4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaAqyoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaAqy4GbEeuPkZNKCcfHxw _AZTgJIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaAqy4GbEeuPkZNKCcfHxw" name="" type="_AQlpAIGbEeuPkZNKCcfHxw" association="_AaAqyoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaBR0YGbEeuPkZNKCcfHxw" name="" memberEnd="_AaBR0oGbEeuPkZNKCcfHxw _AZTgJoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaBR0oGbEeuPkZNKCcfHxw" name="" type="_AQlpAIGbEeuPkZNKCcfHxw" association="_AaBR0YGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaBR1IGbEeuPkZNKCcfHxw" name="" memberEnd="_AaBR1YGbEeuPkZNKCcfHxw _AZTgKIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaBR1YGbEeuPkZNKCcfHxw" name="" type="_AQlpAIGbEeuPkZNKCcfHxw" association="_AaBR1IGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaBR14GbEeuPkZNKCcfHxw" name="" memberEnd="_AaBR2IGbEeuPkZNKCcfHxw _AZTgKoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaBR2IGbEeuPkZNKCcfHxw" name="" type="_AQlpAIGbEeuPkZNKCcfHxw" association="_AaBR14GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaBR2oGbEeuPkZNKCcfHxw" name="" memberEnd="_AaBR24GbEeuPkZNKCcfHxw _AZTgLIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaBR24GbEeuPkZNKCcfHxw" name="" type="_AQlpAIGbEeuPkZNKCcfHxw" association="_AaBR2oGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaBR3YGbEeuPkZNKCcfHxw" name="" memberEnd="_AaBR3oGbEeuPkZNKCcfHxw _AZTgLoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaBR3oGbEeuPkZNKCcfHxw" name="" type="_AQlpAIGbEeuPkZNKCcfHxw" association="_AaBR3YGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaB44YGbEeuPkZNKCcfHxw" name="" memberEnd="_AaB44oGbEeuPkZNKCcfHxw _AZUHMIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaB44oGbEeuPkZNKCcfHxw" name="" type="_AQlpAIGbEeuPkZNKCcfHxw" association="_AaB44YGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaCf-YGbEeuPkZNKCcfHxw" name="" memberEnd="_AaCf-oGbEeuPkZNKCcfHxw _AZXKhoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaCf-oGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaCf-YGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaCf_IGbEeuPkZNKCcfHxw" name="" memberEnd="_AaCf_YGbEeuPkZNKCcfHxw _AZXKi4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaCf_YGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaCf_IGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaDHAYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaDHAoGbEeuPkZNKCcfHxw _AZXxkYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaDHAoGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaDHAYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaDHBIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaDHBYGbEeuPkZNKCcfHxw _AZXxk4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaDHBYGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaDHBIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaDHB4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaDHCIGbEeuPkZNKCcfHxw _AZXxlYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaDHCIGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaDHB4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaDHCoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaDHC4GbEeuPkZNKCcfHxw _AZXxmIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaDHC4GbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaDHCoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaDHDYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaDHDoGbEeuPkZNKCcfHxw _AZXxmoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaDHDoGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaDHDYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaDuEYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaDuEoGbEeuPkZNKCcfHxw _AZXxnYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaDuEoGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaDuEYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaDuFIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaDuFYGbEeuPkZNKCcfHxw _AZYYoIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaDuFYGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaDuFIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaDuF4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaDuGIGbEeuPkZNKCcfHxw _AZYYo4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaDuGIGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaDuF4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaDuGoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaDuG4GbEeuPkZNKCcfHxw _AZYYpYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaDuG4GbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaDuGoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaEVIYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaEVIoGbEeuPkZNKCcfHxw _AZYYp4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaEVIoGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaEVIYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaEVJIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaEVJYGbEeuPkZNKCcfHxw _AZYYqYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaEVJYGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaEVJIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaEVJ4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaEVKIGbEeuPkZNKCcfHxw _AZYYq4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaEVKIGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaEVJ4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaEVKoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaEVK4GbEeuPkZNKCcfHxw _AZYYrYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaEVK4GbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaEVKoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaE8MIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaE8MYGbEeuPkZNKCcfHxw _AZY_sIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaE8MYGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaE8MIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaE8M4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaE8NIGbEeuPkZNKCcfHxw _AZY_soGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaE8NIGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaE8M4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaE8NoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaE8N4GbEeuPkZNKCcfHxw _AZY_tIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaE8N4GbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaE8NoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaE8OYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaE8OoGbEeuPkZNKCcfHxw _AZY_toGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaE8OoGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaE8OYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaE8PIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaE8PYGbEeuPkZNKCcfHxw _AZY_uIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaE8PYGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaE8PIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaFjQYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaFjQoGbEeuPkZNKCcfHxw _AZY_uoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaFjQoGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaFjQYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaFjRIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaFjRYGbEeuPkZNKCcfHxw _AZZm0IGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaFjRYGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaFjRIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaFjR4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaFjSIGbEeuPkZNKCcfHxw _AZaN04GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaFjSIGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaFjR4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaFjSoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaFjS4GbEeuPkZNKCcfHxw _AZaN24GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaFjS4GbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaFjSoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaGKUIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaGKUYGbEeuPkZNKCcfHxw _AZaN3oGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaGKUYGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaGKUIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaGKU4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaGKVIGbEeuPkZNKCcfHxw _AZaN4YGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaGKVIGbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaGKU4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaGKVoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaGKV4GbEeuPkZNKCcfHxw _AZa04YGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaGKV4GbEeuPkZNKCcfHxw" name="" type="_AQvaAIGbEeuPkZNKCcfHxw" association="_AaGKVoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaGKWYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaGKWoGbEeuPkZNKCcfHxw _AZbb8IGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaGKWoGbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaGKWYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaGKXIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaGKXYGbEeuPkZNKCcfHxw _AZbb9YGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaGKXYGbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaGKXIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaGxYYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaGxYoGbEeuPkZNKCcfHxw _AZbb-YGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaGxYoGbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaGxYYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaGxZIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaGxZYGbEeuPkZNKCcfHxw _AZbb-4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaGxZYGbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaGxZIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaGxZ4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaGxaIGbEeuPkZNKCcfHxw _AZbb_YGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaGxaIGbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaGxZ4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaGxaoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaGxa4GbEeuPkZNKCcfHxw _AZcDAYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaGxa4GbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaGxaoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaGxbYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaGxboGbEeuPkZNKCcfHxw _AZcDA4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaGxboGbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaGxbYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaHYcYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaHYcoGbEeuPkZNKCcfHxw _AZcDBYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaHYcoGbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaHYcYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaHYdIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaHYdYGbEeuPkZNKCcfHxw _AZcDB4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaHYdYGbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaHYdIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaHYd4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaHYeIGbEeuPkZNKCcfHxw _AZcDCYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaHYeIGbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaHYd4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaHYeoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaHYe4GbEeuPkZNKCcfHxw _AZcDC4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaHYe4GbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaHYeoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaH_gYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaH_goGbEeuPkZNKCcfHxw _AZcDDYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaH_goGbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaH_gYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaH_hIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaH_hYGbEeuPkZNKCcfHxw _AZcqEIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaH_hYGbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaH_hIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaH_h4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaH_iIGbEeuPkZNKCcfHxw _AZcqEoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaH_iIGbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaH_h4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaH_ioGbEeuPkZNKCcfHxw" name="" memberEnd="_AaH_i4GbEeuPkZNKCcfHxw _AZcqFIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaH_i4GbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaH_ioGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaH_jYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaH_joGbEeuPkZNKCcfHxw _AZcqGIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaH_joGbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaH_jYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaImkYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaImkoGbEeuPkZNKCcfHxw _AZcqIIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaImkoGbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaImkYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaImlIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaImlYGbEeuPkZNKCcfHxw _AZdRIYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaImlYGbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaImlIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaIml4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaImmIGbEeuPkZNKCcfHxw _AZdRJIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaImmIGbEeuPkZNKCcfHxw" name="" type="_AQ3V0IGbEeuPkZNKCcfHxw" association="_AaIml4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaImmoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaImm4GbEeuPkZNKCcfHxw _AZdRLYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaImm4GbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaImmoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaJNoYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaJNooGbEeuPkZNKCcfHxw _AZd4NIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaJNooGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaJNoYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaJNpIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaJNpYGbEeuPkZNKCcfHxw _AZd4OIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaJNpYGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaJNpIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaJNp4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaJNqIGbEeuPkZNKCcfHxw _AZd4OoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaJNqIGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaJNp4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaJNqoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaJNq4GbEeuPkZNKCcfHxw _AZd4PIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaJNq4GbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaJNqoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaJ0sYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaJ0soGbEeuPkZNKCcfHxw _AZefQIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaJ0soGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaJ0sYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaJ0tIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaJ0tYGbEeuPkZNKCcfHxw _AZefQoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaJ0tYGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaJ0tIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaJ0t4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaJ0uIGbEeuPkZNKCcfHxw _AZefRIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaJ0uIGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaJ0t4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaJ0uoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaJ0u4GbEeuPkZNKCcfHxw _AZefRoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaJ0u4GbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaJ0uoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaJ0vYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaJ0voGbEeuPkZNKCcfHxw _AZefSIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaJ0voGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaJ0vYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaKbwYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaKbwoGbEeuPkZNKCcfHxw _AZefSoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaKbwoGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaKbwYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaKbxIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaKbxYGbEeuPkZNKCcfHxw _AZefTIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaKbxYGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaKbxIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaKbx4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaKbyIGbEeuPkZNKCcfHxw _AZefToGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaKbyIGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaKbx4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaKbyoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaKby4GbEeuPkZNKCcfHxw _AZfGVYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaKby4GbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaKbyoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaLC0YGbEeuPkZNKCcfHxw" name="" memberEnd="_AaLC0oGbEeuPkZNKCcfHxw _AZfGV4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaLC0oGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaLC0YGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaLC1IGbEeuPkZNKCcfHxw" name="" memberEnd="_AaLC1YGbEeuPkZNKCcfHxw _AZfGWYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaLC1YGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaLC1IGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaLC14GbEeuPkZNKCcfHxw" name="" memberEnd="_AaLC2IGbEeuPkZNKCcfHxw _AZfGW4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaLC2IGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaLC14GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaLC2oGbEeuPkZNKCcfHxw" name="" memberEnd="_AaLC24GbEeuPkZNKCcfHxw _AZfGXYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaLC24GbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaLC2oGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaLp4IGbEeuPkZNKCcfHxw" name="" memberEnd="_AaLp4YGbEeuPkZNKCcfHxw _AZftYYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaLp4YGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaLp4IGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaLp44GbEeuPkZNKCcfHxw" name="" memberEnd="_AaLp5IGbEeuPkZNKCcfHxw _AZftY4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaLp5IGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaLp44GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaLp5oGbEeuPkZNKCcfHxw" name="" memberEnd="_AaLp54GbEeuPkZNKCcfHxw _AZftZ4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaLp54GbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaLp5oGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaLp6YGbEeuPkZNKCcfHxw" name="" memberEnd="_AaLp6oGbEeuPkZNKCcfHxw _AZgUcIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaLp6oGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaLp6YGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaLp7IGbEeuPkZNKCcfHxw" name="" memberEnd="_AaLp7YGbEeuPkZNKCcfHxw _AZgUc4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaLp7YGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaLp7IGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaMQ8YGbEeuPkZNKCcfHxw" name="" memberEnd="_AaMQ8oGbEeuPkZNKCcfHxw _AZgUdoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaMQ8oGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaMQ8YGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaMQ9IGbEeuPkZNKCcfHxw" name="" memberEnd="_AaMQ9YGbEeuPkZNKCcfHxw _AZgUeYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaMQ9YGbEeuPkZNKCcfHxw" name="" type="_AQ6ZIIGbEeuPkZNKCcfHxw" association="_AaMQ9IGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaMQ94GbEeuPkZNKCcfHxw" name="" memberEnd="_AaMQ-IGbEeuPkZNKCcfHxw _AZhikoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaMQ-IGbEeuPkZNKCcfHxw" name="" type="_ARAfwIGbEeuPkZNKCcfHxw" association="_AaMQ94GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaMQ-oGbEeuPkZNKCcfHxw" name="" memberEnd="_AaMQ-4GbEeuPkZNKCcfHxw _AZhilIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaMQ-4GbEeuPkZNKCcfHxw" name="" type="_ARAfwIGbEeuPkZNKCcfHxw" association="_AaMQ-oGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_l3HzIIJkEeuLTI0MOKBvew" name="" memberEnd="_l3HzIYJkEeuLTI0MOKBvew _l3IaMoJkEeuLTI0MOKBvew"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_API3h4GbEeuPkZNKCcfHxw" name="persistence">
          <packagedElement xmi:type="uml:Class" xmi:id="_AQuL5YGbEeuPkZNKCcfHxw" name="PersistenceManager">
            <ownedAttribute xmi:id="_AZV8ZoGbEeuPkZNKCcfHxw" name="url" isStatic="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZWjc4GbEeuPkZNKCcfHxw" name="user" isStatic="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZWjeYGbEeuPkZNKCcfHxw" name="password" isStatic="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZr6soGbEeuPkZNKCcfHxw" name="connectToDatabase" specification="_AQuy8IGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZr6s4GbEeuPkZNKCcfHxw" name="database">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZr6tIGbEeuPkZNKCcfHxw" type="_AYCU04GbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>String url = null;&#xD;
		String user = null;&#xD;
		String password = null;&#xD;
		Connection connection = null;&#xD;
		&#xD;
		switch(database) {&#xD;
		case &quot;LOCAL_DB&quot;:&#xD;
			url = &quot;jdbc:postgresql://localhost:5432/surferdb&quot;;&#xD;
			user = &quot;surferadmin&quot;;&#xD;
			password = &quot;surferpass&quot;;&#xD;
			break;&#xD;
		case &quot;LOCAL_TEST_DB&quot;:&#xD;
			url = &quot;jdbc:postgresql://localhost:5432/devsurferdb&quot;;&#xD;
			user = &quot;surferadmin&quot;;&#xD;
			password = &quot;surferpass&quot;;&#xD;
			break;&#xD;
		case &quot;REMOTE_DB&quot;:&#xD;
			url = &quot;postgres://jqjqasnlbihnyy:0bb8e23db3107a14e61bbdaaae12c176c5b977663abbb1db3a1dfeadc2091bd4@ec2-18-203-7-163.eu-west-1.compute.amazonaws.com:5432/de2ttdn4inqheo\r\n&quot;;&#xD;
			user = &quot;jqjqasnlbihnyy&quot;;&#xD;
			password = &quot;0bb8e23db3107a14e61bbdaaae12c176c5b977663abbb1db3a1dfeadc2091bd4&quot;;&#xD;
		default:&#xD;
			url = null;&#xD;
			user = null;&#xD;
			password = null;&#xD;
		}&#xD;
		&#xD;
		setUrl(url);&#xD;
		setUser(user);&#xD;
		setPassword(password);&#xD;
		connection = getConnection();&#xD;
		return connection;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZr6tYGbEeuPkZNKCcfHxw" name="closeDatabase" specification="_AY53hIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZr6toGbEeuPkZNKCcfHxw" name="connection" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>try {&#xD;
			connection.close();&#xD;
		} catch (SQLException e) {&#xD;
			System.out.println(&quot;Error: &quot; + e.getMessage());&#xD;
			System.out.println(&quot;Estado: &quot; + e.getSQLState());&#xD;
			System.out.println(&quot;Código: &quot; + e.getErrorCode());&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZr6t4GbEeuPkZNKCcfHxw" name="getConnection" specification="_AQuy8oGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZr6uIGbEeuPkZNKCcfHxw" type="_AYCU04GbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>Connection connection = null;&#xD;
		String dbName = null;&#xD;
		if (url != null) {&#xD;
			dbName = url.substring(url.lastIndexOf(&quot;/&quot;));&#xD;
			;&#xD;
		}&#xD;
		try {&#xD;
			Class.forName(&quot;org.postgresql.Driver&quot;);&#xD;
			connection = DriverManager.getConnection(url, user, password);&#xD;
			if (url != null) {&#xD;
				System.out.println(&quot;Connexión a &quot; + dbName + &quot; establecida con éxito\n&quot;);&#xD;
			} else {&#xD;
				System.out.println(&quot;Error de onnexión a &quot; + dbName + &quot;\n&quot;);&#xD;
			}&#xD;
		} catch (ClassNotFoundException ex) {&#xD;
			System.out.println(&quot;No se encuentra el controlador JDBC (&quot;&#xD;
			+ ex.getMessage() +&quot;)&quot;);&#xD;
		} catch (SQLException e) {&#xD;
			System.out.println(&quot;Error: &quot; + e.getMessage());&#xD;
			System.out.println(&quot;Estado: &quot; + e.getSQLState());&#xD;
			System.out.println(&quot;Código: &quot; + e.getErrorCode());&#xD;
		}		&#xD;
		return connection;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZr6uYGbEeuPkZNKCcfHxw" name="closeStatement" specification="_AY53h4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZr6uoGbEeuPkZNKCcfHxw" name="stm" type="_AYFYIIGbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>try {&#xD;
			stm.close();&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZr6u4GbEeuPkZNKCcfHxw" name="closePrepStatement" specification="_AY53iYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZr6vIGbEeuPkZNKCcfHxw" name="pstm" type="_AYC74IGbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>try {&#xD;
			if (pstm != null) {&#xD;
				pstm.close();&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZr6vYGbEeuPkZNKCcfHxw" name="closeResultSet" specification="_AY53i4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZr6voGbEeuPkZNKCcfHxw" name="rset" type="_AYC74oGbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>try {&#xD;
			rset.close();&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZr6v4GbEeuPkZNKCcfHxw" name="getResultSet" specification="_AY6ekYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZr6wIGbEeuPkZNKCcfHxw" name="stm" type="_AYFYIIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZr6wYGbEeuPkZNKCcfHxw" name="sql">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZr6woGbEeuPkZNKCcfHxw" type="_AYC74oGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>ResultSet results = null;	&#xD;
		try {&#xD;
			results = stm.executeQuery(sql);&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}	&#xD;
		return results;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZr6w4GbEeuPkZNKCcfHxw" name="getResultSet" specification="_AY6elYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZr6xIGbEeuPkZNKCcfHxw" name="pstm" type="_AYC74IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZr6xYGbEeuPkZNKCcfHxw" name="sql">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZr6xoGbEeuPkZNKCcfHxw" type="_AYC74oGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>ResultSet results = null;	&#xD;
		try {&#xD;
			results = pstm.executeQuery();&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}	&#xD;
		return results;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZr6x4GbEeuPkZNKCcfHxw" name="getLastElementIdFromDB" specification="_AY6emYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZr6yIGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZr6yYGbEeuPkZNKCcfHxw" name="tableName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZr6yoGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>int id = 0;&#xD;
		Statement stm = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT * FROM \&quot;&quot; + tableName&#xD;
				+ &quot;\&quot; ORDER BY id DESC LIMIT 1&quot;;&#xD;
		try {&#xD;
			stm = conn.createStatement();&#xD;
			results = stm.executeQuery(sql);&#xD;
			while (results.next()) {&#xD;
				id = results.getInt(1);&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			System.out.println(&quot;Estado: &quot; + e.getSQLState());&#xD;
			System.out.println(&quot;Código: &quot; + e.getErrorCode());&#xD;
			return id;&#xD;
		} finally {&#xD;
			PersistenceManager.closeResultSet(results);&#xD;
			PersistenceManager.closeStatement(stm);&#xD;
		}&#xD;
		return id;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZr6y4GbEeuPkZNKCcfHxw" name="getLatestTimestampFromDb" specification="_AY6enYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZr6zIGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZr6zYGbEeuPkZNKCcfHxw" type="_AYH0YoGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>Timestamp lastUpdate = null;&#xD;
		Statement stm = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT fecha_hora &quot;&#xD;
				+ &quot;FROM last_modification&quot;;&#xD;
		try {&#xD;
			stm = conn.createStatement();&#xD;
			results = getResultSet(stm, sql);&#xD;
			while (results.next()) {&#xD;
				Timestamp temp = results.getTimestamp(1);&#xD;
				if (lastUpdate == null) {&#xD;
					lastUpdate = temp;&#xD;
				}&#xD;
				if (temp.after(lastUpdate)) {&#xD;
					lastUpdate = temp;&#xD;
				}&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return null;&#xD;
		} finally {&#xD;
			PersistenceManager.closeResultSet(results);&#xD;
			PersistenceManager.closeStatement(stm);&#xD;
		}&#xD;
		return lastUpdate;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZr6zoGbEeuPkZNKCcfHxw" name="updateTimeStampToDB" specification="_AY6eoIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZr6z4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZr60IGbEeuPkZNKCcfHxw" name="tableName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZr60YGbEeuPkZNKCcfHxw" name="tNow" type="_AYH0YoGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZr60oGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		String sql = &quot;UPDATE last_modification &quot;&#xD;
				+ &quot;SET fecha_hora = ? &quot;&#xD;
				+ &quot;WHERE table_name = ?;&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setTimestamp(1, tNow);&#xD;
			pstm.setString(2, tableName);&#xD;
			pstm.executeUpdate();&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		} finally {&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQuy8IGbEeuPkZNKCcfHxw" name="connectToDatabase" isStatic="true" method="_AZr6soGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AQuy8YGbEeuPkZNKCcfHxw" name="database">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AY53g4GbEeuPkZNKCcfHxw" type="_AYCU04GbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AQuy8oGbEeuPkZNKCcfHxw" name="getConnection" isStatic="true" method="_AZr6t4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1ro4GbEeuPkZNKCcfHxw">
                <body>Devuelve una conexión a una base de datos&#xD;
	 * Los parámetros de la conexión son los atributos de la propia clase PersistenceManager&#xD;
	 * @return conexión con la base de datos</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY53hoGbEeuPkZNKCcfHxw" type="_AYCU04GbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AY53hIGbEeuPkZNKCcfHxw" name="closeDatabase" isStatic="true" method="_AZr6tYGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rooGbEeuPkZNKCcfHxw">
                <body>Cierra la conexión con la base de datos&#xD;
	 * @param connection conexión con la base de datos que se desea cerrar</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY53hYGbEeuPkZNKCcfHxw" name="connection" type="_AYCU04GbEeuPkZNKCcfHxw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AY53h4GbEeuPkZNKCcfHxw" name="closeStatement" isStatic="true" method="_AZr6uYGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rpIGbEeuPkZNKCcfHxw">
                <body>Cierra un Statement&#xD;
	 * @param stm statement a cerrar</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY53iIGbEeuPkZNKCcfHxw" name="stm" type="_AYFYIIGbEeuPkZNKCcfHxw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AY53iYGbEeuPkZNKCcfHxw" name="closePrepStatement" isStatic="true" method="_AZr6u4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rpYGbEeuPkZNKCcfHxw">
                <body>Cierra un PreparedStatement&#xD;
	 * @param pstm statement a cerrar</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY53ioGbEeuPkZNKCcfHxw" name="pstm" type="_AYC74IGbEeuPkZNKCcfHxw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AY53i4GbEeuPkZNKCcfHxw" name="closeResultSet" isStatic="true" method="_AZr6vYGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rpoGbEeuPkZNKCcfHxw">
                <body>Cierra un ResultSet&#xD;
	 * @param rset resultset a cerrar</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY6ekIGbEeuPkZNKCcfHxw" name="rset" type="_AYC74oGbEeuPkZNKCcfHxw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AY6ekYGbEeuPkZNKCcfHxw" name="getResultSet" isStatic="true" method="_AZr6v4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rp4GbEeuPkZNKCcfHxw">
                <body>Devuelve un ResultSet a partir de una consulta sql&#xD;
	 * @param stm Statement sobre el que se ejecuta la consulta&#xD;
	 * @param sql consulta sql&#xD;
	 * @return ResultSet obtenido a partir de la consulta sql</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY6ekoGbEeuPkZNKCcfHxw" name="stm" type="_AYFYIIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AY6ek4GbEeuPkZNKCcfHxw" name="sql">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AY6elIGbEeuPkZNKCcfHxw" type="_AYC74oGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AY6elYGbEeuPkZNKCcfHxw" name="getResultSet" isStatic="true" method="_AZr6w4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rqIGbEeuPkZNKCcfHxw">
                <body>Devuelve un ResultSet a partir de una consulta sql&#xD;
	 * @param pstm PreparedStatement sobre el que se ejecuta la consulta&#xD;
	 * @param sql consulta sql&#xD;
	 * @return ResultSet obtenido a partir de la consulta sql</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY6eloGbEeuPkZNKCcfHxw" name="pstm" type="_AYC74IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AY6el4GbEeuPkZNKCcfHxw" name="sql">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AY6emIGbEeuPkZNKCcfHxw" type="_AYC74oGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AY6emYGbEeuPkZNKCcfHxw" name="getLastElementIdFromDB" isStatic="true" method="_AZr6x4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rqYGbEeuPkZNKCcfHxw">
                <body>Devuelve el id del último tipo de evento de la tabla indicada&#xD;
	 * @param tableName nombre de la tabla en la base de datos&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @return id del último tipo de evento</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY6emoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AY6em4GbEeuPkZNKCcfHxw" name="tableName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AY6enIGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AY6enYGbEeuPkZNKCcfHxw" name="getLatestTimestampFromDb" isStatic="true" method="_AZr6y4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rqoGbEeuPkZNKCcfHxw">
                <body>Devuelve la fecha y la hora de la última actualización de datos en alguna&#xD;
	 * de las tablas de la base de datos&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @return timestamp con la fecha y la hora, null si falla la consulta</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY6enoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AY6en4GbEeuPkZNKCcfHxw" type="_AYH0YoGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AY6eoIGbEeuPkZNKCcfHxw" name="updateTimeStampToDB" isStatic="true" method="_AZr6zoGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1rq4GbEeuPkZNKCcfHxw">
                <body>Actualiza la tabla last_modification de la base de datos con la fecha y la hora&#xD;
	 * en la que se ha modificado o insertado algún dato en la tabla pasada por parámetro.&#xD;
	 * @param conn conexión a la base de datos&#xD;
	 * @param tableName tabla en la que ha habido algún tipo de modificación o inserción&#xD;
	 * @param tNow fecha y hora de la modificación o inserción&#xD;
	 * @return true si la actualización de la tabla last_modification se completa con éxito,&#xD;
	 * false si no se completa</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY6eoYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AY6eooGbEeuPkZNKCcfHxw" name="tableName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AY6eo4GbEeuPkZNKCcfHxw" name="tNow" type="_AYH0YoGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AY6epIGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_API3iIGbEeuPkZNKCcfHxw" name="session">
          <packagedElement xmi:type="uml:Class" xmi:id="_AQp6foGbEeuPkZNKCcfHxw" name="CurrentSession">
            <ownedAttribute xmi:id="_AZUuQ4GbEeuPkZNKCcfHxw" name="session" visibility="private" isStatic="true" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AaB454GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZUuRYGbEeuPkZNKCcfHxw" name="user" visibility="private" type="_ARBt4IGbEeuPkZNKCcfHxw" association="_AZ1EoYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZUuRoGbEeuPkZNKCcfHxw" name="bUnit" visibility="private" type="_ARExMIGbEeuPkZNKCcfHxw" association="_AaB46oGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZUuSIGbEeuPkZNKCcfHxw" name="company" visibility="private" type="_AQYNqIGbEeuPkZNKCcfHxw" association="_AZ1Eo4GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZUuSYGbEeuPkZNKCcfHxw" name="connection" visibility="private" type="_AYCU04GbEeuPkZNKCcfHxw" association="_AZ1EpYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZUuSoGbEeuPkZNKCcfHxw" name="timer" visibility="private" type="_AYRlZIGbEeuPkZNKCcfHxw" isReadOnly="true" association="_AaCf8IGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZUuS4GbEeuPkZNKCcfHxw" name="logOutAction" visibility="private" type="_AYPwMoGbEeuPkZNKCcfHxw" association="_AZ1Ep4GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZVVUIGbEeuPkZNKCcfHxw" name="dateTimeReference" visibility="private" type="_AYH0YoGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AZVVUoGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AZVVU4GbEeuPkZNKCcfHxw" key="volatile"/>
              </eAnnotations>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZVVWIGbEeuPkZNKCcfHxw" name="updatedTables" visibility="private" type="_AYH0YoGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AZVVWYGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AZVVWoGbEeuPkZNKCcfHxw" key="volatile"/>
              </eAnnotations>
              <qualifier xmi:id="_AZVVXYGbEeuPkZNKCcfHxw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZVVW4GbEeuPkZNKCcfHxw" value="new LinkedHashMap&lt;String, Timestamp>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZVVXoGbEeuPkZNKCcfHxw" name="usersUpdated" visibility="private">
              <eAnnotations xmi:id="_AZVVX4GbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AZVVYIGbEeuPkZNKCcfHxw" key="volatile"/>
              </eAnnotations>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZVVYYGbEeuPkZNKCcfHxw" value="false"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZVVY4GbEeuPkZNKCcfHxw" name="displays" visibility="private" type="_AYSzgYGbEeuPkZNKCcfHxw" association="_AaCf84GbEeuPkZNKCcfHxw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZVVZIGbEeuPkZNKCcfHxw" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZV8YYGbEeuPkZNKCcfHxw" name="currentDisplay" visibility="private" type="_AYSzgYGbEeuPkZNKCcfHxw" association="_AaCf9oGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZV8Y4GbEeuPkZNKCcfHxw" name="alertShown" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZV8ZIGbEeuPkZNKCcfHxw" value="false"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AUy3tIJYEeuLTI0MOKBvew" name="timerJob" type="_AQrIkIGbEeuPkZNKCcfHxw" aggregation="composite" association="_AUy3sIJYEeuLTI0MOKBvew">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AUy3tYJYEeuLTI0MOKBvew" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AUy3toJYEeuLTI0MOKBvew" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqso4GbEeuPkZNKCcfHxw" name="getInstance" specification="_AQqhhYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqspIGbEeuPkZNKCcfHxw" type="_AQp6foGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>if (session == null) {&#xD;
			session = new CurrentSession();&#xD;
		}&#xD;
		return session;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqspYGbEeuPkZNKCcfHxw" name="loadAllData" specification="_AY4CUIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqspoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZqsp4GbEeuPkZNKCcfHxw" name="bUnitId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZqsqIGbEeuPkZNKCcfHxw" name="userId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>//Carga de tipos de usuarios, tipos de eventos y estados de eventos&#xD;
		loadTypesStates(conn);&#xD;
		//Cargamos datos de la compañía&#xD;
		company = new Company().getCompanyFromDB(conn);&#xD;
		//Cargamos las unidades de negocio de la compañía&#xD;
		List&lt;BusinessUnit> bUnitList = new BusinessUnit().getBusinessUnitsFromDB(conn, company);&#xD;
		company.setBusinessUnits(bUnitList);&#xD;
		for (BusinessUnit unit: bUnitList) {&#xD;
			if (unit.getId() == bUnitId) {&#xD;
				//Asignamos la unidad de negocio a bUnit&#xD;
				bUnit = unit;&#xD;
			}&#xD;
		}&#xD;
		//Para localizar y asignar la BusinessUnit de la sesión, también debería funcionar&#xD;
		// this.bunit = new BusinessUnit().getBusinessUnitById (company, bUnitId);&#xD;
		&#xD;
		//Para cada unidad de negocio, cargamos sus usuarios, areas y eventos&#xD;
		for (BusinessUnit unit: company.getBusinessUnits()) {&#xD;
			List&lt;User> userList = new User().getUsersFromDB(conn, unit);&#xD;
			unit.setUsers(userList);&#xD;
			List&lt;Area> areaList = new Area().getAreasFromDB(conn, unit);&#xD;
			unit.setAreas(areaList);&#xD;
			List&lt;Event> eventList = new Event().getEventsFromDB(conn, unit);&#xD;
			unit.setEvents(eventList);&#xD;
			for (Event event: unit.getEvents()) {&#xD;
				List&lt;EventUpdate> eUpdate = new EventUpdate().getEventUpdatesFromDB(conn, event);&#xD;
				event.setUpdates(eUpdate);&#xD;
			}&#xD;
		}&#xD;
		//Asignamos el usuario que abre sesión a user&#xD;
		user = new User().getUserById(bUnit, userId);&#xD;
		//Registramos fecha y hora de la carga de datos de la sesión&#xD;
		dateTimeReference = PersistenceManager.getLatestTimestampFromDb(connection);&#xD;
		//Iniciamos la comprobación periódica de actualizaciones&#xD;
		timer = new Timer();&#xD;
		TimerTask task = new TimerJob();&#xD;
		timer.scheduleAtFixedRate(task, 10000, 60000);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqsqYGbEeuPkZNKCcfHxw" name="loadCurrentSessionData" specification="_AY4CVIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqsqoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZqsq4GbEeuPkZNKCcfHxw" name="bUnitId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZqsrIGbEeuPkZNKCcfHxw" name="userId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>//Carga de tipos de usuarios, tipos de eventos y estados de eventos&#xD;
		loadTypesStates(conn);&#xD;
		//Cargamos datos de la compañía&#xD;
		company = new Company().getCompanyFromDB(conn);&#xD;
		//Cargamos la unidad de negocio que tiene el id bUnitId&#xD;
		List&lt;BusinessUnit> bUnitList = new BusinessUnit().getBusinessUnitsFromDB(conn, company);&#xD;
		for (BusinessUnit unit: bUnitList) {&#xD;
			if (unit.getId() == bUnitId) {&#xD;
				//Añadimos a la compañía la unidad de negocio a la que pertenece el usuario&#xD;
				company.getBusinessUnits().add(unit);&#xD;
				//Asignamos la unidad de negocio a bUnit&#xD;
				bUnit = unit;&#xD;
			}&#xD;
		}&#xD;
		//Cargamos sus usuarios, areas y eventos de la unidad de negocio&#xD;
		List&lt;User> userList = new User().getUsersFromDB(conn, bUnit);&#xD;
		bUnit.setUsers(userList);&#xD;
		//Asignamos el usuario que abre sesión a user&#xD;
		user = new User().getUserById(bUnit, userId);&#xD;
		List&lt;Area> areaList = new Area().getAreasFromDB(conn, bUnit);&#xD;
		bUnit.setAreas(areaList);&#xD;
		List&lt;Event> eventList = new Event().getEventsFromDB(conn, bUnit);&#xD;
		bUnit.setEvents(eventList);&#xD;
		for (Event event: bUnit.getEvents()) {&#xD;
			List&lt;EventUpdate> eUpdate = new EventUpdate().getEventUpdatesFromDB(conn, event);&#xD;
			event.setUpdates(eUpdate);&#xD;
		}&#xD;
		//Registramos fecha y hora de la carga de datos de la sesión&#xD;
		dateTimeReference = PersistenceManager.getLatestTimestampFromDb(connection);&#xD;
		//Iniciamos la comprobación periódica de actualizaciones&#xD;
		timer = new Timer();&#xD;
		TimerTask task = new TimerJob();&#xD;
		timer.scheduleAtFixedRate(task, 10000, 60000);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZrTkoGbEeuPkZNKCcfHxw" name="loadTypesStates" specification="_AY4CXIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZrTk4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>//Lista de tipos de usuario&#xD;
		UserType userTypeList = new UserType();&#xD;
		userTypeList.loadData(conn);	&#xD;
		//Lista de tipos de eventos&#xD;
		EventType eventTypeList = new EventType();&#xD;
		eventTypeList.loadData(conn);	&#xD;
		//Lista de estados de eventos&#xD;
		EventState eventStateList = new EventState();&#xD;
		eventStateList.loadData(conn);		&#xD;
		//Mandamos las listas a un objeto contenedor&#xD;
		TypesStatesContainer.setuType(userTypeList);&#xD;
		TypesStatesContainer.setEvType(eventTypeList);&#xD;
		TypesStatesContainer.setEvState(eventStateList);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZrTlIGbEeuPkZNKCcfHxw" name="formatTimestamp" specification="_AY4CXoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZrTlYGbEeuPkZNKCcfHxw" name="timestamp" type="_AYH0YoGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZrTloGbEeuPkZNKCcfHxw" name="pattern">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZrTl4GbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>if (pattern == null) {&#xD;
			pattern = &quot;EEEE, dd-MM-yyyy HH:mm:ss&quot;;&#xD;
		}&#xD;
		SimpleDateFormat formatter = new SimpleDateFormat(pattern);&#xD;
		String niceTimestamp = formatter.format(timestamp);&#xD;
		return niceTimestamp;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZrTmIGbEeuPkZNKCcfHxw" name="backToLogin" specification="_AY4pYIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZrTmYGbEeuPkZNKCcfHxw" name="tableName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZrTmoGbEeuPkZNKCcfHxw" name="displays" type="_AYSzgYGbEeuPkZNKCcfHxw">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZrTm4GbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZrTnIGbEeuPkZNKCcfHxw" name="currentDisplay" type="_AYSzgYGbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>String infoMessage = &quot;&quot;;&#xD;
		String title = &quot;&quot;;&#xD;
		if (tableName.equals(BusinessUnit.TABLE_NAME)) {&#xD;
			infoMessage = &quot;SE HA DESACTIVADO LA UNIDAD DE NEGOCIO A LA QUE PERTENECE EL USUARIO QUE ABRIÓ SESIÓN.\n&quot;&#xD;
					+ &quot;TODOS LOS USUARIOS DE DICHA UNIDAD DE NEGOCIO HAN SIDO DESACTIVADOS TAMBIÉN.\n&quot;&#xD;
					+ &quot;CONTACTE CON UN ADMINISTRADOR SI NECESITA RECUPERAR SU ACCESO AL PROGRAMA.&quot;;&#xD;
			title = &quot;Unidad de negocio y usuarios desactivados&quot;;&#xD;
		} else if (tableName.equals(User.TABLE_NAME)) {&#xD;
			infoMessage = &quot;SE HA DESACTIVADO AL USUARIO QUE HA ABIERTO SESIÓN.\n&quot;&#xD;
					+ &quot;CONTACTE CON UN ADMINISTRADOR SI NECESITA RECUPERAR SU ACCESO AL PROGRAMA.&quot;;&#xD;
			title = &quot;Usuario desactivado&quot;;&#xD;
		}&#xD;
&#xD;
		Frame messageFrame = new Frame(currentDisplay.getDefaultConfiguration());&#xD;
		Rectangle frameRectangle = messageFrame.getBounds();&#xD;
	    int paneWidth = frameRectangle.width;&#xD;
	    int paneHeight = frameRectangle.height;&#xD;
		&#xD;
	    int coordinateX = currentDisplay.getDefaultConfiguration().getBounds().x;&#xD;
	    int coordinateY = currentDisplay.getDefaultConfiguration().getBounds().y;&#xD;
	    int currentWidth = 0;&#xD;
	    int currentHeight = 0;&#xD;
		//Centrado de pantalla multimonitor&#xD;
		for (int i = 0; i &lt; displays.length; i++) {&#xD;
		    if (currentDisplay.getIDstring().equals(displays[i].getIDstring())) {&#xD;
				currentWidth = currentDisplay.getDisplayMode().getWidth();&#xD;
				currentHeight = currentDisplay.getDisplayMode().getHeight();&#xD;
				messageFrame.setBounds((currentWidth - paneWidth) / 2 + coordinateX, (currentHeight - paneHeight) / 2 + coordinateY, paneWidth, paneHeight);&#xD;
		    }&#xD;
		}&#xD;
		JOptionPane.showMessageDialog(messageFrame, infoMessage, title, JOptionPane.WARNING_MESSAGE);&#xD;
		&#xD;
		//Replicamos la acción de logout del selector&#xD;
		new JButton(logOutAction).doClick();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZrTnoGbEeuPkZNKCcfHxw" name="getbUnit" specification="_AQrIlYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZrTn4GbEeuPkZNKCcfHxw" type="_ARExMIGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>return bUnit;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZrToIGbEeuPkZNKCcfHxw" name="setbUnit" specification="_AYTakoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZrToYGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>this.bUnit = bUnit;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZrTooGbEeuPkZNKCcfHxw" name="getEventStates" specification="_AQrIloGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZrTo4GbEeuPkZNKCcfHxw" type="_AYK3sYGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>return updatedTables;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZrTpIGbEeuPkZNKCcfHxw" name="setEventStates" specification="_AY4pZ4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZrTpYGbEeuPkZNKCcfHxw" name="eventStates" type="_AYK3sYGbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>this.updatedTables = eventStates;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZrTpoGbEeuPkZNKCcfHxw" name="getUpdatedTables" specification="_AQrvoYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZrTp4GbEeuPkZNKCcfHxw" type="_AYK3sYGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>return updatedTables;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZrTqIGbEeuPkZNKCcfHxw" name="setUpdatedTables" specification="_AY4pa4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZrTqYGbEeuPkZNKCcfHxw" name="updatedTables" type="_AYK3sYGbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>this.updatedTables = updatedTables;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZrTqoGbEeuPkZNKCcfHxw" name="isUsersUpdated" specification="_AQrvo4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZrTq4GbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return usersUpdated;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZrTrIGbEeuPkZNKCcfHxw" name="setUsersUpdated" specification="_AQrvpYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZrTrYGbEeuPkZNKCcfHxw" name="usersUpdated">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>this.usersUpdated = usersUpdated;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZrTuIGbEeuPkZNKCcfHxw" name="isAlertShown" specification="_AQsWsIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZrTuYGbEeuPkZNKCcfHxw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return alertShown;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZrTuoGbEeuPkZNKCcfHxw" name="setAlertShown" specification="_AQsWsoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZrTu4GbEeuPkZNKCcfHxw" name="alertShown">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>this.alertShown = alertShown;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQqhgIGbEeuPkZNKCcfHxw" name="CurrentSession" visibility="private">
              <eAnnotations xmi:id="_AQqhgYGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AQqhgoGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AQqhhIGbEeuPkZNKCcfHxw" type="_AQp6foGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AQqhhYGbEeuPkZNKCcfHxw" name="getInstance" isStatic="true" method="_AZqso4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYTakIGbEeuPkZNKCcfHxw" type="_AQp6foGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AQrIlYGbEeuPkZNKCcfHxw" name="getbUnit" method="_AZrTnoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYTakYGbEeuPkZNKCcfHxw" type="_ARExMIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AQrIloGbEeuPkZNKCcfHxw" name="getEventStates" method="_AZrTooGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AY4pZoGbEeuPkZNKCcfHxw" type="_AYK3sYGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AQrvoYGbEeuPkZNKCcfHxw" name="getUpdatedTables" method="_AZrTpoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AY4paoGbEeuPkZNKCcfHxw" type="_AYK3sYGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AQrvo4GbEeuPkZNKCcfHxw" name="isUsersUpdated" method="_AZrTqoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AQrvpIGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQrvpYGbEeuPkZNKCcfHxw" name="setUsersUpdated" method="_AZrTrIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AQrvpoGbEeuPkZNKCcfHxw" name="usersUpdated">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQsWsIGbEeuPkZNKCcfHxw" name="isAlertShown" method="_AZrTuIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AQsWsYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQsWsoGbEeuPkZNKCcfHxw" name="setAlertShown" method="_AZrTuoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AQsWs4GbEeuPkZNKCcfHxw" name="alertShown">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AYTakoGbEeuPkZNKCcfHxw" name="setbUnit" method="_AZrToIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYTak4GbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AY4CUIGbEeuPkZNKCcfHxw" name="loadAllData" method="_AZqspYGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_eHrHEIJXEeuLTI0MOKBvew">
                <body>Carga todos los datos de la base de datos. La compañía,&#xD;
	 * la unidad de negocio y el usuario se almacenan en los&#xD;
	 * atributos de la clase&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param bUnitId unidad de negocio a la que pertenece el usuario&#xD;
	 * que identificamos con el parámetro userId&#xD;
	 * @param userId id del usuario. Será un usuario administrador,&#xD;
	 * ya que es el único tipo de usuario que tiene acceso a los datos&#xD;
	 * de todas las unidades de negocio</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY4CUYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AY4CUoGbEeuPkZNKCcfHxw" name="bUnitId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AY4CU4GbEeuPkZNKCcfHxw" name="userId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AY4CVIGbEeuPkZNKCcfHxw" name="loadCurrentSessionData" method="_AZqsqYGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_eHruIIJXEeuLTI0MOKBvew">
                <body>Carga los datos de la unidad de negocio a la que pertenece el usuario&#xD;
	 * que abre la sesión. La compañía, la unidad de negocio y el usuario&#xD;
	 * se almacenan en los atributos de la clase&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param bUnitId id de la unidad de negocio&#xD;
	 * @param userId id del usuario que abre la sesión</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY4CVYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AY4CVoGbEeuPkZNKCcfHxw" name="bUnitId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AY4CV4GbEeuPkZNKCcfHxw" name="userId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AY4CXIGbEeuPkZNKCcfHxw" name="loadTypesStates" method="_AZrTkoGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_eHruIYJXEeuLTI0MOKBvew">
                <body>Carga los tipos de usuarios, tipos de eventos y estados de eventos almacenados en la base&#xD;
	 * de datos, y los agrupa en un objeto contenedor TypesStatesContainer&#xD;
	 * @param conn conexión con la base de datos</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY4CXYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AY4CXoGbEeuPkZNKCcfHxw" name="formatTimestamp" method="_AZrTlIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_eHruIoJXEeuLTI0MOKBvew">
                <body>Da formato a la fecha y la hora del Timestamp pasado por parámetro&#xD;
	 * @param timestamp Timestamp a formatear&#xD;
	 * @param pattern patrón de formateo, si es null se usa el patrón por defecto del método&#xD;
	 * @return Timestamp formateado</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY4CX4GbEeuPkZNKCcfHxw" name="timestamp" type="_AYH0YoGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AY4CYIGbEeuPkZNKCcfHxw" name="pattern">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AY4CYYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AY4pYIGbEeuPkZNKCcfHxw" name="backToLogin" method="_AZrTmIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_eHruI4JXEeuLTI0MOKBvew">
                <body>Devuelve el programa a la pantalla de login si el usuario que abrió sesión ha sido desactivado por otro usuario desde otra&#xD;
	 * sesión. Se mostrará un mensaje informativo antes de cerrar la sesión local. El usuario que abrió sesión ya no podrá hacer&#xD;
	 * login de nuevo hasta que no sea reactivado por algún administrador.&#xD;
	 * @param tableName origen de la desactivación del usuario, bien sea por la desactivación de la unidad de negocio a la que pertenece&#xD;
	 * o por la desactivación directa del usuario</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY4pYYGbEeuPkZNKCcfHxw" name="tableName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AY4pYoGbEeuPkZNKCcfHxw" name="displays" type="_AYSzgYGbEeuPkZNKCcfHxw">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AY4pZIGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AY4pY4GbEeuPkZNKCcfHxw" name="currentDisplay" type="_AYSzgYGbEeuPkZNKCcfHxw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AY4pZ4GbEeuPkZNKCcfHxw" name="setEventStates" method="_AZrTpIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AY4paIGbEeuPkZNKCcfHxw" name="eventStates" type="_AYK3sYGbEeuPkZNKCcfHxw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AY4pa4GbEeuPkZNKCcfHxw" name="setUpdatedTables" method="_AZrTqIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AY4pbIGbEeuPkZNKCcfHxw" name="updatedTables" type="_AYK3sYGbEeuPkZNKCcfHxw"/>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_AQrIkIGbEeuPkZNKCcfHxw" name="TimerJob" visibility="private">
              <ownedComment xmi:id="_eHruJIJXEeuLTI0MOKBvew">
                <body>Clase que realiza la comprobación de las tablas que se han actualizado&#xD;
	 * con posterioridad a la última carga de datos de la sesión en curso</body>
              </ownedComment>
              <generalization xmi:id="_AY4pZYGbEeuPkZNKCcfHxw" general="_AYSzh4GbEeuPkZNKCcfHxw"/>
              <ownedAttribute xmi:id="_AUy3sYJYEeuLTI0MOKBvew" name="currentSession" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AUy3sIJYEeuLTI0MOKBvew">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AUy3soJYEeuLTI0MOKBvew" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AUy3s4JYEeuLTI0MOKBvew" value="1"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZrTnYGbEeuPkZNKCcfHxw" name="run" specification="_AQrIkYGbEeuPkZNKCcfHxw">
                <language>java</language>
                <body>if (user != null) {&#xD;
				//Debug&#xD;
				System.out.println(&quot;Usuario: &quot; + user.getUserAlias());&#xD;
			} else {&#xD;
				System.out.println(&quot;Usuario: sin definir&quot;);&#xD;
			}&#xD;
			System.out.println(&quot;Comprobando actualización de datos de la sesión&quot;);&#xD;
			&#xD;
			CurrentSession.this.updatedTables.clear();&#xD;
			Connection conn = session.getConnection();&#xD;
			if (conn == null) {&#xD;
				conn = PersistenceManager.getConnection();&#xD;
			}&#xD;
			//Registramos el timestamp de la sessión y lo asignamos también a una&#xD;
			//variable temporal que registrará los incrementos que puedan existir &#xD;
			//en la base de datos&#xD;
			Timestamp sessionDateTime = session.getDateTimeReference();&#xD;
			Timestamp tempDateTime = session.getDateTimeReference();;&#xD;
			String tableName = &quot;&quot;;&#xD;
			Statement stm = null;&#xD;
			ResultSet results = null;&#xD;
			String sql = &quot;SELECT * &quot;&#xD;
					+ &quot;FROM last_modification&quot;;&#xD;
			try {&#xD;
				//Debug&#xD;
				System.out.println(&quot;Dentro del try&quot;);&#xD;
				&#xD;
				stm = conn.createStatement();&#xD;
				results = PersistenceManager.getResultSet(stm, sql);&#xD;
				//Para cada tabla, comprobamos su timestamp&#xD;
				while (results.next()) {&#xD;
					&#xD;
					//Debug&#xD;
					System.out.println(&quot;Dentro del while&quot;);&#xD;
					&#xD;
					tableName = results.getString(1);&#xD;
					Timestamp dateTimeDb = results.getTimestamp(2);&#xD;
					//Si el timestamp de la tabla es posterior al de la sesión, se ha&#xD;
					//producido una actualización que no tenemos registrada.&#xD;
					if (sessionDateTime.before(dateTimeDb) ) {&#xD;
						&#xD;
						//Debug&#xD;
						System.out.println(&quot;Dentro del if&quot;);&#xD;
						&#xD;
						//Actualizar objetos correspondientes a table_name&#xD;
						switch(tableName) {&#xD;
							case &quot;user_type&quot;:&#xD;
								UserType userTypeList = new UserType();&#xD;
								userTypeList.loadData(conn);&#xD;
								TypesStatesContainer.setuType(userTypeList);&#xD;
								CurrentSession.this.updatedTables.put(tableName, dateTimeDb);&#xD;
								break;&#xD;
							case &quot;event_type&quot;:&#xD;
								EventType eventTypeList = new EventType();&#xD;
								eventTypeList.loadData(conn);&#xD;
								TypesStatesContainer.setEvType(eventTypeList);&#xD;
								CurrentSession.this.updatedTables.put(tableName, dateTimeDb);&#xD;
								break;&#xD;
							case &quot;event_state&quot;:&#xD;
								EventState eventStateList = new EventState();&#xD;
								eventStateList.loadData(conn);&#xD;
								TypesStatesContainer.setEvState(eventStateList);&#xD;
								CurrentSession.this.updatedTables.put(tableName, dateTimeDb);&#xD;
								break;&#xD;
							case &quot;company&quot;:&#xD;
								&#xD;
								//Debug&#xD;
								System.out.println(&quot;Dentro del case company&quot;);&#xD;
								&#xD;
								//Actualizamos la compañía de la sesión&#xD;
								company.refresh(conn);&#xD;
								&#xD;
								//Debug&#xD;
								System.out.println(session.getCompany().getNombre());&#xD;
								&#xD;
								//Añadimos la tabla company a la lista de tablas actualizadas&#xD;
								CurrentSession.this.updatedTables.put(tableName, dateTimeDb);&#xD;
								&#xD;
								//Debug&#xD;
								System.out.println(tableName);&#xD;
								System.out.println(dateTimeDb.toString());&#xD;
								System.out.println(&quot;Tamaño del Map: &quot; + CurrentSession.this.updatedTables.size());&#xD;
								&#xD;
								break;&#xD;
							case &quot;business_unit&quot;:&#xD;
								&#xD;
								//Debug&#xD;
								System.out.println(&quot;Dentro del case business_unit&quot;);&#xD;
								&#xD;
								//Carga de tipos de usuarios, tipos de eventos y estados de eventos&#xD;
								loadTypesStates(conn);&#xD;
								&#xD;
								//Recargamos la lista de unidades de negocio de la base de datos&#xD;
								List&lt;BusinessUnit> bUnits = new BusinessUnit().getBusinessUnitsFromDB(conn, company);&#xD;
								&#xD;
								//Localizamos la unidad de negocio del usuario que abrió sesión&#xD;
								BusinessUnit updatedBunit = null;&#xD;
								for (BusinessUnit oneUnit : bUnits) {&#xD;
									if (user != null) {&#xD;
										if (oneUnit.getId() == user.getbUnit().getId()) {&#xD;
											updatedBunit = oneUnit;&#xD;
										}&#xD;
									}&#xD;
								}&#xD;
								&#xD;
								//Comprobamos que la unidad de negocio del usuario que abrió sesión no ha sido deshabilitada&#xD;
								if(updatedBunit != null &amp;&amp; updatedBunit.isActivo() == false &amp;&amp; usersUpdated == false) {&#xD;
									//No hace falta que el case user actualize usuarios y nos devuelva también a la pantalla de login&#xD;
									usersUpdated = true;&#xD;
									//Si no hemos vuelto a la pantalla de login directamente por la acción del usuario&#xD;
									if (!alertShown) {&#xD;
										//Back to login&#xD;
										backToLogin(BusinessUnit.TABLE_NAME, displays, currentDisplay);&#xD;
									}&#xD;
									alertShown = false;&#xD;
								//Si la unidad de negocio del usuario que abrió sesión sigue activa, recargamos datos&#xD;
								} else if (updatedBunit != null){&#xD;
									//Filtramos la lista de unidades de negocio en función del tipo de usuario que abrió sesión&#xD;
									//Si es un usuario administrador, se recargan todas las unidades de negocio&#xD;
									if (user.getUserType().equals(&quot;ADMIN&quot;)) {&#xD;
													&#xD;
										//Debug&#xD;
										System.out.println(&quot;Recargando todas las unidades de negocio. Usuario administrador&quot;);&#xD;
										&#xD;
										company.setBusinessUnits(bUnits);&#xD;
										for (BusinessUnit oneUnit : company.getBusinessUnits()) {&#xD;
											if (oneUnit.getId() == bUnit.getId()) {&#xD;
												//Reasignamos la unidad de negocio de la sesión&#xD;
												bUnit = oneUnit;&#xD;
												break;&#xD;
											}&#xD;
										}									&#xD;
									//Si es un usuario manager o user, solo recargamos su unidad de negocio, que es la misma que la&#xD;
									//de la sesión&#xD;
									} else {&#xD;
										for (BusinessUnit oneUnit : bUnits) {&#xD;
											&#xD;
											//Debug&#xD;
											System.out.println(&quot;Recargando la unidad de negocio del usuario manager o user&quot;);&#xD;
											&#xD;
											if (oneUnit.getId() == bUnit.getId()) {&#xD;
												company.getBusinessUnits().clear();&#xD;
												company.getBusinessUnits().add(oneUnit);&#xD;
												//Reasignamos la unidad de negocio de la sesión&#xD;
												bUnit = oneUnit;&#xD;
												break;&#xD;
											}&#xD;
										}&#xD;
									}&#xD;
									//Recargamos los datos de la lista de unidades de negocio actualizadas							&#xD;
									for (BusinessUnit oneUnit : company.getBusinessUnits()) {&#xD;
										List&lt;User> userList = new User().getUsersFromDB(conn, oneUnit);&#xD;
										oneUnit.setUsers(userList);&#xD;
										List&lt;Area> areaList = new Area().getAreasFromDB(conn, oneUnit);&#xD;
										oneUnit.setAreas(areaList);&#xD;
										List&lt;Event> eventList = new Event().getEventsFromDB(conn, oneUnit);&#xD;
										oneUnit.setEvents(eventList);&#xD;
										for (Event event: oneUnit.getEvents()) {&#xD;
											List&lt;EventUpdate> eUpdate = new EventUpdate().getEventUpdatesFromDB(conn, event);&#xD;
											event.setUpdates(eUpdate);&#xD;
										}&#xD;
									}&#xD;
&#xD;
									//Asignamos el usuario que abre sesión a user	&#xD;
									for (User oneUser : updatedBunit.getUsers()) {&#xD;
										if (oneUser.getId() == user.getId()) {&#xD;
											user = oneUser;&#xD;
											break;&#xD;
										}&#xD;
									}&#xD;
									//Registramos que la recarga de los usuarios actualizados ya se ha hecho&#xD;
									usersUpdated = true;&#xD;
									//Añadimos la tabla business_unit a la lista de tablas actualizadas&#xD;
									CurrentSession.this.updatedTables.put(tableName, dateTimeDb);&#xD;
									//Añadimos la tabla user a la lista de tablas actualizadas para cubrir la posibilidad de que la&#xD;
									//edición de una unidad de negocio haya afectado al estado de sus usuarios&#xD;
									CurrentSession.this.updatedTables.put(User.TABLE_NAME, dateTimeDb);&#xD;
								}&#xD;
								break;&#xD;
							case &quot;user&quot;:&#xD;
								&#xD;
								//Debug&#xD;
								if (user != null) {&#xD;
									if (user.getUserAlias() == &quot;&quot; || user.getUserAlias() == null) {&#xD;
										System.out.println(&quot;Usuario: ninguno&quot;);&#xD;
									} else {&#xD;
										System.out.println(&quot;Usuario: &quot; + user.getUserAlias());&#xD;
									} &#xD;
								}&#xD;
								System.out.println(&quot;Dentro del case user&quot;);&#xD;
								&#xD;
								//Comprobamos que una actualización previa de las unidades de negocio no haya hecho ya la&#xD;
								//correspondiente recarga de los usuarios actualizados, para no repetirla.&#xD;
								if (!usersUpdated) {&#xD;
									&#xD;
									//Recargamos los datos de los usuarios de todas las unidades de negocio&#xD;
									for (BusinessUnit oneUnit : company.getBusinessUnits()) {&#xD;
										List&lt;User> userList = new User().getUsersFromDB(conn, oneUnit);&#xD;
										oneUnit.setUsers(userList);&#xD;
									}&#xD;
									//Localizamos al usuario que abrió sesión&#xD;
									User updatedUser = null;&#xD;
									for (User oneUser : user.getbUnit().getUsers()) {&#xD;
										if (oneUser.getId() == user.getId()) {&#xD;
											updatedUser = oneUser;&#xD;
										}&#xD;
									}&#xD;
									//Comprobamos que el usuario que abrió sesión no ha sido deshabilitado&#xD;
									if(updatedUser.isActivo() == false) {&#xD;
										if (!alertShown) {&#xD;
											//Back to login&#xD;
										backToLogin(User.TABLE_NAME, displays, currentDisplay);&#xD;
										}&#xD;
										alertShown = false;&#xD;
									//Si el usuario que abrió sesión sigue activo, lo reasignamos &#xD;
									} else {&#xD;
										user = updatedUser;	&#xD;
									}&#xD;
								}&#xD;
								//Reset usersUpdated&#xD;
								usersUpdated = false;&#xD;
								&#xD;
//								//Añadimos la tabla user a la lista de tablas actualizadas&#xD;
								CurrentSession.this.updatedTables.put(tableName, dateTimeDb);&#xD;
								break;&#xD;
							case &quot;area&quot;:&#xD;
								List&lt;Area> areaList = new Area().getAreasFromDB(conn, session.getbUnit());&#xD;
								//Asignamos la lista de areas actualizada a la unidad de negocio de la sesión&#xD;
								session.getbUnit().setAreas(areaList);&#xD;
								CurrentSession.this.updatedTables.put(tableName, dateTimeDb);&#xD;
								break;&#xD;
							case &quot;event&quot;:&#xD;
								List&lt;Event> eventList = new Event().getEventsFromDB(conn, session.getbUnit());&#xD;
								//Asignamos la lista de eventos actualizada a la unidad de negocio de la sesión&#xD;
								session.getbUnit().setEvents(eventList);&#xD;
								//Asignamos a cada evento de la unidad de negocio sus actualizaciones&#xD;
								for (Event event: session.getbUnit().getEvents()) {&#xD;
									List&lt;EventUpdate> eUpdate = new EventUpdate().getEventUpdatesFromDB(conn, event);&#xD;
									event.setUpdates(eUpdate);&#xD;
								}&#xD;
								CurrentSession.this.updatedTables.put(tableName, dateTimeDb);&#xD;
								break;&#xD;
							case &quot;event_update&quot;:&#xD;
								//Asignamos la lista de actualizaciones de eventos actualizada a cada evento de &#xD;
								//la unidad de negocio de la sesión&#xD;
								for (Event event: session.getbUnit().getEvents()) {&#xD;
									List&lt;EventUpdate> eUpdate = new EventUpdate().getEventUpdatesFromDB(conn, event);&#xD;
									event.setUpdates(eUpdate);&#xD;
								}&#xD;
								CurrentSession.this.updatedTables.put(tableName, dateTimeDb);&#xD;
								break;&#xD;
							default:&#xD;
								//Error. Tabla desconocida&#xD;
						}				&#xD;
						//Actualizamos el timestamp temporal para que acabe registrando&#xD;
						//el mayor valor que encuentre en todo el Resultset&#xD;
						if(tempDateTime.before(dateTimeDb)) {&#xD;
							tempDateTime = dateTimeDb;&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
				//Si el timestamp de la sesión es anterior al timestamp temporal tras comprobar las actualizaciones&#xD;
				if (sessionDateTime.before(tempDateTime)) {&#xD;
					//Actualizamos timestamp de la sesión con el valor del timestamp temporal&#xD;
					session.setDateTimeReference(tempDateTime);&#xD;
				}&#xD;
				&#xD;
				//Actualizar el panel que esté visible si su información ha cambiado&#xD;
				//1º - Identificar panel visible&#xD;
				//2º - Comprobar si el panel visible tiene datos de la tabla que ha cambiado&#xD;
				//3º - Recargar datos del panel visible&#xD;
			} catch (SQLException e) {&#xD;
				e.printStackTrace();&#xD;
			}&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQrIkYGbEeuPkZNKCcfHxw" name="run" method="_AZrTnYGbEeuPkZNKCcfHxw"/>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ1EoYGbEeuPkZNKCcfHxw" name="" memberEnd="_AZUuRYGbEeuPkZNKCcfHxw _AZ1EooGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ1EooGbEeuPkZNKCcfHxw" name="" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AZ1EoYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ1Eo4GbEeuPkZNKCcfHxw" name="" memberEnd="_AZUuSIGbEeuPkZNKCcfHxw _AZ1EpIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ1EpIGbEeuPkZNKCcfHxw" name="" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AZ1Eo4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ1EpYGbEeuPkZNKCcfHxw" name="" memberEnd="_AZUuSYGbEeuPkZNKCcfHxw _AZ1EpoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ1EpoGbEeuPkZNKCcfHxw" name="" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AZ1EpYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ1Ep4GbEeuPkZNKCcfHxw" name="" memberEnd="_AZUuS4GbEeuPkZNKCcfHxw _AZ1EqIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ1EqIGbEeuPkZNKCcfHxw" name="" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AZ1Ep4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaB454GbEeuPkZNKCcfHxw" name="" memberEnd="_AaB46IGbEeuPkZNKCcfHxw _AZUuQ4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaB46IGbEeuPkZNKCcfHxw" name="" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AaB454GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaB46oGbEeuPkZNKCcfHxw" name="" memberEnd="_AaB464GbEeuPkZNKCcfHxw _AZUuRoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaB464GbEeuPkZNKCcfHxw" name="" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AaB46oGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaCf8IGbEeuPkZNKCcfHxw" name="" memberEnd="_AaCf8YGbEeuPkZNKCcfHxw _AZUuSoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaCf8YGbEeuPkZNKCcfHxw" name="" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AaCf8IGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaCf84GbEeuPkZNKCcfHxw" name="" memberEnd="_AaCf9IGbEeuPkZNKCcfHxw _AZVVY4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaCf9IGbEeuPkZNKCcfHxw" name="" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AaCf84GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaCf9oGbEeuPkZNKCcfHxw" name="" memberEnd="_AaCf94GbEeuPkZNKCcfHxw _AZV8YYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaCf94GbEeuPkZNKCcfHxw" name="" type="_AQp6foGbEeuPkZNKCcfHxw" association="_AaCf9oGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AUy3sIJYEeuLTI0MOKBvew" name="" memberEnd="_AUy3sYJYEeuLTI0MOKBvew _AUy3tIJYEeuLTI0MOKBvew"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_APJekIGbEeuPkZNKCcfHxw" name="app">
          <packagedElement xmi:type="uml:Class" xmi:id="_AQT8MIGbEeuPkZNKCcfHxw" name="EventSurfer">
            <ownedAttribute xmi:id="_AZOAkIGbEeuPkZNKCcfHxw" name="connection" visibility="package" type="_AYCU04GbEeuPkZNKCcfHxw" association="_AZ-OgIGbEeuPkZNKCcfHxw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnCIIGbEeuPkZNKCcfHxw" name="main" specification="_AQUjSYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZnCIYGbEeuPkZNKCcfHxw" name="args">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZnCIoGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>EventQueue.invokeLater(new Runnable() {&#xD;
			public void run() {&#xD;
				try {&#xD;
					EventSurfer eventSurfer = new EventSurfer();&#xD;
					//eventSurfer.frame.setVisible(true);&#xD;
					eventSurfer.go(args);&#xD;
				} catch (Exception e) {&#xD;
					e.printStackTrace();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnCI4GbEeuPkZNKCcfHxw" name="go" specification="_AQVKVoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZnCJIGbEeuPkZNKCcfHxw" name="args">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZnCJYGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>if (args.length == 1) {&#xD;
			connection = PersistenceManager.connectToDatabase(args[0]);&#xD;
&#xD;
		} else {&#xD;
			connection = PersistenceManager.connectToDatabase(&quot;LOCAL_TEST_DB&quot;);			&#xD;
		}&#xD;
		&#xD;
		while(connection == null) {&#xD;
			//Error screen with reconnect button&#xD;
		}&#xD;
		CurrentSession session = CurrentSession.getInstance();&#xD;
		session.setConnection(connection);&#xD;
		AppWindow frame = new AppWindow(&quot;EVENTSURFER&quot;, connection, session);&#xD;
		frame.setVisible(true);&#xD;
		User user = new User().getDefaultAdminUser(connection);&#xD;
&#xD;
		if ((user.getPassword().equals(&quot;surferpass&quot;))) {&#xD;
			//admin password sin cambiar&#xD;
			System.out.println(&quot;Password sin cambiar&quot;);&#xD;
			//DefaultAdmin screen			&#xD;
			DefaultAdmin adminPanel = new DefaultAdmin(connection, user, session, frame);&#xD;
			//Añadimos el panel de actualización de datos del usuario administrador&#xD;
			//por defecto a la ventana&#xD;
			frame.getBasePanel().add(adminPanel, BorderLayout.CENTER);&#xD;
&#xD;
		} else {&#xD;
			//admin password cambiado&#xD;
			System.out.println(&quot;Password cambiado&quot;);&#xD;
			//Login screen&#xD;
			Login loginPanel = new Login(connection, session, frame);&#xD;
			//Añadimos el panel de login a la ventana&#xD;
			frame.getBasePanel().add(loginPanel, BorderLayout.CENTER);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQUjSYGbEeuPkZNKCcfHxw" name="main" isStatic="true" method="_AZnCIIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AQUjSoGbEeuPkZNKCcfHxw" name="args">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AQVKUIGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQVKUYGbEeuPkZNKCcfHxw" name="EventSurfer">
              <eAnnotations xmi:id="_AQVKUoGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AQVKU4GbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AQVKVYGbEeuPkZNKCcfHxw" type="_AQT8MIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AQVKVoGbEeuPkZNKCcfHxw" name="go" method="_AZnCI4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AQVKV4GbEeuPkZNKCcfHxw" name="args">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AQVKWIGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ-OgIGbEeuPkZNKCcfHxw" name="" memberEnd="_AZ-OgYGbEeuPkZNKCcfHxw _AZOAkIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ-OgYGbEeuPkZNKCcfHxw" name="" type="_AQT8MIGbEeuPkZNKCcfHxw" association="_AZ-OgIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_APQMQIGbEeuPkZNKCcfHxw" name="types_states">
          <packagedElement xmi:type="uml:Class" xmi:id="_AQhXk4GbEeuPkZNKCcfHxw" name="UserType">
            <ownedAttribute xmi:id="_AZRD4IGbEeuPkZNKCcfHxw" name="userTypes" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <qualifier xmi:id="_AZRD4oGbEeuPkZNKCcfHxw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZRD4YGbEeuPkZNKCcfHxw" value="new LinkedHashMap&lt;Integer, String>()"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3b4GbEeuPkZNKCcfHxw" name="UserType" specification="_AQh-oIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZo3cIGbEeuPkZNKCcfHxw" type="_AQhXk4GbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>//this.connection = connection;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3cYGbEeuPkZNKCcfHxw" name="getNumberOfUserTypes" specification="_AQh-pIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZo3coGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>return userTypes.size();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3c4GbEeuPkZNKCcfHxw" name="getUserTypesArray" specification="_AQh-poGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZo3dIGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZo3dYGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>String[] tiposDeUsuario = new String[getNumberOfUserTypes()];&#xD;
		Collection&lt;String> tipos = userTypes.values();&#xD;
		tiposDeUsuario = tipos.toArray(tiposDeUsuario);&#xD;
		return tiposDeUsuario;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3doGbEeuPkZNKCcfHxw" name="getUserTypeId" specification="_AQh-qoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZo3d4GbEeuPkZNKCcfHxw" name="userType">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZo3eIGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>for (Integer key : userTypes.keySet()) {&#xD;
			if (userType.equals(userTypes.get(key))) {&#xD;
				return key;&#xD;
			}&#xD;
		}&#xD;
		//El tipo de usuario no existe&#xD;
		return -1;	&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZpeYIGbEeuPkZNKCcfHxw" name="getUserType" specification="_AQh-rYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZpeYYGbEeuPkZNKCcfHxw" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZpeYoGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>if (userTypes.containsKey(key)) {&#xD;
			return userTypes.get(key);&#xD;
		} else {&#xD;
			return null;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZpeY4GbEeuPkZNKCcfHxw" name="loadData" specification="_AYyiwYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZpeZIGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>Statement statement = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT * FROM user_type;&quot;;&#xD;
		try {&#xD;
			statement = conn.createStatement();&#xD;
			results = PersistenceManager.getResultSet(statement, sql);&#xD;
			while(results.next()) {&#xD;
				int id = results.getInt(1);&#xD;
				String userType = results.getString(2);&#xD;
				userTypes.put(id, userType);&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		} finally {&#xD;
			PersistenceManager.closeResultSet(results);&#xD;
			PersistenceManager.closeStatement(statement);&#xD;
		}&#xD;
&#xD;
		&#xD;
		//Debug&#xD;
		System.out.println(&quot;Tipos de usuario cargados correctamente&quot;);&#xD;
		System.out.print(userTypes.entrySet());&#xD;
		System.out.println();&#xD;
//		System.out.println(&quot;TIPOS DE USUARIO: &quot;);&#xD;
//		for (int i = 0; i &lt; getNumberOfUserTypes(); i++) {&#xD;
//			System.out.print(getUserTypes()[i] + &quot;, &quot;);&#xD;
//		}&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQh-oIGbEeuPkZNKCcfHxw" name="UserType" method="_AZo3b4GbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AQh-oYGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AQh-ooGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AQh-o4GbEeuPkZNKCcfHxw" type="_AQhXk4GbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AQh-pIGbEeuPkZNKCcfHxw" name="getNumberOfUserTypes" method="_AZo3cYGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZz2eoGbEeuPkZNKCcfHxw">
                <body>Devuelve el número de tipos de usuario almacenados en la base de datos&#xD;
	 * @return Número de tipos de usuarios</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQh-pYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQh-poGbEeuPkZNKCcfHxw" name="getUserTypesArray" method="_AZo3c4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZz2e4GbEeuPkZNKCcfHxw">
                <body>Devuelve un array con el nombre de los diferentes tipos de usuarios&#xD;
	 * @return Tipos de usuarios</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQh-p4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AQh-qIGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQh-qoGbEeuPkZNKCcfHxw" name="getUserTypeId" method="_AZo3doGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZz2fIGbEeuPkZNKCcfHxw">
                <body>Retorna el id del tipo de usuario pasado por parámetro&#xD;
	 * @param userType tipo de usuario del que queremos saber su id&#xD;
	 * @return id del tipo de usuario (-1 si no existe)</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQh-q4GbEeuPkZNKCcfHxw" name="userType">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQh-rIGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQh-rYGbEeuPkZNKCcfHxw" name="getUserType" method="_AZpeYIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZz2fYGbEeuPkZNKCcfHxw">
                <body>Retorna el tipo de usuario que corresponde a la clave pasada por parámetro&#xD;
	 * @param key&#xD;
	 * @return tipo de usuario o null si la clave no existe</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQh-roGbEeuPkZNKCcfHxw" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQh-r4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AYyiwYGbEeuPkZNKCcfHxw" name="loadData" method="_AZpeY4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZz2foGbEeuPkZNKCcfHxw">
                <body>Conecta con la base de datos y almacena cada tipo de usuario con su clave&#xD;
	 * en userTypes</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYyiwoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_AQilsIGbEeuPkZNKCcfHxw" name="TypesStatesContainer">
            <ownedAttribute xmi:id="_AZRD44GbEeuPkZNKCcfHxw" name="evState" isStatic="true" type="_AQpTYIGbEeuPkZNKCcfHxw" association="_AZ_cqoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZRD6YGbEeuPkZNKCcfHxw" name="evType" isStatic="true" type="_AQoFQIGbEeuPkZNKCcfHxw" association="_AZ_crYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZRq84GbEeuPkZNKCcfHxw" name="uType" visibility="private" isStatic="true" type="_AQhXk4GbEeuPkZNKCcfHxw" association="_AaADsYGbEeuPkZNKCcfHxw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZpebYGbEeuPkZNKCcfHxw" name="TypesStatesContainer" specification="_AYK3s4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZpeboGbEeuPkZNKCcfHxw" name="evState" type="_AQpTYIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZpeb4GbEeuPkZNKCcfHxw" name="evType" type="_AQoFQIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZpecIGbEeuPkZNKCcfHxw" name="uType" type="_AQhXk4GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZpecYGbEeuPkZNKCcfHxw" type="_AQilsIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>TypesStatesContainer.evState = evState;&#xD;
		TypesStatesContainer.evType = evType;&#xD;
		TypesStatesContainer.uType = uType;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZpecoGbEeuPkZNKCcfHxw" name="getuType" specification="_AQilsYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZpec4GbEeuPkZNKCcfHxw" type="_AQhXk4GbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>return uType;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZpedIGbEeuPkZNKCcfHxw" name="setuType" specification="_AYLewoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZpedYGbEeuPkZNKCcfHxw" name="uType" type="_AQhXk4GbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>TypesStatesContainer.uType = uType;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQilsYGbEeuPkZNKCcfHxw" name="getuType" isStatic="true" method="_AZpecoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYLewYGbEeuPkZNKCcfHxw" type="_AQhXk4GbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYK3s4GbEeuPkZNKCcfHxw" name="TypesStatesContainer" method="_AZpebYGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AYK3t4GbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AYK3uIGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AYK3tIGbEeuPkZNKCcfHxw" name="evState" type="_AQpTYIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYK3tYGbEeuPkZNKCcfHxw" name="evType" type="_AQoFQIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYK3toGbEeuPkZNKCcfHxw" name="uType" type="_AQhXk4GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYLewIGbEeuPkZNKCcfHxw" type="_AQilsIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYLewoGbEeuPkZNKCcfHxw" name="setuType" isStatic="true" method="_AZpedIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYLew4GbEeuPkZNKCcfHxw" name="uType" type="_AQhXk4GbEeuPkZNKCcfHxw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_AQoFQIGbEeuPkZNKCcfHxw" name="EventType">
            <ownedAttribute xmi:id="_AZUHMoGbEeuPkZNKCcfHxw" name="TABLE_NAME" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZUHM4GbEeuPkZNKCcfHxw" value="&quot;event_type&quot;"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZUHNIGbEeuPkZNKCcfHxw" name="eventTypes" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <qualifier xmi:id="_AZUHNoGbEeuPkZNKCcfHxw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZUHNYGbEeuPkZNKCcfHxw" value="new LinkedHashMap&lt;Integer, String>()"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqFioGbEeuPkZNKCcfHxw" name="EventType" specification="_AQoFQYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqFi4GbEeuPkZNKCcfHxw" type="_AQoFQIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>//this.connection = connection;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqFjIGbEeuPkZNKCcfHxw" name="getNumberOfEventTypes" specification="_AQoFRYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqFjYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>return eventTypes.size();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqFjoGbEeuPkZNKCcfHxw" name="getEventTypesArray" specification="_AQoFR4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqFj4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZqFkIGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>String[] tiposDeEvento = new String[getNumberOfEventTypes()];&#xD;
		Collection&lt;String> tipos = eventTypes.values();&#xD;
		tiposDeEvento = tipos.toArray(tiposDeEvento);&#xD;
		return tiposDeEvento;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqFkYGbEeuPkZNKCcfHxw" name="getEventTypeId" specification="_AQoFS4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqFkoGbEeuPkZNKCcfHxw" name="eventType">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZqFk4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>for (Integer key : eventTypes.keySet()) {&#xD;
			if (eventType.equals(eventTypes.get(key))) {&#xD;
				return key;&#xD;
			}&#xD;
		}&#xD;
		//El tipo de evento no existe&#xD;
		return -1;	&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqFlIGbEeuPkZNKCcfHxw" name="getEventType" specification="_AQosUIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqFlYGbEeuPkZNKCcfHxw" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZqFloGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>if (eventTypes.containsKey(key)) {&#xD;
			return eventTypes.get(key);&#xD;
		} else {&#xD;
			return null;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqsgIGbEeuPkZNKCcfHxw" name="loadData" specification="_AY1mFoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqsgYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>Statement statement = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT * FROM event_type;&quot;;&#xD;
		try {&#xD;
			statement = conn.createStatement();&#xD;
			results = PersistenceManager.getResultSet(statement, sql);&#xD;
			while(results.next()) {&#xD;
				int id = results.getInt(1);&#xD;
				String eventType = results.getString(2);&#xD;
				eventTypes.put(id, eventType);&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		} finally {&#xD;
			PersistenceManager.closeResultSet(results);&#xD;
			PersistenceManager.closeStatement(statement);&#xD;
		}&#xD;
		&#xD;
		&#xD;
		//Debug&#xD;
		System.out.println(&quot;Tipos de eventos cargados correctamente&quot;);&#xD;
		System.out.print(eventTypes.entrySet());&#xD;
		System.out.println();&#xD;
//		System.out.println(&quot;TIPOS DE USUARIO: &quot;);&#xD;
//		for (int i = 0; i &lt; getNumberOfUserTypes(); i++) {&#xD;
//			System.out.print(getUserTypes()[i] + &quot;, &quot;);&#xD;
//		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqsgoGbEeuPkZNKCcfHxw" name="saveEventTypeToDB" specification="_AY2NIIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqsg4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZqshIGbEeuPkZNKCcfHxw" name="descripcion">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZqshYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		String sql = &quot;INSERT INTO event_type (descripcion) &quot;&#xD;
				+ &quot;VALUES (?);&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setString(1, descripcion);&#xD;
			pstm.executeUpdate();&#xD;
			return true;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		} finally {&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqshoGbEeuPkZNKCcfHxw" name="addNewEventType" specification="_AY2NJIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqsh4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZqsiIGbEeuPkZNKCcfHxw" name="descripcion">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZqsiYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (saveEventTypeToDB(conn, descripcion)) {&#xD;
			int id = PersistenceManager.getLastElementIdFromDB(conn, TABLE_NAME);&#xD;
			eventTypes.put(id, descripcion);&#xD;
			return true;&#xD;
		} else {&#xD;
			return false;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQoFQYGbEeuPkZNKCcfHxw" name="EventType" method="_AZqFioGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AQoFQoGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AQoFQ4GbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AQoFRIGbEeuPkZNKCcfHxw" type="_AQoFQIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AQoFRYGbEeuPkZNKCcfHxw" name="getNumberOfEventTypes" method="_AZqFjIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1ElYGbEeuPkZNKCcfHxw">
                <body>Devuelve el número de tipos de evento almacenados en la base de datos&#xD;
	 * @return Número de tipos de eventos</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQoFRoGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQoFR4GbEeuPkZNKCcfHxw" name="getEventTypesArray" method="_AZqFjoGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1EloGbEeuPkZNKCcfHxw">
                <body>Devuelve un array con el nombre de los diferentes tipos de eventos&#xD;
	 * @return Tipos de eventos</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQoFSIGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AQoFSYGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQoFS4GbEeuPkZNKCcfHxw" name="getEventTypeId" method="_AZqFkYGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1El4GbEeuPkZNKCcfHxw">
                <body>Retorna el id del tipo de evento pasado por parámetro&#xD;
	 * @param eventType tipo de evento del que queremos saber su id&#xD;
	 * @return id del tipo de evento (-1 si no existe)</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQoFTIGbEeuPkZNKCcfHxw" name="eventType">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQoFTYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQosUIGbEeuPkZNKCcfHxw" name="getEventType" method="_AZqFlIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1EmIGbEeuPkZNKCcfHxw">
                <body>Retorna el tipo de evento que corresponde a la clave pasada por parámetro&#xD;
	 * @param key&#xD;
	 * @return tipo de evento o null si la clave no existe</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQosUYGbEeuPkZNKCcfHxw" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQosUoGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AY1mFoGbEeuPkZNKCcfHxw" name="loadData" method="_AZqsgIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1EmYGbEeuPkZNKCcfHxw">
                <body>Conecta con la base de datos y almacena cada tipo de evento con su clave&#xD;
	 * en eventTypes&#xD;
	 * @param conn conexión con la base de datos</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY1mF4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AY2NIIGbEeuPkZNKCcfHxw" name="saveEventTypeToDB" method="_AZqsgoGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1EmoGbEeuPkZNKCcfHxw">
                <body>Inserta un nuevo tipo de evento en la tabla event_type&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param descripcion descripción del tipo de evento&#xD;
	 * @return true si la insercion se hizo con éxito, false si no</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY2NIYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AY2NIoGbEeuPkZNKCcfHxw" name="descripcion">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AY2NI4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AY2NJIGbEeuPkZNKCcfHxw" name="addNewEventType" method="_AZqshoGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1Em4GbEeuPkZNKCcfHxw">
                <body>Añade un nuevo tipo de evento a la lista eventTypes&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param descripcion descripción del nuevo tipo de evento&#xD;
	 * @return true si la insercion se hizo con éxito, false si no</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY2NJYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AY2NJoGbEeuPkZNKCcfHxw" name="descripcion">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AY2NJ4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_AQpTYIGbEeuPkZNKCcfHxw" name="EventState">
            <ownedAttribute xmi:id="_AZUuQIGbEeuPkZNKCcfHxw" name="eventStates" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <qualifier xmi:id="_AZUuQoGbEeuPkZNKCcfHxw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZUuQYGbEeuPkZNKCcfHxw" value="new LinkedHashMap&lt;Integer, String>()"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqskIGbEeuPkZNKCcfHxw" name="EventState" specification="_AQpTYYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqskYGbEeuPkZNKCcfHxw" type="_AQpTYIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>//this.connection = connection;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqskoGbEeuPkZNKCcfHxw" name="getNumberOfEventStates" specification="_AQp6coGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqsk4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>return eventStates.size();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqslIGbEeuPkZNKCcfHxw" name="getEventStatesArray" specification="_AQp6dIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqslYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZqsloGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>String[] estadosDeEvento = new String[getNumberOfEventStates()];&#xD;
		Collection&lt;String> estados = eventStates.values();&#xD;
		estadosDeEvento = estados.toArray(estadosDeEvento);&#xD;
		return estadosDeEvento;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqsl4GbEeuPkZNKCcfHxw" name="getEventStateId" specification="_AQp6eIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqsmIGbEeuPkZNKCcfHxw" name="eventState">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZqsmYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>for (Integer key : eventStates.keySet()) {&#xD;
			if (eventState.equals(eventStates.get(key))) {&#xD;
				return key;&#xD;
			}&#xD;
		}&#xD;
		//El estado de evento no existe&#xD;
		return -1;	&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqsmoGbEeuPkZNKCcfHxw" name="getEventState" specification="_AQp6e4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqsm4GbEeuPkZNKCcfHxw" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZqsnIGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>if (eventStates.containsKey(key)) {&#xD;
			return eventStates.get(key);&#xD;
		} else {&#xD;
			return null;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZqsnYGbEeuPkZNKCcfHxw" name="loadData" specification="_AY3bQoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZqsnoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>Statement statement = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT * FROM event_state;&quot;;&#xD;
		try {&#xD;
			statement = conn.createStatement();&#xD;
			results = PersistenceManager.getResultSet(statement, sql);&#xD;
			while(results.next()) {&#xD;
				int id = results.getInt(1);&#xD;
				String eventType = results.getString(2);&#xD;
				eventStates.put(id, eventType);&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		} finally {&#xD;
			PersistenceManager.closeResultSet(results);&#xD;
			PersistenceManager.closeStatement(statement);&#xD;
		}&#xD;
		&#xD;
		&#xD;
		//Debug&#xD;
		System.out.println(&quot;Estados de eventos cargados correctamente&quot;);&#xD;
		System.out.print(eventStates.entrySet());&#xD;
		System.out.println();&#xD;
//		System.out.println(&quot;TIPOS DE USUARIO: &quot;);&#xD;
//		for (int i = 0; i &lt; getNumberOfUserTypes(); i++) {&#xD;
//			System.out.print(getUserTypes()[i] + &quot;, &quot;);&#xD;
//		}&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQpTYYGbEeuPkZNKCcfHxw" name="EventState" method="_AZqskIGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AQpTYoGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AQp6cIGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AQp6cYGbEeuPkZNKCcfHxw" type="_AQpTYIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AQp6coGbEeuPkZNKCcfHxw" name="getNumberOfEventStates" method="_AZqskoGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1EnIGbEeuPkZNKCcfHxw">
                <body>Devuelve el número de estados de evento almacenados en la base de datos&#xD;
	 * @return Número de estados de eventos</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQp6c4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQp6dIGbEeuPkZNKCcfHxw" name="getEventStatesArray" method="_AZqslIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1EnYGbEeuPkZNKCcfHxw">
                <body>Devuelve un array con el nombre de los diferentes estados de eventos&#xD;
	 * @return Estados de eventos</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQp6dYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AQp6doGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQp6eIGbEeuPkZNKCcfHxw" name="getEventStateId" method="_AZqsl4GbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1EnoGbEeuPkZNKCcfHxw">
                <body>Retorna el id del estado de evento pasado por parámetro&#xD;
	 * @param eventState estado de evento del que queremos saber su id&#xD;
	 * @return id del estado de evento (-1 si no existe)</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQp6eYGbEeuPkZNKCcfHxw" name="eventState">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQp6eoGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AQp6e4GbEeuPkZNKCcfHxw" name="getEventState" method="_AZqsmoGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1En4GbEeuPkZNKCcfHxw">
                <body>Retorna el estado de evento que corresponde a la clave pasada por parámetro&#xD;
	 * @param key&#xD;
	 * @return estado de evento o null si la clave no existe</body>
              </ownedComment>
              <ownedParameter xmi:id="_AQp6fIGbEeuPkZNKCcfHxw" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQp6fYGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AY3bQoGbEeuPkZNKCcfHxw" name="loadData" method="_AZqsnYGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1EoIGbEeuPkZNKCcfHxw">
                <body>Conecta con la base de datos y almacena cada estado de evento con su clave&#xD;
	 * en eventStates</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY3bQ4GbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ_cqoGbEeuPkZNKCcfHxw" name="" memberEnd="_AZ_cq4GbEeuPkZNKCcfHxw _AZRD44GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ_cq4GbEeuPkZNKCcfHxw" name="" type="_AQilsIGbEeuPkZNKCcfHxw" association="_AZ_cqoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ_crYGbEeuPkZNKCcfHxw" name="" memberEnd="_AZ_croGbEeuPkZNKCcfHxw _AZRD6YGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ_croGbEeuPkZNKCcfHxw" name="" type="_AQilsIGbEeuPkZNKCcfHxw" association="_AZ_crYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AaADsYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaADsoGbEeuPkZNKCcfHxw _AZRq84GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AaADsoGbEeuPkZNKCcfHxw" name="" type="_AQilsIGbEeuPkZNKCcfHxw" association="_AaADsYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_APRaYIGbEeuPkZNKCcfHxw" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_AQb4AIGbEeuPkZNKCcfHxw" name="Event">
            <ownedAttribute xmi:id="_AZPOuIGbEeuPkZNKCcfHxw" name="TABLE_NAME" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZPOuYGbEeuPkZNKCcfHxw" value="&quot;event&quot;"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZPOuoGbEeuPkZNKCcfHxw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZP1wIGbEeuPkZNKCcfHxw" name="bUnit" visibility="private" type="_ARExMIGbEeuPkZNKCcfHxw" association="_AZ-1l4GbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZP1woGbEeuPkZNKCcfHxw" name="area" type="_AQVKWYGbEeuPkZNKCcfHxw" association="_AZzPaYGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZP1w4GbEeuPkZNKCcfHxw" name="eventType">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZP1xIGbEeuPkZNKCcfHxw" name="titulo">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZP1xYGbEeuPkZNKCcfHxw" name="descripcion">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZP1xoGbEeuPkZNKCcfHxw" name="eventState">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZP1x4GbEeuPkZNKCcfHxw" name="updates" type="_AQdGIIGbEeuPkZNKCcfHxw" isOrdered="true" association="_AZ-1moGbEeuPkZNKCcfHxw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZP1yIGbEeuPkZNKCcfHxw" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZP1yYGbEeuPkZNKCcfHxw" value="new ArrayList&lt;EventUpdate>()"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpV4GbEeuPkZNKCcfHxw" name="Event" specification="_AYHNUIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZnpWIGbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnpWYGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnpWoGbEeuPkZNKCcfHxw" name="area" type="_AQVKWYGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZnpW4GbEeuPkZNKCcfHxw" name="eventType">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnpXIGbEeuPkZNKCcfHxw" name="titulo">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnpXYGbEeuPkZNKCcfHxw" name="descripcion">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnpXoGbEeuPkZNKCcfHxw" name="eventState">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZnpX4GbEeuPkZNKCcfHxw" type="_AQb4AIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>this.id = id;&#xD;
		this.bUnit = bUnit;&#xD;
		this.area = area;&#xD;
		this.eventType = eventType;&#xD;
		this.titulo = titulo;&#xD;
		this.descripcion = descripcion;&#xD;
		this.eventState = eventState;&#xD;
		this.updates = new ArrayList&lt;EventUpdate>();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZoQQIGbEeuPkZNKCcfHxw" name="saveEventToDB" specification="_AYwGgIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZoQQYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQQoGbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQQ4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		String sql = &quot;INSERT INTO \&quot;event\&quot; (b_unit_id, area_id, event_type_id, titulo, &quot;&#xD;
				+ &quot;descripcion, event_state_id) &quot;&#xD;
				+ &quot;VALUES (?, ?, ?, ?, ?, ?);&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setInt(1, event.getbUnit().getId());&#xD;
			pstm.setInt(2, event.getArea().getId());&#xD;
			pstm.setInt(3, TypesStatesContainer.getEvType().getEventTypeId(event.getEventType()));&#xD;
			pstm.setString(4, event.getTitulo());&#xD;
			pstm.setString(5, event.getDescripcion());&#xD;
			pstm.setInt(6, TypesStatesContainer.getEvState().getEventStateId(event.getEventState()));&#xD;
			pstm.executeUpdate();&#xD;
			return true;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		} finally {&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZoQRIGbEeuPkZNKCcfHxw" name="addNewEvent" specification="_AYwGhIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZoQRYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQRoGbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQR4GbEeuPkZNKCcfHxw" type="_AQb4AIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>if (saveEventToDB(conn, event)) {&#xD;
			int id = PersistenceManager.getLastElementIdFromDB(conn, TABLE_NAME);&#xD;
			event.setId(id);&#xD;
			return event;&#xD;
		}&#xD;
		return null;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZoQSIGbEeuPkZNKCcfHxw" name="updateEventToDB" specification="_AYwGiIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZoQSYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQSoGbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQS4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		String sql = &quot;UPDATE \&quot;event\&quot; &quot;&#xD;
				+ &quot;SET &quot;&#xD;
				+ &quot;b_unit_id = ?, &quot;&#xD;
				+ &quot;area_id = ?, &quot;&#xD;
				+ &quot;event_type_id = ?, &quot;&#xD;
				+ &quot;titulo = ?, &quot;&#xD;
				+ &quot;descripcion = ?, &quot;&#xD;
				+ &quot;event_state_id = ? &quot;&#xD;
				+ &quot;WHERE id = ?;&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setInt(1, event.getbUnit().getId());&#xD;
			pstm.setInt(2, event.getArea().getId());&#xD;
			pstm.setInt(3, TypesStatesContainer.getEvType().getEventTypeId(event.getEventType()));&#xD;
			pstm.setString(4, event.getTitulo());&#xD;
			pstm.setString(5, event.getDescripcion());&#xD;
			pstm.setInt(6, TypesStatesContainer.getEvState().getEventStateId(event.getEventState()));&#xD;
			pstm.setInt(7, event.getId());&#xD;
			pstm.executeUpdate();&#xD;
			return true;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		} finally {&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZoQTIGbEeuPkZNKCcfHxw" name="getEventsFromDB" specification="_AYwtkIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZoQTYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQToGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQT4GbEeuPkZNKCcfHxw" type="_AQb4AIGbEeuPkZNKCcfHxw" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZoQUIGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;Event> eventList = new ArrayList&lt;Event>();&#xD;
		Event event = null;&#xD;
		PreparedStatement pstm = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT id, area_id, event_type_id, titulo, descripcion, event_state_id &quot;&#xD;
				+ &quot;FROM \&quot;event\&quot; &quot;&#xD;
				+ &quot;WHERE b_unit_id = ?;&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setInt(1, bUnit.getId());&#xD;
			results = pstm.executeQuery();&#xD;
			while (results.next()) {&#xD;
				event = new Event();&#xD;
				event.setId(results.getInt(1));&#xD;
				event.setbUnit(bUnit);&#xD;
				Area area = new Area().getAreaById(bUnit, results.getInt(2));&#xD;
				event.setArea(area);&#xD;
				event.setEventType(TypesStatesContainer.getEvType().getEventType(results.getInt(3)));&#xD;
				event.setTitulo(results.getString(4));&#xD;
				event.setDescripcion(results.getString(5));&#xD;
				event.setEventState(TypesStatesContainer.getEvState().getEventState(results.getInt(6)));&#xD;
				eventList.add(event);&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return null;&#xD;
		} finally {&#xD;
			PersistenceManager.closeResultSet(results);&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
		return eventList;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZoQUYGbEeuPkZNKCcfHxw" name="getEventById" specification="_AYHNW4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZoQUoGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQU4GbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZoQVIGbEeuPkZNKCcfHxw" type="_AQb4AIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>List&lt;Event> eventList = bUnit.getEvents();&#xD;
		for (Event event: eventList) {&#xD;
			if (event.getId() == id) {&#xD;
				return event;&#xD;
			}&#xD;
		}	&#xD;
		return null;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZoQVYGbEeuPkZNKCcfHxw" name="getbUnit" specification="_AQcfEIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZoQVoGbEeuPkZNKCcfHxw" type="_ARExMIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>return bUnit;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZoQV4GbEeuPkZNKCcfHxw" name="setbUnit" specification="_AYH0YIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZoQWIGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>this.bUnit = bUnit;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQb4AYGbEeuPkZNKCcfHxw" name="Event">
              <eAnnotations xmi:id="_AQb4AoGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AQb4A4GbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AQb4BYGbEeuPkZNKCcfHxw" type="_AQb4AIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AQcfEIGbEeuPkZNKCcfHxw" name="getbUnit" method="_AZoQVYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYHNX4GbEeuPkZNKCcfHxw" type="_ARExMIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYHNUIGbEeuPkZNKCcfHxw" name="Event" method="_AZnpV4GbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AYHNWIGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AYHNWYGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AYHNUYGbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYHNUoGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYHNU4GbEeuPkZNKCcfHxw" name="area" type="_AQVKWYGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYHNVIGbEeuPkZNKCcfHxw" name="eventType">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYHNVYGbEeuPkZNKCcfHxw" name="titulo">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYHNVoGbEeuPkZNKCcfHxw" name="descripcion">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYHNV4GbEeuPkZNKCcfHxw" name="eventState">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYHNWoGbEeuPkZNKCcfHxw" type="_AQb4AIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYHNW4GbEeuPkZNKCcfHxw" name="getEventById" method="_AZoQUYGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZzPb4GbEeuPkZNKCcfHxw">
                <body>Devuelve el usuario al que pertenece el id entrado por parámetro&#xD;
	 * @param bUnit BusinessUnit del que comprobamos la lista de usuarios&#xD;
	 * @param id id del usuario buscado&#xD;
	 * @return usuario con el id entrado por parámetro (null si no existe)</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYHNXIGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYHNXYGbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYHNXoGbEeuPkZNKCcfHxw" type="_AQb4AIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYH0YIGbEeuPkZNKCcfHxw" name="setbUnit" method="_AZoQV4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYH0YYGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYwGgIGbEeuPkZNKCcfHxw" name="saveEventToDB" method="_AZoQQIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZzPa4GbEeuPkZNKCcfHxw">
                <body>Inserta un nuevo evento en la base de datos&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param event usuario a insertar&#xD;
	 * @return true si la insercion se hizo con éxito, false si no</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYwGgYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYwGgoGbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYwGg4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AYwGhIGbEeuPkZNKCcfHxw" name="addNewEvent" method="_AZoQRIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZzPbIGbEeuPkZNKCcfHxw">
                <body>Si la inserción de un nuevo evento en la base de datos tiene éxito,&#xD;
	 * recupera el id asignado en el registro de la base de datos y lo almacena&#xD;
	 * en el id del objeto Event&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param event objeto a insertar en la base de datos&#xD;
	 * @returnobjeto Event con el id asignado</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYwGhYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYwGhoGbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYwGh4GbEeuPkZNKCcfHxw" type="_AQb4AIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYwGiIGbEeuPkZNKCcfHxw" name="updateEventToDB" method="_AZoQSIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZzPbYGbEeuPkZNKCcfHxw">
                <body>Actualiza los valores de un evento que ya existe en la base de datos&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param event evento que contiene los datos que actualizan al evento ya existente&#xD;
	 * @return true si la actualización se hizo con éxito, false si no</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYwGiYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYwGioGbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYwGi4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AYwtkIGbEeuPkZNKCcfHxw" name="getEventsFromDB" method="_AZoQTIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZzPboGbEeuPkZNKCcfHxw">
                <body>Obtiene la lista de eventos del objeto BusinessUnit pasado por parámetro&#xD;
	 * @param conn conexión con la base de datos&#xD;
	 * @param bUnit objeto del que queremos recuperar sus eventos&#xD;
	 * @return lista de eventos del objeto almacenados en la base de datos</body>
              </ownedComment>
              <ownedParameter xmi:id="_AYwtkYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYwtkoGbEeuPkZNKCcfHxw" name="bUnit" type="_ARExMIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYwtk4GbEeuPkZNKCcfHxw" type="_AQb4AIGbEeuPkZNKCcfHxw" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AYwtlIGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_AQdGIIGbEeuPkZNKCcfHxw" name="EventUpdate">
            <ownedAttribute xmi:id="_AZP1yoGbEeuPkZNKCcfHxw" name="TABLE_NAME" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZP1y4GbEeuPkZNKCcfHxw" value="&quot;event_update&quot;"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZP1zIGbEeuPkZNKCcfHxw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZP1zYGbEeuPkZNKCcfHxw" value="0"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZQc0IGbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw" association="_AZzPcIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZQc0YGbEeuPkZNKCcfHxw" name="fechaHora" type="_AYH0YoGbEeuPkZNKCcfHxw" association="_AZzPcoGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZQc0oGbEeuPkZNKCcfHxw" name="descripcion">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZQc04GbEeuPkZNKCcfHxw" name="autor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_AZQc1IGbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw" association="_AZz2cIGbEeuPkZNKCcfHxw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZoQWYGbEeuPkZNKCcfHxw" name="EventUpdate" specification="_AYwtlYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZoQWoGbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZoQW4GbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQXIGbEeuPkZNKCcfHxw" name="fechaHora" type="_AYH0YoGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQXYGbEeuPkZNKCcfHxw" name="descripcion">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZoQXoGbEeuPkZNKCcfHxw" name="autor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZoQX4GbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQYIGbEeuPkZNKCcfHxw" type="_AQdGIIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>this.id = id;&#xD;
		this.event = event;&#xD;
		this.fechaHora = fechaHora;&#xD;
		this.descripcion = descripcion;&#xD;
		this.autor = autor;&#xD;
		this.user = user;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZoQYYGbEeuPkZNKCcfHxw" name="saveEventUpdateToDB" specification="_AYxUoIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZoQYoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQY4GbEeuPkZNKCcfHxw" name="eUpdate" type="_AQdGIIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQZIGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		String sql = &quot;INSERT INTO event_update (event_id, fecha_hora, descripcion, autor, user_id) &quot;&#xD;
				+ &quot;VALUES (?, ?, ?, ?, ?);&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setInt(1, 	eUpdate.getEvent().getId());&#xD;
			pstm.setTimestamp(2, ToolBox.getTimestampNow());&#xD;
			pstm.setString(3, eUpdate.getDescripcion());&#xD;
			pstm.setString(4, eUpdate.getAutor());&#xD;
			pstm.setInt(5, eUpdate.getUser().getId());&#xD;
			pstm.executeUpdate();&#xD;
			return true;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		} finally {&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZoQZYGbEeuPkZNKCcfHxw" name="addNewEventUpdate" specification="_AYxUpIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZoQZoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQZ4GbEeuPkZNKCcfHxw" name="eUpdate" type="_AQdGIIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQaIGbEeuPkZNKCcfHxw" type="_AQdGIIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>if (saveEventUpdateToDB (conn, eUpdate)) {&#xD;
			int id = PersistenceManager.getLastElementIdFromDB(conn, TABLE_NAME);&#xD;
			eUpdate.setId(id);&#xD;
			return eUpdate;&#xD;
		}&#xD;
		return null;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZoQaYGbEeuPkZNKCcfHxw" name="updateEventUpdateToDB" specification="_AYxUqIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZoQaoGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQa4GbEeuPkZNKCcfHxw" name="eUpdate" type="_AQdGIIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQbIGbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>PreparedStatement pstm = null;&#xD;
		String sql = &quot;UPDATE event_update &quot;&#xD;
				+ &quot;SET &quot;&#xD;
				+ &quot;event_id = ?, &quot;&#xD;
				+ &quot;fecha_hora = ?, &quot;&#xD;
				+ &quot;descripcion = ?, &quot;&#xD;
				+ &quot;autor = ?, &quot;&#xD;
				+ &quot;user_id = ? &quot;&#xD;
				+ &quot;WHERE id = ?;&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setInt(1, eUpdate.getEvent().getId());&#xD;
			pstm.setTimestamp(2, eUpdate.getFechaHora());&#xD;
			pstm.setString(3, eUpdate.getDescripcion());&#xD;
			pstm.setString(4, eUpdate.getAutor());&#xD;
			pstm.setInt(5, eUpdate.getUser().getId());&#xD;
			pstm.setInt(6, eUpdate.getId());&#xD;
			pstm.executeUpdate();&#xD;
			return true;&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		} finally {&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZoQbYGbEeuPkZNKCcfHxw" name="getEventUpdatesFromDB" specification="_AYxUrIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZoQboGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQb4GbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQcIGbEeuPkZNKCcfHxw" type="_AQdGIIGbEeuPkZNKCcfHxw" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZoQcYGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;EventUpdate> updatesList = new ArrayList&lt;EventUpdate>();&#xD;
		EventUpdate eUpdate = null;&#xD;
		PreparedStatement pstm = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT id, fecha_hora, descripcion, autor, user_id &quot;&#xD;
				+ &quot;FROM event_update &quot;&#xD;
				+ &quot;WHERE event_id = ?&quot;;&#xD;
		try {&#xD;
			pstm = conn.prepareStatement(sql);&#xD;
			pstm.setInt(1, event.getId());&#xD;
			results = pstm.executeQuery();&#xD;
			while (results.next()) {&#xD;
				eUpdate = new EventUpdate();&#xD;
				eUpdate.setId(results.getInt(1));&#xD;
				eUpdate.setEvent(event);&#xD;
				eUpdate.setFechaHora(results.getTimestamp(2));&#xD;
				eUpdate.setDescripcion(results.getString(3));&#xD;
				eUpdate.setAutor(results.getString(4));&#xD;
				BusinessUnit bUnit = event.getbUnit();&#xD;
				User user = new User().getUserById(bUnit, results.getInt(5));&#xD;
				eUpdate.setUser(user);&#xD;
				updatesList.add(eUpdate);&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return null;&#xD;
		} finally {&#xD;
			PersistenceManager.closeResultSet(results);&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
		return updatesList;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZoQcoGbEeuPkZNKCcfHxw" name="getEventUpdatesByUserId" specification="_AYIbdYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZoQc4GbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQdIGbEeuPkZNKCcfHxw" name="userId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZoQdYGbEeuPkZNKCcfHxw" type="_AQdGIIGbEeuPkZNKCcfHxw" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZoQdoGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;EventUpdate> updatesList = event.getUpdates();&#xD;
		List&lt;EventUpdate> returnList = new ArrayList&lt;EventUpdate>();&#xD;
		for (EventUpdate eUpdate: updatesList) {&#xD;
			if (eUpdate.getUser().getId() == userId) {&#xD;
				returnList.add(eUpdate);&#xD;
			}&#xD;
		}&#xD;
		return returnList;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZoQd4GbEeuPkZNKCcfHxw" name="getEventUpdatesByUserAlias" specification="_AYJCg4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZoQeIGbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZoQeYGbEeuPkZNKCcfHxw" name="userAlias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZoQeoGbEeuPkZNKCcfHxw" type="_AQdGIIGbEeuPkZNKCcfHxw" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AZoQe4GbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;EventUpdate> updatesList = event.getUpdates();&#xD;
		List&lt;EventUpdate> returnList = new ArrayList&lt;EventUpdate>();&#xD;
		for (EventUpdate eUpdate: updatesList) {&#xD;
			if (eUpdate.getUser().getUserAlias().equals(userAlias)) {&#xD;
				returnList.add(eUpdate);&#xD;
			}&#xD;
		}&#xD;
		return returnList;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3UIGbEeuPkZNKCcfHxw" name="getEventUpdateById" specification="_AYJCiIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZo3UYGbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZo3UoGbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZo3U4GbEeuPkZNKCcfHxw" type="_AQdGIIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>List&lt;EventUpdate> updatesList = event.getUpdates();&#xD;
		for (EventUpdate eUpdate: updatesList) {&#xD;
			if (eUpdate.getId() == id) {&#xD;
				return eUpdate;&#xD;
			}&#xD;
		}&#xD;
		return null;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQdtMIGbEeuPkZNKCcfHxw" name="EventUpdate">
              <eAnnotations xmi:id="_AQdtMYGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AQdtMoGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AQdtNIGbEeuPkZNKCcfHxw" type="_AQdGIIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYIbdYGbEeuPkZNKCcfHxw" name="getEventUpdatesByUserId" method="_AZoQcoGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYIbdoGbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYJCgIGbEeuPkZNKCcfHxw" name="userId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYJCgYGbEeuPkZNKCcfHxw" type="_AQdGIIGbEeuPkZNKCcfHxw" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AYJCgoGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AYJCg4GbEeuPkZNKCcfHxw" name="getEventUpdatesByUserAlias" method="_AZoQd4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYJChIGbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYJChYGbEeuPkZNKCcfHxw" name="userAlias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYJChoGbEeuPkZNKCcfHxw" type="_AQdGIIGbEeuPkZNKCcfHxw" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AYJCh4GbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AYJCiIGbEeuPkZNKCcfHxw" name="getEventUpdateById" method="_AZo3UIGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYJCiYGbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYJCioGbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYJCi4GbEeuPkZNKCcfHxw" type="_AQdGIIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYwtlYGbEeuPkZNKCcfHxw" name="EventUpdate" method="_AZoQWYGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AYwtnIGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AYwtnYGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AYwtloGbEeuPkZNKCcfHxw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYwtl4GbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYwtmIGbEeuPkZNKCcfHxw" name="fechaHora" type="_AYH0YoGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYwtmYGbEeuPkZNKCcfHxw" name="descripcion">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYwtmoGbEeuPkZNKCcfHxw" name="autor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYwtm4GbEeuPkZNKCcfHxw" name="user" type="_ARBt4IGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYwtnoGbEeuPkZNKCcfHxw" type="_AQdGIIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYxUoIGbEeuPkZNKCcfHxw" name="saveEventUpdateToDB" method="_AZoQYYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYxUoYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYxUooGbEeuPkZNKCcfHxw" name="eUpdate" type="_AQdGIIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYxUo4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AYxUpIGbEeuPkZNKCcfHxw" name="addNewEventUpdate" method="_AZoQZYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYxUpYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYxUpoGbEeuPkZNKCcfHxw" name="eUpdate" type="_AQdGIIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYxUp4GbEeuPkZNKCcfHxw" type="_AQdGIIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYxUqIGbEeuPkZNKCcfHxw" name="updateEventUpdateToDB" method="_AZoQaYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYxUqYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYxUqoGbEeuPkZNKCcfHxw" name="eUpdate" type="_AQdGIIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYxUq4GbEeuPkZNKCcfHxw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_AYxUrIGbEeuPkZNKCcfHxw" name="getEventUpdatesFromDB" method="_AZoQbYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AYxUrYGbEeuPkZNKCcfHxw" name="conn" type="_AYCU04GbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYxUroGbEeuPkZNKCcfHxw" name="event" type="_AQb4AIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYxUr4GbEeuPkZNKCcfHxw" type="_AQdGIIGbEeuPkZNKCcfHxw" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AYxUsIGbEeuPkZNKCcfHxw" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZzPaYGbEeuPkZNKCcfHxw" name="" memberEnd="_AZP1woGbEeuPkZNKCcfHxw _AZzPaoGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZzPaoGbEeuPkZNKCcfHxw" name="" type="_AQb4AIGbEeuPkZNKCcfHxw" association="_AZzPaYGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZzPcIGbEeuPkZNKCcfHxw" name="" memberEnd="_AZQc0IGbEeuPkZNKCcfHxw _AZzPcYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZzPcYGbEeuPkZNKCcfHxw" name="" type="_AQdGIIGbEeuPkZNKCcfHxw" association="_AZzPcIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZzPcoGbEeuPkZNKCcfHxw" name="" memberEnd="_AZQc0YGbEeuPkZNKCcfHxw _AZzPc4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZzPc4GbEeuPkZNKCcfHxw" name="" type="_AQdGIIGbEeuPkZNKCcfHxw" association="_AZzPcoGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZz2cIGbEeuPkZNKCcfHxw" name="" memberEnd="_AZQc1IGbEeuPkZNKCcfHxw _AZz2cYGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZz2cYGbEeuPkZNKCcfHxw" name="" type="_AQdGIIGbEeuPkZNKCcfHxw" association="_AZz2cIGbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ-1l4GbEeuPkZNKCcfHxw" name="" memberEnd="_AZ-1mIGbEeuPkZNKCcfHxw _AZP1wIGbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ-1mIGbEeuPkZNKCcfHxw" name="" type="_AQb4AIGbEeuPkZNKCcfHxw" association="_AZ-1l4GbEeuPkZNKCcfHxw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_AZ-1moGbEeuPkZNKCcfHxw" name="" memberEnd="_AZ-1m4GbEeuPkZNKCcfHxw _AZP1x4GbEeuPkZNKCcfHxw">
            <ownedEnd xmi:id="_AZ-1m4GbEeuPkZNKCcfHxw" name="" type="_AQb4AIGbEeuPkZNKCcfHxw" association="_AZ-1moGbEeuPkZNKCcfHxw"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_APSBcIGbEeuPkZNKCcfHxw" name="toolbox">
          <packagedElement xmi:type="uml:Class" xmi:id="_AQtk0IGbEeuPkZNKCcfHxw" name="ToolBox">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZr6oIGbEeuPkZNKCcfHxw" name="ToolBox" specification="_AQuL4IGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZr6oYGbEeuPkZNKCcfHxw" type="_AQtk0IGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>// TODO Auto-generated constructor stub&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZr6ooGbEeuPkZNKCcfHxw" name="getTimestampNow" specification="_AQuL5IGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZr6o4GbEeuPkZNKCcfHxw" type="_AYH0YoGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>Calendar calendar = Calendar.getInstance();&#xD;
		Date dNow = calendar.getTime();&#xD;
		Timestamp tNow = new Timestamp(dNow.getTime());&#xD;
		return tNow;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZr6pIGbEeuPkZNKCcfHxw" name="setBlackForeground" specification="_AY53gYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZr6pYGbEeuPkZNKCcfHxw" name="combobox" type="_AYVPw4GbEeuPkZNKCcfHxw"/>
              <language>java</language>
              <body>combobox.setRenderer(new DefaultListCellRenderer() {&#xD;
		   @Override&#xD;
		   public void paint(Graphics g) {&#xD;
		       setForeground(Color.BLACK);&#xD;
		       super.paint(g);&#xD;
		   };&#xD;
	   });&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQuL4IGbEeuPkZNKCcfHxw" name="ToolBox" method="_AZr6oIGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AQuL4YGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AQuL4oGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AQuL44GbEeuPkZNKCcfHxw" type="_AQtk0IGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AQuL5IGbEeuPkZNKCcfHxw" name="getTimestampNow" isStatic="true" method="_AZr6ooGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1roIGbEeuPkZNKCcfHxw">
                <body>Devuelve la fecha y la hora actuales&#xD;
	 * @return Timestamp con la fecha y la hora actuales</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY53gIGbEeuPkZNKCcfHxw" type="_AYH0YoGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AY53gYGbEeuPkZNKCcfHxw" name="setBlackForeground" isStatic="true" method="_AZr6pIGbEeuPkZNKCcfHxw">
              <ownedComment xmi:id="_AZ1roYGbEeuPkZNKCcfHxw">
                <body>Establece por defecto el color negro como color de la letra del JComboBox pasado por parámetro, incluso&#xD;
	 * en el caso de que el combobox esté deshabilitado&#xD;
	 * @param combobox JComboBox al que le queremos aplicar el formato</body>
              </ownedComment>
              <ownedParameter xmi:id="_AY53goGbEeuPkZNKCcfHxw" name="combobox" type="_AYVPw4GbEeuPkZNKCcfHxw"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_APT2ooGbEeuPkZNKCcfHxw" name="exceptions">
          <packagedElement xmi:type="uml:Class" xmi:id="_AQe7UIGbEeuPkZNKCcfHxw" name="DatabaseError">
            <generalization xmi:id="_AYyiwIGbEeuPkZNKCcfHxw" general="_AYu4YIGbEeuPkZNKCcfHxw"/>
            <ownedAttribute xmi:id="_AZQc1YGbEeuPkZNKCcfHxw" name="TITLE" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZQc1oGbEeuPkZNKCcfHxw" value="&quot;Database error&quot;"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3VIGbEeuPkZNKCcfHxw" name="DatabaseError" specification="_AQe7UYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZo3VYGbEeuPkZNKCcfHxw" type="_AQe7UIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>// TODO Auto-generated constructor stub&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3VoGbEeuPkZNKCcfHxw" name="DatabaseError" specification="_AQe7VYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZo3V4GbEeuPkZNKCcfHxw" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZo3WIGbEeuPkZNKCcfHxw" type="_AQe7UIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>super(message);&#xD;
		JOptionPane.showMessageDialog(null, message, TITLE, JOptionPane.ERROR_MESSAGE);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3WYGbEeuPkZNKCcfHxw" name="DatabaseError" specification="_AYx7soGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZo3WoGbEeuPkZNKCcfHxw" name="cause" type="_AYx7sIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZo3W4GbEeuPkZNKCcfHxw" type="_AQe7UIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>super(cause);&#xD;
		// TODO Auto-generated constructor stub&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3XIGbEeuPkZNKCcfHxw" name="DatabaseError" specification="_AYx7t4GbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZo3XYGbEeuPkZNKCcfHxw" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZo3XoGbEeuPkZNKCcfHxw" name="cause" type="_AYx7sIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZo3X4GbEeuPkZNKCcfHxw" type="_AQe7UIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>super(message, cause);&#xD;
		// TODO Auto-generated constructor stub&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3YIGbEeuPkZNKCcfHxw" name="DatabaseError" specification="_AYx7vYGbEeuPkZNKCcfHxw">
              <ownedParameter xmi:id="_AZo3YYGbEeuPkZNKCcfHxw" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZo3YoGbEeuPkZNKCcfHxw" name="cause" type="_AYx7sIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AZo3Y4GbEeuPkZNKCcfHxw" name="enableSuppression">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZo3ZIGbEeuPkZNKCcfHxw" name="writableStackTrace">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AZo3ZYGbEeuPkZNKCcfHxw" type="_AQe7UIGbEeuPkZNKCcfHxw" direction="return"/>
              <language>java</language>
              <body>super(message, cause, enableSuppression, writableStackTrace);&#xD;
		// TODO Auto-generated constructor stub&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_AQe7UYGbEeuPkZNKCcfHxw" name="DatabaseError" method="_AZo3VIGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AQe7UoGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AQe7U4GbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AQe7VIGbEeuPkZNKCcfHxw" type="_AQe7UIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AQe7VYGbEeuPkZNKCcfHxw" name="DatabaseError" method="_AZo3VoGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AQe7V4GbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AQe7WIGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AQe7VoGbEeuPkZNKCcfHxw" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AQe7WYGbEeuPkZNKCcfHxw" type="_AQe7UIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYx7soGbEeuPkZNKCcfHxw" name="DatabaseError" method="_AZo3WYGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AYx7tIGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AYx7tYGbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AYx7s4GbEeuPkZNKCcfHxw" name="cause" type="_AYx7sIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYx7toGbEeuPkZNKCcfHxw" type="_AQe7UIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYx7t4GbEeuPkZNKCcfHxw" name="DatabaseError" method="_AZo3XIGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AYx7uoGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AYx7u4GbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AYx7uIGbEeuPkZNKCcfHxw" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYx7uYGbEeuPkZNKCcfHxw" name="cause" type="_AYx7sIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYx7vIGbEeuPkZNKCcfHxw" type="_AQe7UIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_AYx7vYGbEeuPkZNKCcfHxw" name="DatabaseError" method="_AZo3YIGbEeuPkZNKCcfHxw">
              <eAnnotations xmi:id="_AYx7woGbEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_AYx7w4GbEeuPkZNKCcfHxw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_AYx7voGbEeuPkZNKCcfHxw" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYx7v4GbEeuPkZNKCcfHxw" name="cause" type="_AYx7sIGbEeuPkZNKCcfHxw"/>
              <ownedParameter xmi:id="_AYx7wIGbEeuPkZNKCcfHxw" name="enableSuppression">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYx7wYGbEeuPkZNKCcfHxw" name="writableStackTrace">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_AYx7xIGbEeuPkZNKCcfHxw" type="_AQe7UIGbEeuPkZNKCcfHxw" direction="return"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_API3goGbEeuPkZNKCcfHxw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_API3g4GbEeuPkZNKCcfHxw" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_APW58IGbEeuPkZNKCcfHxw" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_AYMs54GbEeuPkZNKCcfHxw" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_AYMs6YGbEeuPkZNKCcfHxw" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_AYNT8YGbEeuPkZNKCcfHxw" name="KeyAdapter"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_AYNT84GbEeuPkZNKCcfHxw" name="KeyEvent"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_AYRlYIGbEeuPkZNKCcfHxw" name="ComponentEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_AYRlYoGbEeuPkZNKCcfHxw" name="ComponentListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_AYWd4oGbEeuPkZNKCcfHxw" name="ItemEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_AYWd5IGbEeuPkZNKCcfHxw" name="ItemListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_AYfn1IGbEeuPkZNKCcfHxw" name="WindowAdapter"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_AYgO4YGbEeuPkZNKCcfHxw" name="WindowEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYBtwIGbEeuPkZNKCcfHxw" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYCU0YGbEeuPkZNKCcfHxw" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYLeyIGbEeuPkZNKCcfHxw" name="Font"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYOiEIGbEeuPkZNKCcfHxw" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYPJIYGbEeuPkZNKCcfHxw" name="Component"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYPJI4GbEeuPkZNKCcfHxw" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYPJJYGbEeuPkZNKCcfHxw" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYPJJ4GbEeuPkZNKCcfHxw" name="Insets"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYSMcIGbEeuPkZNKCcfHxw" name="Frame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYSzgYGbEeuPkZNKCcfHxw" name="GraphicsDevice"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYSzg4GbEeuPkZNKCcfHxw" name="Rectangle"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYUosIGbEeuPkZNKCcfHxw" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYWd4IGbEeuPkZNKCcfHxw" name="GraphicsEnvironment"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYfn0IGbEeuPkZNKCcfHxw" name="GraphicsConfiguration"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYfn0oGbEeuPkZNKCcfHxw" name="HeadlessException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_API3hIGbEeuPkZNKCcfHxw" name="sql">
        <packagedElement xmi:type="uml:Interface" xmi:id="_AYCU04GbEeuPkZNKCcfHxw" name="Connection"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_AYC74IGbEeuPkZNKCcfHxw" name="PreparedStatement"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_AYC74oGbEeuPkZNKCcfHxw" name="ResultSet"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYC75IGbEeuPkZNKCcfHxw" name="SQLException"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_AYFYIIGbEeuPkZNKCcfHxw" name="Statement"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_AYH0YoGbEeuPkZNKCcfHxw" name="Timestamp"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYVPxYGbEeuPkZNKCcfHxw" name="DriverManager"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_APJekYGbEeuPkZNKCcfHxw" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_APsRIIGbEeuPkZNKCcfHxw" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_AYhdAIGbEeuPkZNKCcfHxw" name="Matcher"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_AYiEEYGbEeuPkZNKCcfHxw" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYC75oGbEeuPkZNKCcfHxw" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_AYC76IGbEeuPkZNKCcfHxw" name="List"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_AYIbcYGbEeuPkZNKCcfHxw" name="Calendar"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_AYIbc4GbEeuPkZNKCcfHxw" name="Date"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_AYKQoIGbEeuPkZNKCcfHxw" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYKQooGbEeuPkZNKCcfHxw" name="LinkedHashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_AYK3sYGbEeuPkZNKCcfHxw" name="Map"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYRlZIGbEeuPkZNKCcfHxw" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYSzh4GbEeuPkZNKCcfHxw" name="TimerTask"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYXE8YGbEeuPkZNKCcfHxw" name="Arrays"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_AYXE84GbEeuPkZNKCcfHxw" name="Iterator"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_APcZgIGbEeuPkZNKCcfHxw" name="text">
        <packagedElement xmi:type="uml:Class" xmi:id="_AYSzhYGbEeuPkZNKCcfHxw" name="SimpleDateFormat"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_AYuRXoGbEeuPkZNKCcfHxw" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_AYu4YIGbEeuPkZNKCcfHxw" name="Exception"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYx7sIGbEeuPkZNKCcfHxw" name="Throwable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_APLTwIGbEeuPkZNKCcfHxw" name="test">
      <packagedElement xmi:type="uml:Package" xmi:id="_APL60IGbEeuPkZNKCcfHxw" name="java">
        <packagedElement xmi:type="uml:Class" xmi:id="_AQWYcIGbEeuPkZNKCcfHxw" name="CompanyTest" visibility="package">
          <ownedAttribute xmi:id="_AZOnoYGbEeuPkZNKCcfHxw" name="conn" visibility="private" isStatic="true" type="_AYCU04GbEeuPkZNKCcfHxw" association="_AZ-Og4GbEeuPkZNKCcfHxw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnCSoGbEeuPkZNKCcfHxw" name="setUpBeforeClass" specification="_AQW_gIGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.setUrl(&quot;jdbc:postgresql://localhost:5432/devsurferdb&quot;);&#xD;
		PersistenceManager.setUser(&quot;surferadmin&quot;);&#xD;
		PersistenceManager.setPassword(&quot;surferpass&quot;);&#xD;
		conn = PersistenceManager.getConnection();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnCS4GbEeuPkZNKCcfHxw" name="tearDownAfterClass" specification="_AQW_hIGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.closeDatabase(conn);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnCTIGbEeuPkZNKCcfHxw" name="testUpdateCompanyToDB" specification="_AQXml4GbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>Company oldCompany = new Company().getCompanyFromDB(conn);&#xD;
		Company updatedCompany = new Company();&#xD;
		updatedCompany.setId(oldCompany.getId());&#xD;
		updatedCompany.setNombre(&quot;Empresa actualizada&quot;);&#xD;
		updatedCompany.setDireccion(&quot;Dirección actualizada&quot;);&#xD;
		updatedCompany.setProvincia(&quot;Provincia actualizada&quot;);&#xD;
		updatedCompany.setEstado(&quot;Estado actualizado&quot;);&#xD;
		updatedCompany.setCpostal(&quot;12345678&quot;);&#xD;
		updatedCompany.setTelefono(&quot;987654321&quot;);&#xD;
		updatedCompany.setMail(&quot;empactual@empactual.com&quot;);&#xD;
		updatedCompany.setWeb(&quot;www.empactual.com&quot;);&#xD;
		assertTrue(new Company().updateCompanyToDB(conn, updatedCompany));&#xD;
		Company otherCompany = new Company().getCompanyFromDB(conn);&#xD;
		assertAll(&#xD;
				() -> assertEquals(&quot;Empresa actualizada&quot;, otherCompany.getNombre()),&#xD;
				() -> assertEquals(&quot;Dirección actualizada&quot;, otherCompany.getDireccion()),&#xD;
				() -> assertEquals(&quot;Provincia actualizada&quot;, otherCompany.getProvincia()),&#xD;
				() -> assertEquals(&quot;Estado actualizado&quot;, otherCompany.getEstado()),&#xD;
				() -> assertEquals(&quot;12345678&quot;, otherCompany.getCpostal()),&#xD;
				() -> assertEquals(&quot;987654321&quot;, otherCompany.getTelefono()),&#xD;
				() -> assertEquals(&quot;empactual@empactual.com&quot;, otherCompany.getMail()),&#xD;
				() -> assertEquals(&quot;www.empactual.com&quot;, otherCompany.getWeb())&#xD;
				);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpMIGbEeuPkZNKCcfHxw" name="testUpdateCompany" specification="_AQXmm4GbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>fail(&quot;Not yet implemented&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpMYGbEeuPkZNKCcfHxw" name="testGetCompanyFromDB" specification="_AQXmoYGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertNotNull(new Company().getCompanyFromDB(CompanyTest.conn));&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpMoGbEeuPkZNKCcfHxw" name="testAddBusinessUnit" specification="_AQYNooGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>fail(&quot;Not yet implemented&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_AQW_gIGbEeuPkZNKCcfHxw" name="setUpBeforeClass" visibility="package" isStatic="true" method="_AZnCSoGbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQW_hIGbEeuPkZNKCcfHxw" name="tearDownAfterClass" visibility="package" isStatic="true" method="_AZnCS4GbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQW_iIGbEeuPkZNKCcfHxw" name="setUp" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQXmk4GbEeuPkZNKCcfHxw" name="tearDown" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQXml4GbEeuPkZNKCcfHxw" name="testUpdateCompanyToDB" visibility="package" method="_AZnCTIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQXmm4GbEeuPkZNKCcfHxw" name="testUpdateCompany" visibility="package" method="_AZnpMIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQXmoYGbEeuPkZNKCcfHxw" name="testGetCompanyFromDB" visibility="package" method="_AZnpMYGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQYNooGbEeuPkZNKCcfHxw" name="testAddBusinessUnit" visibility="package" method="_AZnpMoGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_AQaC0IGbEeuPkZNKCcfHxw" name="BusinessUnitTest" visibility="package">
          <ownedAttribute xmi:id="_AZPOtYGbEeuPkZNKCcfHxw" name="conn" visibility="private" isStatic="true" type="_AYCU04GbEeuPkZNKCcfHxw" association="_AZ-1kYGbEeuPkZNKCcfHxw"/>
          <ownedAttribute xmi:id="_AZPOtoGbEeuPkZNKCcfHxw" name="company" visibility="private" isStatic="true" type="_AQYNqIGbEeuPkZNKCcfHxw" association="_AZ-1lIGbEeuPkZNKCcfHxw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZPOt4GbEeuPkZNKCcfHxw" value="new Company()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpT4GbEeuPkZNKCcfHxw" name="setUpBeforeClass" specification="_AQaC0oGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.setUrl(&quot;jdbc:postgresql://localhost:5432/devsurferdb&quot;);
		PersistenceManager.setUser(&quot;surferadmin&quot;);
		PersistenceManager.setPassword(&quot;surferpass&quot;);
		conn = PersistenceManager.getConnection();
		company.setId(1);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpUIGbEeuPkZNKCcfHxw" name="tearDownAfterClass" specification="_AQaC1YGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.closeDatabase(conn);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpUYGbEeuPkZNKCcfHxw" name="testSaveBUnitToDB" specification="_AQap5YGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>BusinessUnit bUnit = new BusinessUnit();
		bUnit.set(company);
		bUnit.setNombre(&quot;TIENDA 1&quot;);
		bUnit.setDireccion(&quot;Calle Inventada, 12 Barcelona&quot;);
		bUnit.setProvincia(&quot;Barcelona&quot;);
		bUnit.setEstado(&quot;Catalunya&quot;);
		bUnit.setCpostal(&quot;08999&quot;);
		bUnit.setTelefono(&quot;999887766&quot;);
		bUnit.setMail(&quot;tienda1@empactual.com&quot;);
		bUnit.setActivo(true);
		assertTrue(new BusinessUnit().saveBUnitToDB(conn, bUnit));
		bUnit.setId(PersistenceManager.getLastElementIdFromDB(conn, BusinessUnit.TABLE_NAME));
		company.getBusinessUnits().add(bUnit);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpUoGbEeuPkZNKCcfHxw" name="testAddNewBusinessUnit" specification="_AQap6oGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>BusinessUnit bUnit = new BusinessUnit();
		bUnit.set(company);
		bUnit.setNombre(&quot;TIENDA 2&quot;);
		bUnit.setDireccion(&quot;Calle Inexistente, 24 Girona&quot;);
		bUnit.setProvincia(&quot;Girona&quot;);
		bUnit.setEstado(&quot;Catalunya&quot;);
		bUnit.setCpostal(&quot;17999&quot;);
		bUnit.setTelefono(&quot;888776655&quot;);
		bUnit.setMail(&quot;tienda2@empactual.com&quot;);
		bUnit.setActivo(true);
		assertNotNull(new BusinessUnit().addNewBusinessUnit(conn, bUnit));
		assertNotEquals(0, bUnit.getId());
		assertEquals(3, bUnit.getId());
		company.getBusinessUnits().add(bUnit);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpU4GbEeuPkZNKCcfHxw" name="testUpdateBusinessUnitToDB" specification="_AQap74GbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>BusinessUnit oldBunit = new BusinessUnit().getBusinessUnitByName(company, &quot;TIENDA 1&quot;);
		BusinessUnit newBunit = new BusinessUnit();
		newBunit.setId(oldBunit.getId());
		newBunit.set(company);
		newBunit.setNombre(&quot;NUEVA TIENDA 1&quot;);
		newBunit.setDireccion(&quot;Calle Falsa, 36 Tarragona&quot;);
		newBunit.setProvincia(&quot;Tarragona&quot;);
		newBunit.setEstado(&quot;Catalunya&quot;);
		newBunit.setCpostal(&quot;43999&quot;);
		newBunit.setTelefono(&quot;777665544&quot;);
		newBunit.setMail(&quot;nuevatienda1@empactual.com&quot;);
		newBunit.setActivo(true);
		assertTrue(new BusinessUnit().updateBusinessUnitToDB(conn, newBunit));
		oldBunit = newBunit;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpVIGbEeuPkZNKCcfHxw" name="testGetBusinessUnitsFromDB" specification="_AQap9IGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertNotNull(new BusinessUnit().getBusinessUnitsFromDB(conn, company));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpVYGbEeuPkZNKCcfHxw" name="testGetBusinessUnitByName" specification="_AQbQ8oGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertNotNull(new BusinessUnit().getBusinessUnitByName(company, &quot;TIENDA 1&quot;));
		assertEquals(&quot;Girona&quot;, new BusinessUnit().getBusinessUnitByName(company, &quot;TIENDA 2&quot;).getProvincia());
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZnpVoGbEeuPkZNKCcfHxw" name="testGetBusinessUnitById" specification="_AQbQ94GbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertNotNull(new BusinessUnit().getBusinessUnitById(company, 3));
		assertEquals(&quot;08999&quot;, new BusinessUnit().getBusinessUnitById(company, 2).getCpostal());
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_AQaC0oGbEeuPkZNKCcfHxw" name="setUpBeforeClass" visibility="package" isStatic="true" method="_AZnpT4GbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQaC1YGbEeuPkZNKCcfHxw" name="tearDownAfterClass" visibility="package" isStatic="true" method="_AZnpUIGbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQaC2IGbEeuPkZNKCcfHxw" name="setUp" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQap4oGbEeuPkZNKCcfHxw" name="tearDown" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQap5YGbEeuPkZNKCcfHxw" name="testSaveBUnitToDB" visibility="package" method="_AZnpUYGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQap6oGbEeuPkZNKCcfHxw" name="testAddNewBusinessUnit" visibility="package" method="_AZnpUoGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQap74GbEeuPkZNKCcfHxw" name="testUpdateBusinessUnitToDB" visibility="package" method="_AZnpU4GbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQap9IGbEeuPkZNKCcfHxw" name="testGetBusinessUnitsFromDB" visibility="package" method="_AZnpVIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQbQ8oGbEeuPkZNKCcfHxw" name="testGetBusinessUnitByName" visibility="package" method="_AZnpVYGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQbQ94GbEeuPkZNKCcfHxw" name="testGetBusinessUnitById" visibility="package" method="_AZnpVoGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_AQfiYIGbEeuPkZNKCcfHxw" name="AreaTest" visibility="package">
          <ownedAttribute xmi:id="_AZQc14GbEeuPkZNKCcfHxw" name="conn" visibility="private" isStatic="true" type="_AYCU04GbEeuPkZNKCcfHxw" association="_AZ_coYGbEeuPkZNKCcfHxw"/>
          <ownedAttribute xmi:id="_AZQc2IGbEeuPkZNKCcfHxw" name="company" visibility="private" isStatic="true" type="_AQYNqIGbEeuPkZNKCcfHxw" association="_AZ_cpIGbEeuPkZNKCcfHxw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZQc2YGbEeuPkZNKCcfHxw" value="new Company()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_AZQc2oGbEeuPkZNKCcfHxw" name="bUnit" visibility="private" isStatic="true" type="_ARExMIGbEeuPkZNKCcfHxw" association="_AZ_cp4GbEeuPkZNKCcfHxw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZQc24GbEeuPkZNKCcfHxw" value="new BusinessUnit()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3ZoGbEeuPkZNKCcfHxw" name="setUpBeforeClass" specification="_AQfiYoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.setUrl(&quot;jdbc:postgresql://localhost:5432/devsurferdb&quot;);
		PersistenceManager.setUser(&quot;surferadmin&quot;);
		PersistenceManager.setPassword(&quot;surferpass&quot;);
		conn = PersistenceManager.getConnection();
		company.setId(1);
		bUnit.setId(1);
		bUnit.set(company);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3Z4GbEeuPkZNKCcfHxw" name="tearDownAfterClass" specification="_AQgJcYGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.closeDatabase(conn);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3aIGbEeuPkZNKCcfHxw" name="testSaveAreaToDB" specification="_AQgJeoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>Area area = new Area();
		area.setArea(&quot;RECEPCIÓN&quot;);
		area.setDescripcion(&quot;Recepción del centro de trabajo&quot;);
		assertTrue(new Area().saveAreaToDB(conn, area));
		area.setId(PersistenceManager.getLastElementIdFromDB(conn, Area.TABLE_NAME));
		bUnit.getAreas().add(area);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3aYGbEeuPkZNKCcfHxw" name="testSaveBUnitAreaToDB" specification="_AQgJf4GbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertTrue(new Area().saveBUnitAreaToDB(conn, bUnit, bUnit.getAreas().get(0)));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3aoGbEeuPkZNKCcfHxw" name="testAddNewArea" specification="_AQgwgoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>Area area = new Area();
		area.setArea(&quot;VESTÍBULO PRINCIPAL&quot;);
		area.setDescripcion(&quot;Vestíbulo principal del centro de trabajo&quot;);
		assertNotNull(new Area().addNewArea(conn, bUnit, area));
		assertNotEquals(0, area.getId());
		assertEquals(2, area.getId());
		bUnit.getAreas().add(area);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3a4GbEeuPkZNKCcfHxw" name="testUpdateAreaToDB" specification="_AQgwh4GbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>Area oldArea = new Area().getAreaByName(bUnit, &quot;VESTÍBULO PRINCIPAL&quot;);
		Area newArea = new Area();
		newArea.setId(oldArea.getId());
		newArea.setArea(&quot;COMEDOR&quot;);
		newArea.setDescripcion(&quot;Comedor del centro de trabajo&quot;);
		assertTrue(new Area().updateAreaToDB(conn, newArea));
		oldArea = newArea;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3bIGbEeuPkZNKCcfHxw" name="testGetAreasFromDB" specification="_AQgwjIGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertNotNull(new Area().getAreasFromDB(conn, bUnit));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3bYGbEeuPkZNKCcfHxw" name="testGetAreaByName" specification="_AQgwkYGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertEquals(&quot;Recepción del centro de trabajo&quot;, new Area().getAreaByName(bUnit, &quot;RECEPCIÓN&quot;).getDescripcion());
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZo3boGbEeuPkZNKCcfHxw" name="testGetAreaById" specification="_AQgwloGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>int id = bUnit.getAreas().get(0).getId();
		assertNotNull(new Area().getAreaById(bUnit, id));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_AQfiYoGbEeuPkZNKCcfHxw" name="setUpBeforeClass" visibility="package" isStatic="true" method="_AZo3ZoGbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQgJcYGbEeuPkZNKCcfHxw" name="tearDownAfterClass" visibility="package" isStatic="true" method="_AZo3Z4GbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQgJdIGbEeuPkZNKCcfHxw" name="setUp" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQgJd4GbEeuPkZNKCcfHxw" name="tearDown" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQgJeoGbEeuPkZNKCcfHxw" name="testSaveAreaToDB" visibility="package" method="_AZo3aIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQgJf4GbEeuPkZNKCcfHxw" name="testSaveBUnitAreaToDB" visibility="package" method="_AZo3aYGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQgwgoGbEeuPkZNKCcfHxw" name="testAddNewArea" visibility="package" method="_AZo3aoGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQgwh4GbEeuPkZNKCcfHxw" name="testUpdateAreaToDB" visibility="package" method="_AZo3a4GbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQgwjIGbEeuPkZNKCcfHxw" name="testGetAreasFromDB" visibility="package" method="_AZo3bIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQgwkYGbEeuPkZNKCcfHxw" name="testGetAreaByName" visibility="package" method="_AZo3bYGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_AQgwloGbEeuPkZNKCcfHxw" name="testGetAreaById" visibility="package" method="_AZo3boGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ARH0gIGbEeuPkZNKCcfHxw" name="EventStateTest" visibility="package">
          <ownedAttribute xmi:id="_AZjXxoGbEeuPkZNKCcfHxw" name="conn" visibility="private" isStatic="true" type="_AYCU04GbEeuPkZNKCcfHxw" association="_AaM4DYGbEeuPkZNKCcfHxw"/>
          <ownedAttribute xmi:id="_AZjXx4GbEeuPkZNKCcfHxw" name="eState" visibility="private" isStatic="true" type="_AQpTYIGbEeuPkZNKCcfHxw" association="_AaNfEYGbEeuPkZNKCcfHxw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZjXyIGbEeuPkZNKCcfHxw" value="new EventState()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMMYGbEeuPkZNKCcfHxw" name="setUpBeforeClass" specification="_ARH0goGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.setUrl(&quot;jdbc:postgresql://localhost:5432/devsurferdb&quot;);&#xD;
		PersistenceManager.setUser(&quot;surferadmin&quot;);&#xD;
		PersistenceManager.setPassword(&quot;surferpass&quot;);&#xD;
		conn = PersistenceManager.getConnection();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMMoGbEeuPkZNKCcfHxw" name="tearDownAfterClass" specification="_ARH0hYGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.closeDatabase(conn);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMM4GbEeuPkZNKCcfHxw" name="testGetEventStatesArray" specification="_ARIbmIGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>String[] estados = {&quot;ABIERTA&quot;, &quot;EN CURSO&quot;, &quot;CERRADA&quot;};&#xD;
		String[] dbEstados = eState.getEventStatesArray();&#xD;
		for (int i = 0; i &lt; estados.length; i++) {&#xD;
			assertEquals(estados[i], dbEstados[i]);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMNIGbEeuPkZNKCcfHxw" name="testGetEventStateId" specification="_ARIbnYGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertEquals(1, eState.getEventStateId(&quot;ABIERTA&quot;));&#xD;
		assertEquals(-1, eState.getEventStateId(&quot;EN REPARACION&quot;));&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMNYGbEeuPkZNKCcfHxw" name="testGetEventState" specification="_ARIboIGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertEquals(&quot;EN CURSO&quot;, eState.getEventState(2));&#xD;
		assertNotNull(eState.getEventState(3));&#xD;
		assertNull(eState.getEventState(4));&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMNoGbEeuPkZNKCcfHxw" name="testLoadData" specification="_ARJCoIGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>eState.loadData(conn);&#xD;
		assertTrue(eState.getEventStates().size() > 0);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ARH0goGbEeuPkZNKCcfHxw" name="setUpBeforeClass" visibility="package" isStatic="true" method="_AZwMMYGbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARH0hYGbEeuPkZNKCcfHxw" name="tearDownAfterClass" visibility="package" isStatic="true" method="_AZwMMoGbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARIbkoGbEeuPkZNKCcfHxw" name="setUp" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARIblYGbEeuPkZNKCcfHxw" name="tearDown" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARIbmIGbEeuPkZNKCcfHxw" name="testGetEventStatesArray" visibility="package" method="_AZwMM4GbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARIbnYGbEeuPkZNKCcfHxw" name="testGetEventStateId" visibility="package" method="_AZwMNIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARIboIGbEeuPkZNKCcfHxw" name="testGetEventState" visibility="package" method="_AZwMNYGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARJCoIGbEeuPkZNKCcfHxw" name="testLoadData" visibility="package" method="_AZwMNoGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ARJCqIGbEeuPkZNKCcfHxw" name="EventTest" visibility="package">
          <ownedAttribute xmi:id="_AZjXyYGbEeuPkZNKCcfHxw" name="conn" visibility="private" isStatic="true" type="_AYCU04GbEeuPkZNKCcfHxw" association="_AaNfFIGbEeuPkZNKCcfHxw"/>
          <ownedAttribute xmi:id="_AZj-0IGbEeuPkZNKCcfHxw" name="company" visibility="private" isStatic="true" type="_AQYNqIGbEeuPkZNKCcfHxw" association="_AaNfF4GbEeuPkZNKCcfHxw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZj-0YGbEeuPkZNKCcfHxw" value="new Company()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_AZj-0oGbEeuPkZNKCcfHxw" name="bUnit" visibility="private" isStatic="true" type="_ARExMIGbEeuPkZNKCcfHxw" association="_AaNfGoGbEeuPkZNKCcfHxw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZj-04GbEeuPkZNKCcfHxw" value="new BusinessUnit()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMN4GbEeuPkZNKCcfHxw" name="setUpBeforeClass" specification="_ARJpsYGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.setUrl(&quot;jdbc:postgresql://localhost:5432/devsurferdb&quot;);
		PersistenceManager.setUser(&quot;surferadmin&quot;);
		PersistenceManager.setPassword(&quot;surferpass&quot;);
		conn = PersistenceManager.getConnection();
		company.setId(1);
		bUnit.setId(1);
		bUnit.set(company);
		bUnit.setAreas(new Area().getAreasFromDB(conn, bUnit));
		EventType evType = new EventType();
		evType.loadData(conn);
		TypesStatesContainer.setEvType(evType);
		EventState evState = new EventState();
		evState.loadData(conn);
		TypesStatesContainer.setEvState(evState);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMOIGbEeuPkZNKCcfHxw" name="tearDownAfterClass" specification="_ARJptIGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.closeDatabase(conn);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwMOYGbEeuPkZNKCcfHxw" name="testSaveEventToDB" specification="_ARJpvYGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>Event event = new Event();
		event.setbUnit(bUnit);
		event.setArea(bUnit.getAreas().get(0));
		event.setEventType(&quot;GOTERAS&quot;);
		event.setTitulo(&quot;Goteras frente al mostrador&quot;);
		event.setDescripcion(&quot;Aparecen dos goteras frente al mostrador de recepción&quot;);
		event.setEventState(&quot;ABIERTA&quot;);
		assertTrue(new Event().saveEventToDB(conn, event));
		event.setId(PersistenceManager.getLastElementIdFromDB(conn, Event.TABLE_NAME));
		bUnit.getEvents().add(event);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzIIGbEeuPkZNKCcfHxw" name="testAddNewEvent" specification="_ARKQxIGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>Event event = new Event();
		event.setbUnit(bUnit);
		event.setArea(bUnit.getAreas().get(1));
		event.setEventType(&quot;ROTURA DE MATERIAL&quot;);
		event.setTitulo(&quot;Silla rota&quot;);
		event.setDescripcion(&quot;El respaldo de una silla se ha roto&quot;);
		event.setEventState(&quot;ABIERTA&quot;);
		assertNotNull(new Event().addNewEvent(conn, event));
		assertNotEquals(0, event.getId());
		assertEquals(2, event.getId());
		bUnit.getEvents().add(event);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzIYGbEeuPkZNKCcfHxw" name="testUpdateEventToDB" specification="_ARKQyYGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>Event oldEvent = new Event().getEventById(bUnit, 2);
		Event newEvent = new Event();
		newEvent.setId(oldEvent.getId());
		newEvent.setbUnit(bUnit);
		newEvent.setArea(bUnit.getAreas().get(1));
		newEvent.setEventType(&quot;ROTURA DE MATERIAL&quot;);
		newEvent.setTitulo(&quot;Mesa rota&quot;);
		newEvent.setDescripcion(&quot;La pata de una mesa se ha roto&quot;);
		newEvent.setEventState(&quot;ABIERTA&quot;);
		assertTrue(new Event().updateEventToDB(conn, newEvent));
		oldEvent = newEvent;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzIoGbEeuPkZNKCcfHxw" name="testGetEventsFromDB" specification="_ARKQzoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertNotNull(new Event().getEventsFromDB(conn, bUnit));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzI4GbEeuPkZNKCcfHxw" name="testGetEventById" specification="_ARKQ04GbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertNotNull(new Event().getEventById(bUnit, 2));
		assertEquals(&quot;Silla rota&quot;, new Event().getEventById(bUnit, 2).getTitulo());
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ARJpsYGbEeuPkZNKCcfHxw" name="setUpBeforeClass" visibility="package" isStatic="true" method="_AZwMN4GbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARJptIGbEeuPkZNKCcfHxw" name="tearDownAfterClass" visibility="package" isStatic="true" method="_AZwMOIGbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARJpt4GbEeuPkZNKCcfHxw" name="setUp" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARJpuoGbEeuPkZNKCcfHxw" name="tearDown" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARJpvYGbEeuPkZNKCcfHxw" name="testSaveEventToDB" visibility="package" method="_AZwMOYGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARKQxIGbEeuPkZNKCcfHxw" name="testAddNewEvent" visibility="package" method="_AZwzIIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARKQyYGbEeuPkZNKCcfHxw" name="testUpdateEventToDB" visibility="package" method="_AZwzIYGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARKQzoGbEeuPkZNKCcfHxw" name="testGetEventsFromDB" visibility="package" method="_AZwzIoGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARKQ04GbEeuPkZNKCcfHxw" name="testGetEventById" visibility="package" method="_AZwzI4GbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ARK30IGbEeuPkZNKCcfHxw" name="EventTypeTest" visibility="package">
          <ownedAttribute xmi:id="_AZj-1IGbEeuPkZNKCcfHxw" name="conn" visibility="private" isStatic="true" type="_AYCU04GbEeuPkZNKCcfHxw" association="_AaOGIIGbEeuPkZNKCcfHxw"/>
          <ownedAttribute xmi:id="_AZj-1YGbEeuPkZNKCcfHxw" name="eType" visibility="private" isStatic="true" type="_AQoFQIGbEeuPkZNKCcfHxw" association="_AaOGI4GbEeuPkZNKCcfHxw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZj-1oGbEeuPkZNKCcfHxw" value="new EventType()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzJIGbEeuPkZNKCcfHxw" name="setUpBeforeClass" specification="_ARK30oGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.setUrl(&quot;jdbc:postgresql://localhost:5432/devsurferdb&quot;);&#xD;
		PersistenceManager.setUser(&quot;surferadmin&quot;);&#xD;
		PersistenceManager.setPassword(&quot;surferpass&quot;);&#xD;
		conn = PersistenceManager.getConnection();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzJYGbEeuPkZNKCcfHxw" name="tearDownAfterClass" specification="_ARLe4oGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.closeDatabase(conn);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzJoGbEeuPkZNKCcfHxw" name="testGetEventTypesArray" specification="_ARLe64GbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>String[] tipos = {&quot;AVERÍA ELÉCTRICA&quot;, &quot;GOTERAS&quot;, &quot;ROTURA DE MATERIAL&quot;};&#xD;
		String[] dbTipos = eType.getEventTypesArray();&#xD;
		for (int i = 0; i &lt; tipos.length; i++) {&#xD;
			assertEquals(tipos[i], dbTipos[i]);&#xD;
		}&#xD;
		&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzJ4GbEeuPkZNKCcfHxw" name="testGetEventTypeId" specification="_ARLe8IGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertEquals(1, eType.getEventTypeId(&quot;AVERÍA ELÉCTRICA&quot;));&#xD;
		assertEquals(-1, eType.getEventTypeId(&quot;CLIMATIZACIÓN&quot;));&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzKIGbEeuPkZNKCcfHxw" name="testGetEventType" specification="_ARMF9IGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertEquals(&quot;GOTERAS&quot;, eType.getEventType(2));&#xD;
		assertNotNull(eType.getEventType(3));&#xD;
		assertNull(eType.getEventType(4));&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzKYGbEeuPkZNKCcfHxw" name="testLoadData" specification="_ARMF-YGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>eType.loadData(conn);&#xD;
		assertTrue(eType.getEventTypes().size() > 0);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzKoGbEeuPkZNKCcfHxw" name="testSaveEventTypeToDB" specification="_ARMF_oGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertTrue(eType.saveEventTypeToDB(conn, &quot;AVERÍA ELÉCTRICA&quot;));&#xD;
		eType.getEventTypes().put(1, &quot;AVERÍA ELÉCTRICA&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzK4GbEeuPkZNKCcfHxw" name="testAddNewEventType" specification="_ARMGA4GbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertTrue(eType.addNewEventType(conn, &quot;GOTERAS&quot;));&#xD;
		assertTrue(eType.addNewEventType(conn, &quot;ROTURA DE MATERIAL&quot;));&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ARK30oGbEeuPkZNKCcfHxw" name="setUpBeforeClass" visibility="package" isStatic="true" method="_AZwzJIGbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARLe4oGbEeuPkZNKCcfHxw" name="tearDownAfterClass" visibility="package" isStatic="true" method="_AZwzJYGbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARLe5YGbEeuPkZNKCcfHxw" name="setUp" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARLe6IGbEeuPkZNKCcfHxw" name="tearDown" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARLe64GbEeuPkZNKCcfHxw" name="testGetEventTypesArray" visibility="package" method="_AZwzJoGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARLe8IGbEeuPkZNKCcfHxw" name="testGetEventTypeId" visibility="package" method="_AZwzJ4GbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARMF9IGbEeuPkZNKCcfHxw" name="testGetEventType" visibility="package" method="_AZwzKIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARMF-YGbEeuPkZNKCcfHxw" name="testLoadData" visibility="package" method="_AZwzKYGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARMF_oGbEeuPkZNKCcfHxw" name="testSaveEventTypeToDB" visibility="package" method="_AZwzKoGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARMGA4GbEeuPkZNKCcfHxw" name="testAddNewEventType" visibility="package" method="_AZwzK4GbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ARMtAIGbEeuPkZNKCcfHxw" name="EventUpdateTest" visibility="package">
          <ownedAttribute xmi:id="_AZj-14GbEeuPkZNKCcfHxw" name="conn" visibility="private" isStatic="true" type="_AYCU04GbEeuPkZNKCcfHxw" association="_AaOGJoGbEeuPkZNKCcfHxw"/>
          <ownedAttribute xmi:id="_AZj-2IGbEeuPkZNKCcfHxw" name="company" visibility="private" isStatic="true" type="_AQYNqIGbEeuPkZNKCcfHxw" association="_AaOGKYGbEeuPkZNKCcfHxw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZj-2YGbEeuPkZNKCcfHxw" value="new Company()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_AZj-2oGbEeuPkZNKCcfHxw" name="bUnit" visibility="private" isStatic="true" type="_ARExMIGbEeuPkZNKCcfHxw" association="_AaOGLIGbEeuPkZNKCcfHxw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZj-24GbEeuPkZNKCcfHxw" value="new BusinessUnit()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzLIGbEeuPkZNKCcfHxw" name="setUpBeforeClass" specification="_ARMtAoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.setUrl(&quot;jdbc:postgresql://localhost:5432/devsurferdb&quot;);
		PersistenceManager.setUser(&quot;surferadmin&quot;);
		PersistenceManager.setPassword(&quot;surferpass&quot;);
		conn = PersistenceManager.getConnection();
		company.setId(1);
		bUnit.setId(1);
		bUnit.set(company);		
		EventType evType = new EventType();
		evType.loadData(conn);
		TypesStatesContainer.setEvType(evType);
		EventState evState = new EventState();
		evState.loadData(conn);
		TypesStatesContainer.setEvState(evState);
		UserType uType = new UserType();
		uType.loadData(conn);
		TypesStatesContainer.setuType(uType);
		bUnit.setAreas(new Area().getAreasFromDB(conn, bUnit));
		bUnit.setEvents(new Event().getEventsFromDB(conn, bUnit));
		bUnit.setUsers(new User().getUsersFromDB(conn, bUnit));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzLYGbEeuPkZNKCcfHxw" name="tearDownAfterClass" specification="_ARNUEoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.closeDatabase(conn);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzLoGbEeuPkZNKCcfHxw" name="testSaveEventUpdateToDB" specification="_ARNUG4GbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>EventUpdate eUpdate = new EventUpdate();
		Event event = bUnit.getEvents().get(0);
		eUpdate.setEvent(event);
		eUpdate.setFechaHora(ToolBox.getTimestampNow());
		eUpdate.setDescripcion(&quot;Aparecen tras el día de lluvia de ayer. &quot;
				+ &quot;Se colocan cubos para recoger el agua&quot;);
		eUpdate.setAutor(&quot;Juan Palomo&quot;);
		eUpdate.setUser(bUnit.getUsers().get(1));
		assertTrue(new EventUpdate().saveEventUpdateToDB(conn, eUpdate));
		eUpdate.setId(PersistenceManager.getLastElementIdFromDB(conn, EventUpdate.TABLE_NAME));
		event.getUpdates().add(eUpdate);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzL4GbEeuPkZNKCcfHxw" name="testAddNewEventUpdate" specification="_ARNUIIGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>EventUpdate eUpdate = new EventUpdate();
		Event event = bUnit.getEvents().get(1);
		eUpdate.setEvent(event);
		eUpdate.setFechaHora(ToolBox.getTimestampNow());
		eUpdate.setDescripcion(&quot;Retiramos la mesa al almacén&quot;);
		eUpdate.setAutor(&quot;Pepe Gotera&quot;);
		eUpdate.setUser(bUnit.getUsers().get(2));
		assertNotNull(new EventUpdate().addNewEventUpdate(conn, eUpdate));
		assertNotEquals(0, eUpdate.getId());
		assertEquals(2, eUpdate.getId());
		event.getUpdates().add(eUpdate);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzMIGbEeuPkZNKCcfHxw" name="testUpdateEventUpdateToDB" specification="_ARN7JIGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>Event event = bUnit.getEvents().get(1);
		EventUpdate oldEupdate = new EventUpdate().getEventUpdateById(event, 2);
		EventUpdate newEupdate = new EventUpdate();
		newEupdate.setId(oldEupdate.getId());
		newEupdate.setEvent(event);
		newEupdate.setFechaHora(ToolBox.getTimestampNow());
		newEupdate.setDescripcion(&quot;Retiramos la mesa al almacén y desmontamos la pata rota&quot;);
		newEupdate.setAutor(&quot;Pepe Gotera&quot;);
		newEupdate.setUser(oldEupdate.getUser());
		assertTrue(new EventUpdate().updateEventUpdateToDB(conn, newEupdate));
		oldEupdate = newEupdate;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzMYGbEeuPkZNKCcfHxw" name="testGetEventUpdatesFromDB" specification="_ARN7KYGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>Event event1 = bUnit.getEvents().get(0);
		Event event2 = bUnit.getEvents().get(1);
		assertNotNull(new EventUpdate().getEventUpdatesFromDB(conn, event1));
		assertNotNull(new EventUpdate().getEventUpdatesFromDB(conn, event2));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzMoGbEeuPkZNKCcfHxw" name="testGetEventUpdatesByUserAlias" specification="_ARN7LoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>Event event1 = bUnit.getEvents().get(0);
		Event event2 = bUnit.getEvents().get(1);
		event1.setUpdates(new EventUpdate().getEventUpdatesFromDB(conn, event1));
		event2.setUpdates(new EventUpdate().getEventUpdatesFromDB(conn, event2));
		assertEquals(1, new EventUpdate().getEventUpdatesByUserAlias(event1, &quot;FakeManager&quot;).size());
		assertEquals(&quot;Juan Palomo&quot;, new EventUpdate().getEventUpdatesByUserAlias(event1, &quot;FakeManager&quot;).get(0).getAutor());
		assertEquals(1, new EventUpdate().getEventUpdatesByUserAlias(event2, &quot;BigFakeUser&quot;).size());
		assertEquals(&quot;Pepe Gotera&quot;, new EventUpdate().getEventUpdatesByUserAlias(event2, &quot;BigFakeUser&quot;).get(0).getAutor());
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzM4GbEeuPkZNKCcfHxw" name="testGetEventUpdatesByUserId" specification="_ARN7M4GbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>Event event1 = bUnit.getEvents().get(0);
		Event event2 = bUnit.getEvents().get(1);
		event1.setUpdates(new EventUpdate().getEventUpdatesFromDB(conn, event1));
		event2.setUpdates(new EventUpdate().getEventUpdatesFromDB(conn, event2));
		assertEquals(1, new EventUpdate().getEventUpdatesByUserId(event1, 2).size());
		assertEquals(&quot;Juan Palomo&quot;, new EventUpdate().getEventUpdatesByUserId(event1, 2).get(0).getAutor());
		assertEquals(1, new EventUpdate().getEventUpdatesByUserId(event2, 3).size());
		assertEquals(&quot;Pepe Gotera&quot;, new EventUpdate().getEventUpdatesByUserId(event2, 3).get(0).getAutor());
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzNIGbEeuPkZNKCcfHxw" name="testGetEventUpdateById" specification="_ARN7OIGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>Event event1 = bUnit.getEvents().get(0);
		Event event2 = bUnit.getEvents().get(1);
		event1.setUpdates(new EventUpdate().getEventUpdatesFromDB(conn, event1));
		event2.setUpdates(new EventUpdate().getEventUpdatesFromDB(conn, event2));
		assertNotNull(new EventUpdate().getEventUpdateById(event1, 1));
		assertEquals(&quot;Juan Palomo&quot;, new EventUpdate().getEventUpdateById(event1, 1).getAutor());
		assertNotNull(new EventUpdate().getEventUpdateById(event2, 2));
		assertEquals(&quot;Pepe Gotera&quot;, new EventUpdate().getEventUpdateById(event2, 2).getAutor());
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ARMtAoGbEeuPkZNKCcfHxw" name="setUpBeforeClass" visibility="package" isStatic="true" method="_AZwzLIGbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARNUEoGbEeuPkZNKCcfHxw" name="tearDownAfterClass" visibility="package" isStatic="true" method="_AZwzLYGbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARNUFYGbEeuPkZNKCcfHxw" name="setUp" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARNUGIGbEeuPkZNKCcfHxw" name="tearDown" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARNUG4GbEeuPkZNKCcfHxw" name="testSaveEventUpdateToDB" visibility="package" method="_AZwzLoGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARNUIIGbEeuPkZNKCcfHxw" name="testAddNewEventUpdate" visibility="package" method="_AZwzL4GbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARN7JIGbEeuPkZNKCcfHxw" name="testUpdateEventUpdateToDB" visibility="package" method="_AZwzMIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARN7KYGbEeuPkZNKCcfHxw" name="testGetEventUpdatesFromDB" visibility="package" method="_AZwzMYGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARN7LoGbEeuPkZNKCcfHxw" name="testGetEventUpdatesByUserAlias" visibility="package" method="_AZwzMoGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARN7M4GbEeuPkZNKCcfHxw" name="testGetEventUpdatesByUserId" visibility="package" method="_AZwzM4GbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARN7OIGbEeuPkZNKCcfHxw" name="testGetEventUpdateById" visibility="package" method="_AZwzNIGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_AROiNYGbEeuPkZNKCcfHxw" name="PersistenceManagerTest" visibility="package">
          <ownedAttribute xmi:id="_AZkl4IGbEeuPkZNKCcfHxw" name="connection" visibility="private" isStatic="true" type="_AYCU04GbEeuPkZNKCcfHxw" association="_AaOtMYGbEeuPkZNKCcfHxw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzNYGbEeuPkZNKCcfHxw" name="setUpBeforeClass" specification="_ARPJQIGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>String devUrl = &quot;jdbc:postgresql://localhost:5432/devsurferdb&quot;;&#xD;
		String devUser = &quot;surferadmin&quot;;&#xD;
		String devPassword = &quot;surferpass&quot;;&#xD;
		try {&#xD;
			Class.forName(&quot;org.postgresql.Driver&quot;);&#xD;
			connection = DriverManager.getConnection(devUrl, devUser, devPassword);&#xD;
		} catch (ClassNotFoundException ex) {&#xD;
			System.out.println(&quot;No se encuentra el controlador JDBC (&quot;&#xD;
			+ ex.getMessage() +&quot;)&quot;);&#xD;
		} catch (SQLException e) {&#xD;
			System.out.println(&quot;Error: &quot; + e.getMessage());&#xD;
			System.out.println(&quot;Estado: &quot; + e.getSQLState());&#xD;
			System.out.println(&quot;Código: &quot; + e.getErrorCode());&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzNoGbEeuPkZNKCcfHxw" name="testConnectToDatabase" specification="_ARPwUoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertNotNull(PersistenceManager.connectToDatabase(&quot;LOCAL_DB&quot;));&#xD;
		assertNotNull(PersistenceManager.connectToDatabase(&quot;LOCAL_TEST_DB&quot;));&#xD;
		assertNull(PersistenceManager.connectToDatabase(&quot;&quot;));&#xD;
		assertNull(PersistenceManager.connectToDatabase(&quot;REMOTE_DB&quot;));&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzN4GbEeuPkZNKCcfHxw" name="testGetConnection" specification="_ARPwVoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.setUrl(&quot;jdbc:postgresql://localhost:5432/devsurferdb&quot;);&#xD;
		PersistenceManager.setUser(&quot;surferadmin&quot;);&#xD;
		PersistenceManager.setPassword(&quot;surferpass&quot;);&#xD;
		assertNotNull(PersistenceManager.getConnection());&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZwzOIGbEeuPkZNKCcfHxw" name="testGetResultSetStatementString" specification="_ARPwWoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>Statement statement = null;&#xD;
		//ResultSet results = null;&#xD;
		String sql = &quot;SELECT * FROM event_state;&quot;;&#xD;
		try {&#xD;
			statement = connection.createStatement();&#xD;
			assertNotNull(PersistenceManager.getResultSet(statement, sql));&#xD;
			//results = PersistenceManager.getResultSet(statement, sql);&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		} finally {&#xD;
			//PersistenceManager.closeResultSet(results);&#xD;
			PersistenceManager.closeStatement(statement);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaMIGbEeuPkZNKCcfHxw" name="testGetResultSetPreparedStatementString" specification="_ARPwXoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PreparedStatement pstm = null;&#xD;
		String sql = &quot;SELECT id FROM \&quot;?\&quot; &quot;&#xD;
				+ &quot;ORDER BY id DESC LIMIT 1;&quot;;&#xD;
		try {&#xD;
			pstm = connection.prepareStatement(sql);&#xD;
			pstm.setString(1, &quot;user&quot;);&#xD;
			assertNotNull(PersistenceManager.getResultSet(pstm, sql));&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		} finally {&#xD;
			PersistenceManager.closePrepStatement(pstm);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaMYGbEeuPkZNKCcfHxw" name="testGetLastElementIdFromDB" specification="_ARPwYoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertEquals(3, PersistenceManager.getLastElementIdFromDB(connection, &quot;user_type&quot;));&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaMoGbEeuPkZNKCcfHxw" name="testUpdateTimeStampToDB" specification="_ARQXYoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>Timestamp tNow = ToolBox.getTimestampNow();&#xD;
		Timestamp readTimestamp = null;&#xD;
		assertTrue(PersistenceManager.updateTimeStampToDB(connection, Company.TABLE_NAME, tNow));&#xD;
		Statement stm = null;&#xD;
		ResultSet results = null;&#xD;
		String sql = &quot;SELECT fecha_hora &quot;&#xD;
				+ &quot;FROM last_modification &quot;&#xD;
				+ &quot;WHERE table_name = 'company';&quot;;&#xD;
		try {&#xD;
			stm = connection.createStatement();&#xD;
			results = stm.executeQuery(sql);&#xD;
			while(results.next()) {&#xD;
				readTimestamp = results.getTimestamp(1);&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		assertEquals(tNow, readTimestamp);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaM4GbEeuPkZNKCcfHxw" name="testGetLatestTimestampFromDb" specification="_ARQXZoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertNotNull(PersistenceManager.getLatestTimestampFromDb(connection));&#xD;
		Timestamp tNow = ToolBox.getTimestampNow();&#xD;
		assertTrue(tNow.after(PersistenceManager.getLatestTimestampFromDb(connection)));&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ARPJQIGbEeuPkZNKCcfHxw" name="setUpBeforeClass" visibility="package" isStatic="true" method="_AZwzNYGbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARPJRIGbEeuPkZNKCcfHxw" name="tearDownAfterClass" visibility="package" isStatic="true" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARPJSIGbEeuPkZNKCcfHxw" name="setUp" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARPJTIGbEeuPkZNKCcfHxw" name="tearDown" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARPwUoGbEeuPkZNKCcfHxw" name="testConnectToDatabase" visibility="package" method="_AZwzNoGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARPwVoGbEeuPkZNKCcfHxw" name="testGetConnection" visibility="package" method="_AZwzN4GbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARPwWoGbEeuPkZNKCcfHxw" name="testGetResultSetStatementString" visibility="package" method="_AZwzOIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARPwXoGbEeuPkZNKCcfHxw" name="testGetResultSetPreparedStatementString" visibility="package" method="_AZxaMIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARPwYoGbEeuPkZNKCcfHxw" name="testGetLastElementIdFromDB" visibility="package" method="_AZxaMYGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARQXYoGbEeuPkZNKCcfHxw" name="testUpdateTimeStampToDB" visibility="package" method="_AZxaMoGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARQXZoGbEeuPkZNKCcfHxw" name="testGetLatestTimestampFromDb" visibility="package" method="_AZxaM4GbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ARQXaoGbEeuPkZNKCcfHxw" name="UserTest" visibility="package">
          <ownedAttribute xmi:id="_AZkl4oGbEeuPkZNKCcfHxw" name="conn" visibility="private" isStatic="true" type="_AYCU04GbEeuPkZNKCcfHxw" association="_AaOtNIGbEeuPkZNKCcfHxw"/>
          <ownedAttribute xmi:id="_AZkl44GbEeuPkZNKCcfHxw" name="company" visibility="private" isStatic="true" type="_AQYNqIGbEeuPkZNKCcfHxw" association="_AaOtN4GbEeuPkZNKCcfHxw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZkl5IGbEeuPkZNKCcfHxw" value="new Company()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_AZkl5YGbEeuPkZNKCcfHxw" name="bUnit" visibility="private" isStatic="true" type="_ARExMIGbEeuPkZNKCcfHxw" association="_AaOtOoGbEeuPkZNKCcfHxw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZkl5oGbEeuPkZNKCcfHxw" value="new BusinessUnit()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaNIGbEeuPkZNKCcfHxw" name="setUpBeforeClass" specification="_ARQ-cYGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.setUrl(&quot;jdbc:postgresql://localhost:5432/devsurferdb&quot;);
		PersistenceManager.setUser(&quot;surferadmin&quot;);
		PersistenceManager.setPassword(&quot;surferpass&quot;);
		conn = PersistenceManager.getConnection();
		company.setId(1);
		bUnit.setId(1);
		bUnit.set(company);
		UserType uType = new UserType();
		uType.loadData(conn);
		TypesStatesContainer.setuType(uType);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaNYGbEeuPkZNKCcfHxw" name="tearDownAfterClass" specification="_ARQ-dIGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.closeDatabase(conn);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaNoGbEeuPkZNKCcfHxw" name="testSaveUserToDB" specification="_ARRlgYGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>User user = new User();
		user.setbUnit(bUnit);
		user.setUserType(&quot;MANAGER&quot;);
		user.setUserAlias(&quot;FakeManager&quot;);
		user.setNombre(&quot;MiNombre&quot;);
		user.setApellido(&quot;MiApellido&quot;);
		user.setPassword(user.passwordHash(&quot;MiPassword&quot;));
		user.setActivo(true);
		assertTrue(new User().saveUserToDB(conn, user));
		user.setId(PersistenceManager.getLastElementIdFromDB(conn, User.TABLE_NAME));
		bUnit.getUsers().add(user);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaN4GbEeuPkZNKCcfHxw" name="testAddNewUser" specification="_ARRlhoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>User user = new User();
		user.setbUnit(bUnit);
		user.setUserType(&quot;USER&quot;);
		user.setUserAlias(&quot;FakeUser&quot;);
		user.setNombre(&quot;OtroNombre&quot;);
		user.setApellido(&quot;OtroApellido&quot;);
		user.setPassword(user.passwordHash(&quot;MiOtroPassword&quot;));
		user.setActivo(true);
		assertNotNull(new User().addNewUser(conn, user));
		assertNotEquals(0, user.getId());
		assertEquals(3, user.getId());
		bUnit.getUsers().add(user);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaOIGbEeuPkZNKCcfHxw" name="testUpdateUserToDB" specification="_ARRli4GbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>User oldUser = new User().getUserByAlias(bUnit, &quot;FakeUser&quot;);
		User newUser = new User();
		newUser.setId(oldUser.getId());
		newUser.setbUnit(bUnit);
		newUser.setUserType(&quot;USER&quot;);
		newUser.setUserAlias(&quot;BigFakeUser&quot;);
		newUser.setNombre(&quot;UnNombre&quot;);
		newUser.setApellido(&quot;UnApellido&quot;);
		newUser.setPassword(newUser.passwordHash(&quot;NuevoPassword&quot;));
		newUser.setActivo(true);
		assertTrue(new User().updateUserToDB(conn, newUser));
		oldUser = newUser;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaOYGbEeuPkZNKCcfHxw" name="testGetUsersFromDB" specification="_ARRlkIGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertNotNull(new User().getUsersFromDB(conn, bUnit));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaOoGbEeuPkZNKCcfHxw" name="testGetUserByAlias" specification="_ARRllYGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertNotNull(new User().getUserByAlias(bUnit, &quot;FakeManager&quot;));
		assertEquals(&quot;MiNombre&quot;, new User().getUserByAlias(bUnit, &quot;FakeManager&quot;).getNombre());
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaO4GbEeuPkZNKCcfHxw" name="testGetUserById" specification="_ARRlmoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertNotNull(new User().getUserById(bUnit, 3));
		assertEquals(&quot;OtroNombre&quot;, new User().getUserById(bUnit, 3).getNombre());
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaPIGbEeuPkZNKCcfHxw" name="testCheckUserPassword" specification="_ARSMlIGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>User user = new User();
		user.setPassword(user.passwordHash(&quot;Pass123+&quot;));
		assertTrue(new User().checkUserPassword(user, &quot;Pass123+&quot;));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaPYGbEeuPkZNKCcfHxw" name="testGetDefaultAdminUser" specification="_ARSMmYGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertNotNull(new User().getDefaultAdminUser(conn));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaPoGbEeuPkZNKCcfHxw" name="testCheckDefaultAdminPassword" specification="_ARSMnoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>User user = new User();
		assertEquals(0, user.checkDefaultAdminPassword(conn));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaP4GbEeuPkZNKCcfHxw" name="testUpdateDefaultAdminUserToDb" specification="_ARSMo4GbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>User user = new User();
		user.setId(1);
		user.setUserAlias(&quot;NewDefaultAdmin&quot;);
		user.setNombre(&quot;NewAdminName&quot;);
		user.setApellido(&quot;NewAdminLastName&quot;);
		user.setPassword(&quot;NewSurferPass&quot;);
		assertTrue(user.updateDefaultAdminUserToDb(conn, user));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaQIGbEeuPkZNKCcfHxw" name="testGetBunitIdFromUser" specification="_ARSMqIGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>User user = new User();
		assertEquals(1, user.getBunitIdFromUser(conn, &quot;BigFakeUser&quot;, &quot;NuevoPassword&quot;));
		assertEquals(0, user.getBunitIdFromUser(conn, &quot;BigFakeUser&quot;, &quot;unPassword&quot;));
		assertEquals(0, user.getBunitIdFromUser(conn, &quot;ADMIN&quot;, &quot;NuevoPassword&quot;));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaQYGbEeuPkZNKCcfHxw" name="testGetUserId" specification="_ARSzpIGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>User user = new User();
		assertEquals(3, user.getUserId(conn, &quot;BigFakeUser&quot;, &quot;NuevoPassword&quot;));
		assertEquals(0, user.getUserId(conn, &quot;BigFakeUser&quot;, &quot;unPassword&quot;));
		assertEquals(0, user.getUserId(conn, &quot;ADMIN&quot;, &quot;NuevoPassword&quot;));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ARQ-cYGbEeuPkZNKCcfHxw" name="setUpBeforeClass" visibility="package" isStatic="true" method="_AZxaNIGbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARQ-dIGbEeuPkZNKCcfHxw" name="tearDownAfterClass" visibility="package" isStatic="true" method="_AZxaNYGbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARQ-d4GbEeuPkZNKCcfHxw" name="setUp" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARQ-eoGbEeuPkZNKCcfHxw" name="tearDown" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARRlgYGbEeuPkZNKCcfHxw" name="testSaveUserToDB" visibility="package" method="_AZxaNoGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARRlhoGbEeuPkZNKCcfHxw" name="testAddNewUser" visibility="package" method="_AZxaN4GbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARRli4GbEeuPkZNKCcfHxw" name="testUpdateUserToDB" visibility="package" method="_AZxaOIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARRlkIGbEeuPkZNKCcfHxw" name="testGetUsersFromDB" visibility="package" method="_AZxaOYGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARRllYGbEeuPkZNKCcfHxw" name="testGetUserByAlias" visibility="package" method="_AZxaOoGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARRlmoGbEeuPkZNKCcfHxw" name="testGetUserById" visibility="package" method="_AZxaO4GbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARSMlIGbEeuPkZNKCcfHxw" name="testCheckUserPassword" visibility="package" method="_AZxaPIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARSMmYGbEeuPkZNKCcfHxw" name="testGetDefaultAdminUser" visibility="package" method="_AZxaPYGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARSMnoGbEeuPkZNKCcfHxw" name="testCheckDefaultAdminPassword" visibility="package" method="_AZxaPoGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARSMo4GbEeuPkZNKCcfHxw" name="testUpdateDefaultAdminUserToDb" visibility="package" method="_AZxaP4GbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARSMqIGbEeuPkZNKCcfHxw" name="testGetBunitIdFromUser" visibility="package" method="_AZxaQIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARSzpIGbEeuPkZNKCcfHxw" name="testGetUserId" visibility="package" method="_AZxaQYGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ARTasIGbEeuPkZNKCcfHxw" name="UserTypeTest" visibility="package">
          <ownedAttribute xmi:id="_AZlM8IGbEeuPkZNKCcfHxw" name="conn" visibility="private" isStatic="true" type="_AYCU04GbEeuPkZNKCcfHxw" association="_AaOtPYGbEeuPkZNKCcfHxw"/>
          <ownedAttribute xmi:id="_AZlM8YGbEeuPkZNKCcfHxw" name="uType" visibility="private" isStatic="true" type="_AQhXk4GbEeuPkZNKCcfHxw" association="_AaPUQYGbEeuPkZNKCcfHxw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_AZlM8oGbEeuPkZNKCcfHxw" value="new UserType()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaQoGbEeuPkZNKCcfHxw" name="setUpBeforeClass" specification="_ARTasoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.setUrl(&quot;jdbc:postgresql://localhost:5432/devsurferdb&quot;);&#xD;
		PersistenceManager.setUser(&quot;surferadmin&quot;);&#xD;
		PersistenceManager.setPassword(&quot;surferpass&quot;);&#xD;
		conn = PersistenceManager.getConnection();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaQ4GbEeuPkZNKCcfHxw" name="tearDownAfterClass" specification="_ARTatYGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>PersistenceManager.closeDatabase(conn);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZxaRIGbEeuPkZNKCcfHxw" name="testGetUserTypesArray" specification="_ARUBxYGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>String[] usuarios = {&quot;ADMIN&quot;, &quot;MANAGER&quot;, &quot;USER&quot;};&#xD;
		String[] dbUsuarios = uType.getUserTypesArray();&#xD;
		for (int i = 0; i &lt; usuarios.length; i++) {&#xD;
			assertEquals(usuarios[i], dbUsuarios[i]);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZyBQIGbEeuPkZNKCcfHxw" name="testGetUserTypeId" specification="_ARUByoGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertEquals(1, uType.getUserTypeId(&quot;ADMIN&quot;));&#xD;
		assertEquals(-1, uType.getUserTypeId(&quot;EMPLOYEE&quot;));&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZyBQYGbEeuPkZNKCcfHxw" name="testGetUserType" specification="_ARUBzYGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>assertEquals(&quot;MANAGER&quot;, uType.getUserType(2));&#xD;
		assertNotNull(uType.getUserType(3));&#xD;
		assertNull(uType.getUserType(4));&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AZyBQoGbEeuPkZNKCcfHxw" name="testLoadData" specification="_ARUB0IGbEeuPkZNKCcfHxw">
            <language>java</language>
            <body>uType.loadData(conn);&#xD;
		assertTrue(uType.getUserTypes().size() > 0);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ARTasoGbEeuPkZNKCcfHxw" name="setUpBeforeClass" visibility="package" isStatic="true" method="_AZxaQoGbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARTatYGbEeuPkZNKCcfHxw" name="tearDownAfterClass" visibility="package" isStatic="true" method="_AZxaQ4GbEeuPkZNKCcfHxw" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARTauIGbEeuPkZNKCcfHxw" name="setUp" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARUBwoGbEeuPkZNKCcfHxw" name="tearDown" visibility="package" raisedException="_AYu4YIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARUBxYGbEeuPkZNKCcfHxw" name="testGetUserTypesArray" visibility="package" method="_AZxaRIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARUByoGbEeuPkZNKCcfHxw" name="testGetUserTypeId" visibility="package" method="_AZyBQIGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARUBzYGbEeuPkZNKCcfHxw" name="testGetUserType" visibility="package" method="_AZyBQYGbEeuPkZNKCcfHxw"/>
          <ownedOperation xmi:id="_ARUB0IGbEeuPkZNKCcfHxw" name="testLoadData" visibility="package" method="_AZyBQoGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AZ-Og4GbEeuPkZNKCcfHxw" name="" memberEnd="_AZ-OhIGbEeuPkZNKCcfHxw _AZOnoYGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AZ-OhIGbEeuPkZNKCcfHxw" name="" type="_AQWYcIGbEeuPkZNKCcfHxw" association="_AZ-Og4GbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AZ-1kYGbEeuPkZNKCcfHxw" name="" memberEnd="_AZ-1koGbEeuPkZNKCcfHxw _AZPOtYGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AZ-1koGbEeuPkZNKCcfHxw" name="" type="_AQaC0IGbEeuPkZNKCcfHxw" association="_AZ-1kYGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AZ-1lIGbEeuPkZNKCcfHxw" name="" memberEnd="_AZ-1lYGbEeuPkZNKCcfHxw _AZPOtoGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AZ-1lYGbEeuPkZNKCcfHxw" name="" type="_AQaC0IGbEeuPkZNKCcfHxw" association="_AZ-1lIGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AZ_coYGbEeuPkZNKCcfHxw" name="" memberEnd="_AZ_cooGbEeuPkZNKCcfHxw _AZQc14GbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AZ_cooGbEeuPkZNKCcfHxw" name="" type="_AQfiYIGbEeuPkZNKCcfHxw" association="_AZ_coYGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AZ_cpIGbEeuPkZNKCcfHxw" name="" memberEnd="_AZ_cpYGbEeuPkZNKCcfHxw _AZQc2IGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AZ_cpYGbEeuPkZNKCcfHxw" name="" type="_AQfiYIGbEeuPkZNKCcfHxw" association="_AZ_cpIGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AZ_cp4GbEeuPkZNKCcfHxw" name="" memberEnd="_AZ_cqIGbEeuPkZNKCcfHxw _AZQc2oGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AZ_cqIGbEeuPkZNKCcfHxw" name="" type="_AQfiYIGbEeuPkZNKCcfHxw" association="_AZ_cp4GbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AaM4DYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaM4DoGbEeuPkZNKCcfHxw _AZjXxoGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AaM4DoGbEeuPkZNKCcfHxw" name="" type="_ARH0gIGbEeuPkZNKCcfHxw" association="_AaM4DYGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AaNfEYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaNfEoGbEeuPkZNKCcfHxw _AZjXx4GbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AaNfEoGbEeuPkZNKCcfHxw" name="" type="_ARH0gIGbEeuPkZNKCcfHxw" association="_AaNfEYGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AaNfFIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaNfFYGbEeuPkZNKCcfHxw _AZjXyYGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AaNfFYGbEeuPkZNKCcfHxw" name="" type="_ARJCqIGbEeuPkZNKCcfHxw" association="_AaNfFIGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AaNfF4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaNfGIGbEeuPkZNKCcfHxw _AZj-0IGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AaNfGIGbEeuPkZNKCcfHxw" name="" type="_ARJCqIGbEeuPkZNKCcfHxw" association="_AaNfF4GbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AaNfGoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaNfG4GbEeuPkZNKCcfHxw _AZj-0oGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AaNfG4GbEeuPkZNKCcfHxw" name="" type="_ARJCqIGbEeuPkZNKCcfHxw" association="_AaNfGoGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AaOGIIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaOGIYGbEeuPkZNKCcfHxw _AZj-1IGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AaOGIYGbEeuPkZNKCcfHxw" name="" type="_ARK30IGbEeuPkZNKCcfHxw" association="_AaOGIIGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AaOGI4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaOGJIGbEeuPkZNKCcfHxw _AZj-1YGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AaOGJIGbEeuPkZNKCcfHxw" name="" type="_ARK30IGbEeuPkZNKCcfHxw" association="_AaOGI4GbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AaOGJoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaOGJ4GbEeuPkZNKCcfHxw _AZj-14GbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AaOGJ4GbEeuPkZNKCcfHxw" name="" type="_ARMtAIGbEeuPkZNKCcfHxw" association="_AaOGJoGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AaOGKYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaOGKoGbEeuPkZNKCcfHxw _AZj-2IGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AaOGKoGbEeuPkZNKCcfHxw" name="" type="_ARMtAIGbEeuPkZNKCcfHxw" association="_AaOGKYGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AaOGLIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaOGLYGbEeuPkZNKCcfHxw _AZj-2oGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AaOGLYGbEeuPkZNKCcfHxw" name="" type="_ARMtAIGbEeuPkZNKCcfHxw" association="_AaOGLIGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AaOtMYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaOtMoGbEeuPkZNKCcfHxw _AZkl4IGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AaOtMoGbEeuPkZNKCcfHxw" name="" type="_AROiNYGbEeuPkZNKCcfHxw" association="_AaOtMYGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AaOtNIGbEeuPkZNKCcfHxw" name="" memberEnd="_AaOtNYGbEeuPkZNKCcfHxw _AZkl4oGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AaOtNYGbEeuPkZNKCcfHxw" name="" type="_ARQXaoGbEeuPkZNKCcfHxw" association="_AaOtNIGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AaOtN4GbEeuPkZNKCcfHxw" name="" memberEnd="_AaOtOIGbEeuPkZNKCcfHxw _AZkl44GbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AaOtOIGbEeuPkZNKCcfHxw" name="" type="_ARQXaoGbEeuPkZNKCcfHxw" association="_AaOtN4GbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AaOtOoGbEeuPkZNKCcfHxw" name="" memberEnd="_AaOtO4GbEeuPkZNKCcfHxw _AZkl5YGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AaOtO4GbEeuPkZNKCcfHxw" name="" type="_ARQXaoGbEeuPkZNKCcfHxw" association="_AaOtOoGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AaOtPYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaOtPoGbEeuPkZNKCcfHxw _AZlM8IGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AaOtPoGbEeuPkZNKCcfHxw" name="" type="_ARTasIGbEeuPkZNKCcfHxw" association="_AaOtPYGbEeuPkZNKCcfHxw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_AaPUQYGbEeuPkZNKCcfHxw" name="" memberEnd="_AaPUQoGbEeuPkZNKCcfHxw _AZlM8YGbEeuPkZNKCcfHxw">
          <ownedEnd xmi:id="_AaPUQoGbEeuPkZNKCcfHxw" name="" type="_ARTasIGbEeuPkZNKCcfHxw" association="_AaPUQYGbEeuPkZNKCcfHxw"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_APLTwYGbEeuPkZNKCcfHxw" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_APLTwoGbEeuPkZNKCcfHxw" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_APLTw4GbEeuPkZNKCcfHxw" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_APLTxIGbEeuPkZNKCcfHxw" name="api">
            <packagedElement xmi:type="uml:Package" xmi:id="_APO-IIGbEeuPkZNKCcfHxw" name="MethodOrderer">
              <packagedElement xmi:type="uml:Class" xmi:id="_AYGmQoGbEeuPkZNKCcfHxw" name="OrderAnnotation"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AYEKAIGbEeuPkZNKCcfHxw" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_AYEKAoGbEeuPkZNKCcfHxw" name="AfterAll"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_AYEKBIGbEeuPkZNKCcfHxw" name="AfterEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_AYExEYGbEeuPkZNKCcfHxw" name="BeforeAll"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_AYExE4GbEeuPkZNKCcfHxw" name="BeforeEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_AYExFYGbEeuPkZNKCcfHxw" name="Disabled"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_AYExF4GbEeuPkZNKCcfHxw" name="Test"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_AYF_MIGbEeuPkZNKCcfHxw" name="Order"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_AYGmQIGbEeuPkZNKCcfHxw" name="TestMethodOrder"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_APT2oIGbEeuPkZNKCcfHxw" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_APT2oYGbEeuPkZNKCcfHxw" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_APqb8IGbEeuPkZNKCcfHxw" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_AYgO44GbEeuPkZNKCcfHxw" name="EmptyBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYJpkIGbEeuPkZNKCcfHxw" name="JOptionPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYLexIGbEeuPkZNKCcfHxw" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYLexoGbEeuPkZNKCcfHxw" name="JLabel"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_AYMF0YGbEeuPkZNKCcfHxw" name="SwingConstants"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYMF04GbEeuPkZNKCcfHxw" name="JTextPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYMF1YGbEeuPkZNKCcfHxw" name="UIManager"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYMF14GbEeuPkZNKCcfHxw" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYMs4YGbEeuPkZNKCcfHxw" name="JPasswordField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYMs44GbEeuPkZNKCcfHxw" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYMs5YGbEeuPkZNKCcfHxw" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYPwMIGbEeuPkZNKCcfHxw" name="AbstractAction"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_AYPwMoGbEeuPkZNKCcfHxw" name="Action"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYVPwYGbEeuPkZNKCcfHxw" name="DefaultListCellRenderer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYVPw4GbEeuPkZNKCcfHxw" name="JComboBox"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYXE9YGbEeuPkZNKCcfHxw" name="SwingUtilities"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYXE94GbEeuPkZNKCcfHxw" name="DefaultComboBoxModel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AYXsAYGbEeuPkZNKCcfHxw" name="JCheckBox"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="__-7RQoGaEeuPkZNKCcfHxw">
      <eAnnotations xmi:id="__-7RQ4GaEeuPkZNKCcfHxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
    <profileApplication xmi:id="_lH_W4IJREeuLTI0MOKBvew">
      <eAnnotations xmi:id="_lIDBQIJREeuLTI0MOKBvew" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://PHP_PROFILES/PHP.profile.uml#PHPProfile-Annotation-PHPProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://PHP_PROFILES/PHP.profile.uml#PHPProfile"/>
    </profileApplication>
    <profileApplication xmi:id="_DDY20IJWEeuLTI0MOKBvew">
      <eAnnotations xmi:id="_DDY20YJWEeuLTI0MOKBvew" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://ZEND_PROFILES/Zend.profile.uml#ZENDStyle-Annotation-ZENDStyle"/>
      </eAnnotations>
      <appliedProfile href="pathmap://ZEND_PROFILES/Zend.profile.uml#ZENDStyle"/>
    </profileApplication>
    <profileApplication xmi:id="_DesSwIJWEeuLTI0MOKBvew">
      <eAnnotations xmi:id="_DesSwYJWEeuLTI0MOKBvew" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://PERSISTENCY_PROFILES/Persistency.profile.uml#Persistency_2-Annotation-Persistency"/>
      </eAnnotations>
      <appliedProfile href="pathmap://PERSISTENCY_PROFILES/Persistency.profile.uml#Persistency_2"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="__-7RRIGaEeuPkZNKCcfHxw" base_Package="__6SB0IGaEeuPkZNKCcfHxw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AQVKVIGbEeuPkZNKCcfHxw" base_Element="_AQVKUYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AQVxaoGbEeuPkZNKCcfHxw" base_Element="_AQVxZ4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AQW_gYGbEeuPkZNKCcfHxw" base_Element="_AQW_gIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AQW_goGbEeuPkZNKCcfHxw" base_Element="_AQW_gIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQW_g4GbEeuPkZNKCcfHxw" name="BeforeAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AQW_hYGbEeuPkZNKCcfHxw" base_Element="_AQW_hIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AQW_hoGbEeuPkZNKCcfHxw" base_Element="_AQW_hIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQW_h4GbEeuPkZNKCcfHxw" name="AfterAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AQXmkIGbEeuPkZNKCcfHxw" base_Element="_AQW_iIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AQXmkYGbEeuPkZNKCcfHxw" base_Element="_AQW_iIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQXmkoGbEeuPkZNKCcfHxw" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AQXmlIGbEeuPkZNKCcfHxw" base_Element="_AQXmk4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AQXmlYGbEeuPkZNKCcfHxw" base_Element="_AQXmk4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQXmloGbEeuPkZNKCcfHxw" name="AfterEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AQXmmIGbEeuPkZNKCcfHxw" base_Element="_AQXml4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AQXmmYGbEeuPkZNKCcfHxw" base_Element="_AQXml4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQXmmoGbEeuPkZNKCcfHxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AQXmnIGbEeuPkZNKCcfHxw" base_Element="_AQXmm4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AQXmnYGbEeuPkZNKCcfHxw" base_Element="_AQXmm4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQXmnoGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_AQXmn4GbEeuPkZNKCcfHxw" name="Disabled">
      <annotationParameters xmi:id="_AQXmoIGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZzPYIGbEeuPkZNKCcfHxw" value="&quot;Don't really need this&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AQXmooGbEeuPkZNKCcfHxw" base_Element="_AQXmoYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AQYNoIGbEeuPkZNKCcfHxw" base_Element="_AQXmoYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQYNoYGbEeuPkZNKCcfHxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AQYNo4GbEeuPkZNKCcfHxw" base_Element="_AQYNooGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AQYNpIGbEeuPkZNKCcfHxw" base_Element="_AQYNooGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQYNpYGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_AQYNpoGbEeuPkZNKCcfHxw" name="Disabled">
      <annotationParameters xmi:id="_AQYNp4GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZzPYYGbEeuPkZNKCcfHxw" value="&quot;BussinesUnit class not yet tested&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AQaC0YGbEeuPkZNKCcfHxw" base_Element="_AQaC0IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AQaC04GbEeuPkZNKCcfHxw" base_Element="_AQaC0oGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQaC1IGbEeuPkZNKCcfHxw" name="BeforeAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQaC1oGbEeuPkZNKCcfHxw" base_Element="_AQaC1YGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQaC14GbEeuPkZNKCcfHxw" name="AfterAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQap4IGbEeuPkZNKCcfHxw" base_Element="_AQaC2IGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQap4YGbEeuPkZNKCcfHxw" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQap44GbEeuPkZNKCcfHxw" base_Element="_AQap4oGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQap5IGbEeuPkZNKCcfHxw" name="AfterEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQap5oGbEeuPkZNKCcfHxw" base_Element="_AQap5YGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQap54GbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_AQap6IGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_AQap6YGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZzPY4GbEeuPkZNKCcfHxw" value="1"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQap64GbEeuPkZNKCcfHxw" base_Element="_AQap6oGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQap7IGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_AQap7YGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_AQap7oGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZzPZIGbEeuPkZNKCcfHxw" value="2"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQap8IGbEeuPkZNKCcfHxw" base_Element="_AQap74GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQap8YGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_AQap8oGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_AQap84GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZzPZYGbEeuPkZNKCcfHxw" value="6"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQap9YGbEeuPkZNKCcfHxw" base_Element="_AQap9IGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQap9oGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_AQbQ8IGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_AQbQ8YGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZzPZoGbEeuPkZNKCcfHxw" value="3"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQbQ84GbEeuPkZNKCcfHxw" base_Element="_AQbQ8oGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQbQ9IGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_AQbQ9YGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_AQbQ9oGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZzPZ4GbEeuPkZNKCcfHxw" value="4"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQbQ-IGbEeuPkZNKCcfHxw" base_Element="_AQbQ94GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQbQ-YGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_AQbQ-oGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_AQbQ-4GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZzPaIGbEeuPkZNKCcfHxw" value="5"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQbQ_IGbEeuPkZNKCcfHxw" base_Element="_AQaC0IGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQbQ_YGbEeuPkZNKCcfHxw" name="TestMethodOrder">
      <annotationParameters xmi:id="_AQbQ_oGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZzPYoGbEeuPkZNKCcfHxw" value="OrderAnnotation.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AQb4BIGbEeuPkZNKCcfHxw" base_Element="_AQb4AYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AQdtM4GbEeuPkZNKCcfHxw" base_Element="_AQdtMIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AQfiYYGbEeuPkZNKCcfHxw" base_Element="_AQfiYIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AQfiY4GbEeuPkZNKCcfHxw" base_Element="_AQfiYoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQgJcIGbEeuPkZNKCcfHxw" name="BeforeAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQgJcoGbEeuPkZNKCcfHxw" base_Element="_AQgJcYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQgJc4GbEeuPkZNKCcfHxw" name="AfterAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQgJdYGbEeuPkZNKCcfHxw" base_Element="_AQgJdIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQgJdoGbEeuPkZNKCcfHxw" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQgJeIGbEeuPkZNKCcfHxw" base_Element="_AQgJd4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQgJeYGbEeuPkZNKCcfHxw" name="AfterEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQgJe4GbEeuPkZNKCcfHxw" base_Element="_AQgJeoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQgJfIGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_AQgJfYGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_AQgJfoGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZz2c4GbEeuPkZNKCcfHxw" value="1"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQgJgIGbEeuPkZNKCcfHxw" base_Element="_AQgJf4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQgJgYGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_AQgwgIGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_AQgwgYGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZz2dIGbEeuPkZNKCcfHxw" value="4"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQgwg4GbEeuPkZNKCcfHxw" base_Element="_AQgwgoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQgwhIGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_AQgwhYGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_AQgwhoGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZz2dYGbEeuPkZNKCcfHxw" value="5"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQgwiIGbEeuPkZNKCcfHxw" base_Element="_AQgwh4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQgwiYGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_AQgwioGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_AQgwi4GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZz2doGbEeuPkZNKCcfHxw" value="6"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQgwjYGbEeuPkZNKCcfHxw" base_Element="_AQgwjIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQgwjoGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_AQgwj4GbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_AQgwkIGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZz2d4GbEeuPkZNKCcfHxw" value="7"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQgwkoGbEeuPkZNKCcfHxw" base_Element="_AQgwkYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQgwk4GbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_AQgwlIGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_AQgwlYGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZz2eIGbEeuPkZNKCcfHxw" value="3"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQgwl4GbEeuPkZNKCcfHxw" base_Element="_AQgwloGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQgwmIGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_AQgwmYGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_AQgwmoGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZz2eYGbEeuPkZNKCcfHxw" value="2"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AQhXkIGbEeuPkZNKCcfHxw" base_Element="_AQfiYIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQhXkYGbEeuPkZNKCcfHxw" name="TestMethodOrder">
      <annotationParameters xmi:id="_AQhXkoGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZz2coGbEeuPkZNKCcfHxw" value="OrderAnnotation.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_AQh-qYGbEeuPkZNKCcfHxw" base_Element="_AQh-poGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Array xmi:id="_AQoFSoGbEeuPkZNKCcfHxw" base_Element="_AQoFR4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Array xmi:id="_AQp6d4GbEeuPkZNKCcfHxw" base_Element="_AQp6dIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AQrIk4GbEeuPkZNKCcfHxw" base_Element="_AQrIkYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQrIlIGbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_AQrvoIGbEeuPkZNKCcfHxw" genericsValue="String, Timestamp" base_Element="_AQrIloGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Generics xmi:id="_AQrvooGbEeuPkZNKCcfHxw" genericsValue="String, Timestamp" base_Element="_AQrvoYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Array xmi:id="_AQwoJIGbEeuPkZNKCcfHxw" base_Element="_AQwoIIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Array xmi:id="_AQxPMYGbEeuPkZNKCcfHxw" base_Element="_AQwoKYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Array xmi:id="_AQxPOoGbEeuPkZNKCcfHxw" base_Element="_AQxPN4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AQ0SgIGbEeuPkZNKCcfHxw" base_Element="_AQzre4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AQ0SgYGbEeuPkZNKCcfHxw" base_Element="_AQzre4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQ0SgoGbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AQ4j-4GbEeuPkZNKCcfHxw" base_Element="_AQ4j-oGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AQ4j_IGbEeuPkZNKCcfHxw" base_Element="_AQ4j-oGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQ5LAIGbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_AQ7ANYGbEeuPkZNKCcfHxw" base_Element="_AQ7AMYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AQ81Z4GbEeuPkZNKCcfHxw" base_Element="_AQ81ZoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AQ81aIGbEeuPkZNKCcfHxw" base_Element="_AQ81ZoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AQ81aYGbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARH0gYGbEeuPkZNKCcfHxw" base_Element="_ARH0gIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_ARH0g4GbEeuPkZNKCcfHxw" base_Element="_ARH0goGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARH0hIGbEeuPkZNKCcfHxw" name="BeforeAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARIbkIGbEeuPkZNKCcfHxw" base_Element="_ARH0hYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARIbkYGbEeuPkZNKCcfHxw" name="AfterAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARIbk4GbEeuPkZNKCcfHxw" base_Element="_ARIbkoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARIblIGbEeuPkZNKCcfHxw" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARIbloGbEeuPkZNKCcfHxw" base_Element="_ARIblYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARIbl4GbEeuPkZNKCcfHxw" name="AfterEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARIbmYGbEeuPkZNKCcfHxw" base_Element="_ARIbmIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARIbmoGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARIbm4GbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARIbnIGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ3g6YGbEeuPkZNKCcfHxw" value="2"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARIbnoGbEeuPkZNKCcfHxw" base_Element="_ARIbnYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARIbn4GbEeuPkZNKCcfHxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARIboYGbEeuPkZNKCcfHxw" base_Element="_ARIboIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARIbooGbEeuPkZNKCcfHxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARJCoYGbEeuPkZNKCcfHxw" base_Element="_ARJCoIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARJCooGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARJCo4GbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARJCpIGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ3g6oGbEeuPkZNKCcfHxw" value="1"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARJCpYGbEeuPkZNKCcfHxw" base_Element="_ARH0gIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARJCpoGbEeuPkZNKCcfHxw" name="TestMethodOrder">
      <annotationParameters xmi:id="_ARJCp4GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ3g6IGbEeuPkZNKCcfHxw" value="OrderAnnotation.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARJpsIGbEeuPkZNKCcfHxw" base_Element="_ARJCqIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_ARJpsoGbEeuPkZNKCcfHxw" base_Element="_ARJpsYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARJps4GbEeuPkZNKCcfHxw" name="BeforeAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARJptYGbEeuPkZNKCcfHxw" base_Element="_ARJptIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARJptoGbEeuPkZNKCcfHxw" name="AfterAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARJpuIGbEeuPkZNKCcfHxw" base_Element="_ARJpt4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARJpuYGbEeuPkZNKCcfHxw" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARJpu4GbEeuPkZNKCcfHxw" base_Element="_ARJpuoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARJpvIGbEeuPkZNKCcfHxw" name="AfterEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARKQwIGbEeuPkZNKCcfHxw" base_Element="_ARJpvYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARKQwYGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARKQwoGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARKQw4GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ3g7IGbEeuPkZNKCcfHxw" value="1"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARKQxYGbEeuPkZNKCcfHxw" base_Element="_ARKQxIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARKQxoGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARKQx4GbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARKQyIGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ3g7YGbEeuPkZNKCcfHxw" value="2"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARKQyoGbEeuPkZNKCcfHxw" base_Element="_ARKQyYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARKQy4GbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARKQzIGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARKQzYGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ3g7oGbEeuPkZNKCcfHxw" value="5"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARKQz4GbEeuPkZNKCcfHxw" base_Element="_ARKQzoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARKQ0IGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARKQ0YGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARKQ0oGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ3g74GbEeuPkZNKCcfHxw" value="3"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARKQ1IGbEeuPkZNKCcfHxw" base_Element="_ARKQ04GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARKQ1YGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARKQ1oGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARKQ14GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ3g8IGbEeuPkZNKCcfHxw" value="4"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARKQ2IGbEeuPkZNKCcfHxw" base_Element="_ARJCqIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARKQ2YGbEeuPkZNKCcfHxw" name="TestMethodOrder">
      <annotationParameters xmi:id="_ARKQ2oGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ3g64GbEeuPkZNKCcfHxw" value="OrderAnnotation.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARK30YGbEeuPkZNKCcfHxw" base_Element="_ARK30IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_ARLe4IGbEeuPkZNKCcfHxw" base_Element="_ARK30oGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARLe4YGbEeuPkZNKCcfHxw" name="BeforeAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARLe44GbEeuPkZNKCcfHxw" base_Element="_ARLe4oGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARLe5IGbEeuPkZNKCcfHxw" name="AfterAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARLe5oGbEeuPkZNKCcfHxw" base_Element="_ARLe5YGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARLe54GbEeuPkZNKCcfHxw" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARLe6YGbEeuPkZNKCcfHxw" base_Element="_ARLe6IGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARLe6oGbEeuPkZNKCcfHxw" name="AfterEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARLe7IGbEeuPkZNKCcfHxw" base_Element="_ARLe64GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARLe7YGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARLe7oGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARLe74GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ3g8oGbEeuPkZNKCcfHxw" value="4"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARMF8IGbEeuPkZNKCcfHxw" base_Element="_ARLe8IGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARMF8YGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARMF8oGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARMF84GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H4IGbEeuPkZNKCcfHxw" value="5"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARMF9YGbEeuPkZNKCcfHxw" base_Element="_ARMF9IGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARMF9oGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARMF94GbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARMF-IGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H4YGbEeuPkZNKCcfHxw" value="6"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARMF-oGbEeuPkZNKCcfHxw" base_Element="_ARMF-YGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARMF-4GbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARMF_IGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARMF_YGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H4oGbEeuPkZNKCcfHxw" value="3"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARMF_4GbEeuPkZNKCcfHxw" base_Element="_ARMF_oGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARMGAIGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARMGAYGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARMGAoGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H44GbEeuPkZNKCcfHxw" value="1"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARMGBIGbEeuPkZNKCcfHxw" base_Element="_ARMGA4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARMGBYGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARMGBoGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARMGB4GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H5IGbEeuPkZNKCcfHxw" value="2"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARMGCIGbEeuPkZNKCcfHxw" base_Element="_ARK30IGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARMGCYGbEeuPkZNKCcfHxw" name="TestMethodOrder">
      <annotationParameters xmi:id="_ARMGCoGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ3g8YGbEeuPkZNKCcfHxw" value="OrderAnnotation.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARMtAYGbEeuPkZNKCcfHxw" base_Element="_ARMtAIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_ARNUEIGbEeuPkZNKCcfHxw" base_Element="_ARMtAoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARNUEYGbEeuPkZNKCcfHxw" name="BeforeAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARNUE4GbEeuPkZNKCcfHxw" base_Element="_ARNUEoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARNUFIGbEeuPkZNKCcfHxw" name="AfterAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARNUFoGbEeuPkZNKCcfHxw" base_Element="_ARNUFYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARNUF4GbEeuPkZNKCcfHxw" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARNUGYGbEeuPkZNKCcfHxw" base_Element="_ARNUGIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARNUGoGbEeuPkZNKCcfHxw" name="AfterEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARNUHIGbEeuPkZNKCcfHxw" base_Element="_ARNUG4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARNUHYGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARNUHoGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARNUH4GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H5oGbEeuPkZNKCcfHxw" value="1"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARN7IIGbEeuPkZNKCcfHxw" base_Element="_ARNUIIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARN7IYGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARN7IoGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARN7I4GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H54GbEeuPkZNKCcfHxw" value="2"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARN7JYGbEeuPkZNKCcfHxw" base_Element="_ARN7JIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARN7JoGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARN7J4GbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARN7KIGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H6IGbEeuPkZNKCcfHxw" value="7"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARN7KoGbEeuPkZNKCcfHxw" base_Element="_ARN7KYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARN7K4GbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARN7LIGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARN7LYGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H6YGbEeuPkZNKCcfHxw" value="3"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARN7L4GbEeuPkZNKCcfHxw" base_Element="_ARN7LoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARN7MIGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARN7MYGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARN7MoGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H6oGbEeuPkZNKCcfHxw" value="4"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARN7NIGbEeuPkZNKCcfHxw" base_Element="_ARN7M4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARN7NYGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARN7NoGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARN7N4GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H64GbEeuPkZNKCcfHxw" value="5"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARN7OYGbEeuPkZNKCcfHxw" base_Element="_ARN7OIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARN7OoGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_AROiMIGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_AROiMYGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H7IGbEeuPkZNKCcfHxw" value="6"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AROiMoGbEeuPkZNKCcfHxw" base_Element="_ARMtAIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AROiM4GbEeuPkZNKCcfHxw" name="TestMethodOrder">
      <annotationParameters xmi:id="_AROiNIGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H5YGbEeuPkZNKCcfHxw" value="OrderAnnotation.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARPJQYGbEeuPkZNKCcfHxw" base_Element="_ARPJQIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_ARPJQoGbEeuPkZNKCcfHxw" base_Element="_ARPJQIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARPJQ4GbEeuPkZNKCcfHxw" name="BeforeAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARPJRYGbEeuPkZNKCcfHxw" base_Element="_ARPJRIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_ARPJRoGbEeuPkZNKCcfHxw" base_Element="_ARPJRIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARPJR4GbEeuPkZNKCcfHxw" name="AfterAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARPJSYGbEeuPkZNKCcfHxw" base_Element="_ARPJSIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_ARPJSoGbEeuPkZNKCcfHxw" base_Element="_ARPJSIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARPJS4GbEeuPkZNKCcfHxw" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARPJTYGbEeuPkZNKCcfHxw" base_Element="_ARPJTIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_ARPwUIGbEeuPkZNKCcfHxw" base_Element="_ARPJTIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARPwUYGbEeuPkZNKCcfHxw" name="AfterEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARPwU4GbEeuPkZNKCcfHxw" base_Element="_ARPwUoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_ARPwVIGbEeuPkZNKCcfHxw" base_Element="_ARPwUoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARPwVYGbEeuPkZNKCcfHxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARPwV4GbEeuPkZNKCcfHxw" base_Element="_ARPwVoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_ARPwWIGbEeuPkZNKCcfHxw" base_Element="_ARPwVoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARPwWYGbEeuPkZNKCcfHxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARPwW4GbEeuPkZNKCcfHxw" base_Element="_ARPwWoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_ARPwXIGbEeuPkZNKCcfHxw" base_Element="_ARPwWoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARPwXYGbEeuPkZNKCcfHxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARPwX4GbEeuPkZNKCcfHxw" base_Element="_ARPwXoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_ARPwYIGbEeuPkZNKCcfHxw" base_Element="_ARPwXoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARPwYYGbEeuPkZNKCcfHxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARPwY4GbEeuPkZNKCcfHxw" base_Element="_ARPwYoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_ARQXYIGbEeuPkZNKCcfHxw" base_Element="_ARPwYoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARQXYYGbEeuPkZNKCcfHxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARQXY4GbEeuPkZNKCcfHxw" base_Element="_ARQXYoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_ARQXZIGbEeuPkZNKCcfHxw" base_Element="_ARQXYoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARQXZYGbEeuPkZNKCcfHxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARQXZ4GbEeuPkZNKCcfHxw" base_Element="_ARQXZoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_ARQXaIGbEeuPkZNKCcfHxw" base_Element="_ARQXZoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARQXaYGbEeuPkZNKCcfHxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARQ-cIGbEeuPkZNKCcfHxw" base_Element="_ARQXaoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_ARQ-coGbEeuPkZNKCcfHxw" base_Element="_ARQ-cYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARQ-c4GbEeuPkZNKCcfHxw" name="BeforeAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARQ-dYGbEeuPkZNKCcfHxw" base_Element="_ARQ-dIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARQ-doGbEeuPkZNKCcfHxw" name="AfterAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARQ-eIGbEeuPkZNKCcfHxw" base_Element="_ARQ-d4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARQ-eYGbEeuPkZNKCcfHxw" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARQ-e4GbEeuPkZNKCcfHxw" base_Element="_ARQ-eoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARRlgIGbEeuPkZNKCcfHxw" name="AfterEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARRlgoGbEeuPkZNKCcfHxw" base_Element="_ARRlgYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARRlg4GbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARRlhIGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARRlhYGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H7oGbEeuPkZNKCcfHxw" value="2"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARRlh4GbEeuPkZNKCcfHxw" base_Element="_ARRlhoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARRliIGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARRliYGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARRlioGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H74GbEeuPkZNKCcfHxw" value="3"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARRljIGbEeuPkZNKCcfHxw" base_Element="_ARRli4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARRljYGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARRljoGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARRlj4GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H8IGbEeuPkZNKCcfHxw" value="7"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARRlkYGbEeuPkZNKCcfHxw" base_Element="_ARRlkIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARRlkoGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARRlk4GbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARRllIGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H8YGbEeuPkZNKCcfHxw" value="4"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARRlloGbEeuPkZNKCcfHxw" base_Element="_ARRllYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARRll4GbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARRlmIGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARRlmYGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H8oGbEeuPkZNKCcfHxw" value="5"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARSMkIGbEeuPkZNKCcfHxw" base_Element="_ARRlmoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARSMkYGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARSMkoGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARSMk4GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H84GbEeuPkZNKCcfHxw" value="6"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARSMlYGbEeuPkZNKCcfHxw" base_Element="_ARSMlIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARSMloGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARSMl4GbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARSMmIGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H9IGbEeuPkZNKCcfHxw" value="1"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARSMmoGbEeuPkZNKCcfHxw" base_Element="_ARSMmYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARSMm4GbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARSMnIGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARSMnYGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H9YGbEeuPkZNKCcfHxw" value="8"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARSMn4GbEeuPkZNKCcfHxw" base_Element="_ARSMnoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARSMoIGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARSMoYGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARSMooGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H9oGbEeuPkZNKCcfHxw" value="9"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARSMpIGbEeuPkZNKCcfHxw" base_Element="_ARSMo4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARSMpYGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARSMpoGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARSMp4GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H94GbEeuPkZNKCcfHxw" value="10"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARSzoIGbEeuPkZNKCcfHxw" base_Element="_ARSMqIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARSzoYGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARSzooGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARSzo4GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H-IGbEeuPkZNKCcfHxw" value="11"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARSzpYGbEeuPkZNKCcfHxw" base_Element="_ARSzpIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARSzpoGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARSzp4GbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARSzqIGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H-YGbEeuPkZNKCcfHxw" value="12"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARSzqYGbEeuPkZNKCcfHxw" base_Element="_ARQXaoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARSzqoGbEeuPkZNKCcfHxw" name="TestMethodOrder">
      <annotationParameters xmi:id="_ARSzq4GbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H7YGbEeuPkZNKCcfHxw" value="OrderAnnotation.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARTasYGbEeuPkZNKCcfHxw" base_Element="_ARTasIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_ARTas4GbEeuPkZNKCcfHxw" base_Element="_ARTasoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARTatIGbEeuPkZNKCcfHxw" name="BeforeAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARTatoGbEeuPkZNKCcfHxw" base_Element="_ARTatYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARTat4GbEeuPkZNKCcfHxw" name="AfterAll"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARUBwIGbEeuPkZNKCcfHxw" base_Element="_ARTauIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARUBwYGbEeuPkZNKCcfHxw" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARUBw4GbEeuPkZNKCcfHxw" base_Element="_ARUBwoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARUBxIGbEeuPkZNKCcfHxw" name="AfterEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARUBxoGbEeuPkZNKCcfHxw" base_Element="_ARUBxYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARUBx4GbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARUByIGbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARUByYGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H-4GbEeuPkZNKCcfHxw" value="2"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARUBy4GbEeuPkZNKCcfHxw" base_Element="_ARUByoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARUBzIGbEeuPkZNKCcfHxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARUBzoGbEeuPkZNKCcfHxw" base_Element="_ARUBzYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARUBz4GbEeuPkZNKCcfHxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARUB0YGbEeuPkZNKCcfHxw" base_Element="_ARUB0IGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARUB0oGbEeuPkZNKCcfHxw" name="Test"/>
    <annotations xmi:id="_ARUB04GbEeuPkZNKCcfHxw" name="Order">
      <annotationParameters xmi:id="_ARUB1IGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H_IGbEeuPkZNKCcfHxw" value="1"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_ARUo0IGbEeuPkZNKCcfHxw" base_Element="_ARTasIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_ARUo0YGbEeuPkZNKCcfHxw" name="TestMethodOrder">
      <annotationParameters xmi:id="_ARUo0oGbEeuPkZNKCcfHxw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_AZ4H-oGbEeuPkZNKCcfHxw" value="OrderAnnotation.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_AYCU0IGbEeuPkZNKCcfHxw" base_Element="_AYBtwIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYCU0oGbEeuPkZNKCcfHxw" base_Element="_AYCU0YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYCU1IGbEeuPkZNKCcfHxw" base_Element="_AYCU04GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYC74YGbEeuPkZNKCcfHxw" base_Element="_AYC74IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYC744GbEeuPkZNKCcfHxw" base_Element="_AYC74oGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYC75YGbEeuPkZNKCcfHxw" base_Element="_AYC75IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYC754GbEeuPkZNKCcfHxw" base_Element="_AYC75oGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYDi8IGbEeuPkZNKCcfHxw" base_Element="_AYC76IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYEKAYGbEeuPkZNKCcfHxw" base_Element="_AYEKAIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYEKA4GbEeuPkZNKCcfHxw" base_Element="_AYEKAoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYExEIGbEeuPkZNKCcfHxw" base_Element="_AYEKBIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYExEoGbEeuPkZNKCcfHxw" base_Element="_AYExEYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYExFIGbEeuPkZNKCcfHxw" base_Element="_AYExE4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYExFoGbEeuPkZNKCcfHxw" base_Element="_AYExFYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYExGIGbEeuPkZNKCcfHxw" base_Element="_AYExF4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYFYIYGbEeuPkZNKCcfHxw" base_Element="_AYFYIIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYF_MYGbEeuPkZNKCcfHxw" base_Element="_AYF_MIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYGmQYGbEeuPkZNKCcfHxw" base_Element="_AYGmQIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYGmQ4GbEeuPkZNKCcfHxw" base_Element="_AYGmQoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYIbcIGbEeuPkZNKCcfHxw" base_Element="_AYH0YoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYIbcoGbEeuPkZNKCcfHxw" base_Element="_AYIbcYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYIbdIGbEeuPkZNKCcfHxw" base_Element="_AYIbc4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYJpkYGbEeuPkZNKCcfHxw" base_Element="_AYJpkIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYKQoYGbEeuPkZNKCcfHxw" base_Element="_AYKQoIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYK3sIGbEeuPkZNKCcfHxw" base_Element="_AYKQooGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYK3soGbEeuPkZNKCcfHxw" base_Element="_AYK3sYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYLexYGbEeuPkZNKCcfHxw" base_Element="_AYLexIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYLex4GbEeuPkZNKCcfHxw" base_Element="_AYLexoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYMF0IGbEeuPkZNKCcfHxw" base_Element="_AYLeyIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYMF0oGbEeuPkZNKCcfHxw" base_Element="_AYMF0YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYMF1IGbEeuPkZNKCcfHxw" base_Element="_AYMF04GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYMF1oGbEeuPkZNKCcfHxw" base_Element="_AYMF1YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYMs4IGbEeuPkZNKCcfHxw" base_Element="_AYMF14GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYMs4oGbEeuPkZNKCcfHxw" base_Element="_AYMs4YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYMs5IGbEeuPkZNKCcfHxw" base_Element="_AYMs44GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYMs5oGbEeuPkZNKCcfHxw" base_Element="_AYMs5YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYMs6IGbEeuPkZNKCcfHxw" base_Element="_AYMs54GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYNT8IGbEeuPkZNKCcfHxw" base_Element="_AYMs6YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYNT8oGbEeuPkZNKCcfHxw" base_Element="_AYNT8YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYNT9IGbEeuPkZNKCcfHxw" base_Element="_AYNT84GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYPJIIGbEeuPkZNKCcfHxw" base_Element="_AYOiEIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYPJIoGbEeuPkZNKCcfHxw" base_Element="_AYPJIYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYPJJIGbEeuPkZNKCcfHxw" base_Element="_AYPJI4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYPJJoGbEeuPkZNKCcfHxw" base_Element="_AYPJJYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYPJKIGbEeuPkZNKCcfHxw" base_Element="_AYPJJ4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYPwMYGbEeuPkZNKCcfHxw" base_Element="_AYPwMIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYPwM4GbEeuPkZNKCcfHxw" base_Element="_AYPwMoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYRlYYGbEeuPkZNKCcfHxw" base_Element="_AYRlYIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYRlY4GbEeuPkZNKCcfHxw" base_Element="_AYRlYoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYRlZYGbEeuPkZNKCcfHxw" base_Element="_AYRlZIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYSzgIGbEeuPkZNKCcfHxw" base_Element="_AYSMcIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYSzgoGbEeuPkZNKCcfHxw" base_Element="_AYSzgYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYSzhIGbEeuPkZNKCcfHxw" base_Element="_AYSzg4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYSzhoGbEeuPkZNKCcfHxw" base_Element="_AYSzhYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYSziIGbEeuPkZNKCcfHxw" base_Element="_AYSzh4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYVPwIGbEeuPkZNKCcfHxw" base_Element="_AYUosIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYVPwoGbEeuPkZNKCcfHxw" base_Element="_AYVPwYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYVPxIGbEeuPkZNKCcfHxw" base_Element="_AYVPw4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYVPxoGbEeuPkZNKCcfHxw" base_Element="_AYVPxYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYWd4YGbEeuPkZNKCcfHxw" base_Element="_AYWd4IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYWd44GbEeuPkZNKCcfHxw" base_Element="_AYWd4oGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYXE8IGbEeuPkZNKCcfHxw" base_Element="_AYWd5IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYXE8oGbEeuPkZNKCcfHxw" base_Element="_AYXE8YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYXE9IGbEeuPkZNKCcfHxw" base_Element="_AYXE84GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYXE9oGbEeuPkZNKCcfHxw" base_Element="_AYXE9YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYXsAIGbEeuPkZNKCcfHxw" base_Element="_AYXE94GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYXsAoGbEeuPkZNKCcfHxw" base_Element="_AYXsAYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYfn0YGbEeuPkZNKCcfHxw" base_Element="_AYfn0IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYfn04GbEeuPkZNKCcfHxw" base_Element="_AYfn0oGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYgO4IGbEeuPkZNKCcfHxw" base_Element="_AYfn1IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYgO4oGbEeuPkZNKCcfHxw" base_Element="_AYgO4YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYgO5IGbEeuPkZNKCcfHxw" base_Element="_AYgO44GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYiEEIGbEeuPkZNKCcfHxw" base_Element="_AYhdAIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYiEEoGbEeuPkZNKCcfHxw" base_Element="_AYiEEYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYu4YYGbEeuPkZNKCcfHxw" base_Element="_AYu4YIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AYx7sYGbEeuPkZNKCcfHxw" base_Element="_AYx7sIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AY20MIGbEeuPkZNKCcfHxw" base_Element="_AY2NL4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AY20MYGbEeuPkZNKCcfHxw" base_Element="_AY2NL4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AY20MoGbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AY20NYGbEeuPkZNKCcfHxw" base_Element="_AY20M4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AY20NoGbEeuPkZNKCcfHxw" base_Element="_AY20M4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AY20N4GbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AY20OoGbEeuPkZNKCcfHxw" base_Element="_AY20OIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AY20O4GbEeuPkZNKCcfHxw" base_Element="_AY20OIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AY20PIGbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AY20P4GbEeuPkZNKCcfHxw" base_Element="_AY20PYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AY3bQIGbEeuPkZNKCcfHxw" base_Element="_AY20PYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AY3bQYGbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_AY4paYGbEeuPkZNKCcfHxw" genericsValue="String, Timestamp" base_Element="_AY4paIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Generics xmi:id="_AY5QcIGbEeuPkZNKCcfHxw" genericsValue="String, Timestamp" base_Element="_AY4pbIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AY8Tw4GbEeuPkZNKCcfHxw" base_Element="_AY8TwYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AY8TxIGbEeuPkZNKCcfHxw" base_Element="_AY8TwYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AY8TxYGbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AY8TyYGbEeuPkZNKCcfHxw" base_Element="_AY8Tx4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AY8TyoGbEeuPkZNKCcfHxw" base_Element="_AY8Tx4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AY8Ty4GbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AY860oGbEeuPkZNKCcfHxw" base_Element="_AY860IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AY8604GbEeuPkZNKCcfHxw" base_Element="_AY860IGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AY861IGbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AY862IGbEeuPkZNKCcfHxw" base_Element="_AY861oGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AY862YGbEeuPkZNKCcfHxw" base_Element="_AY861oGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AY862oGbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AY9h4IGbEeuPkZNKCcfHxw" base_Element="_AY863IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AY9h4YGbEeuPkZNKCcfHxw" base_Element="_AY863IGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AY9h4oGbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZBzU4GbEeuPkZNKCcfHxw" base_Element="_AZBzUYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AZBzVIGbEeuPkZNKCcfHxw" base_Element="_AZBzUYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AZBzVYGbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZBzWYGbEeuPkZNKCcfHxw" base_Element="_AZBzV4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AZBzWoGbEeuPkZNKCcfHxw" base_Element="_AZBzV4GbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AZBzW4GbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZE2ooGbEeuPkZNKCcfHxw" base_Element="_AZE2oIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AZE2o4GbEeuPkZNKCcfHxw" base_Element="_AZE2oIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AZE2pIGbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_AZE2qIGbEeuPkZNKCcfHxw" base_Element="_AZE2pYGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AZE2qYGbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZE2rIGbEeuPkZNKCcfHxw" base_Element="_AZE2qoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AZE2rYGbEeuPkZNKCcfHxw" base_Element="_AZE2qoGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AZE2roGbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZFdsoGbEeuPkZNKCcfHxw" base_Element="_AZFdsIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Annotations xmi:id="_AZFds4GbEeuPkZNKCcfHxw" base_Element="_AZFdsIGbEeuPkZNKCcfHxw">
    <annotations xmi:id="_AZFdtIGbEeuPkZNKCcfHxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZOAkYGbEeuPkZNKCcfHxw" base_Element="_AZOAkIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZOnooGbEeuPkZNKCcfHxw" base_Element="_AZOnoYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZP1wYGbEeuPkZNKCcfHxw" base_Element="_AZP1wIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZRD5IGbEeuPkZNKCcfHxw" base_Element="_AZRD44GbEeuPkZNKCcfHxw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_AZRD5YGbEeuPkZNKCcfHxw" name="getEvState" isStatic="true" method="_AZpeZYGbEeuPkZNKCcfHxw">
      <ownedParameter xmi:id="_AZRD6IGbEeuPkZNKCcfHxw" type="_AQpTYIGbEeuPkZNKCcfHxw" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_AZRD5oGbEeuPkZNKCcfHxw" name="setEvState" isStatic="true" method="_AZpeZ4GbEeuPkZNKCcfHxw">
      <ownedParameter xmi:id="_AZRD54GbEeuPkZNKCcfHxw" name="evState" type="_AQpTYIGbEeuPkZNKCcfHxw"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZRD6oGbEeuPkZNKCcfHxw" base_Element="_AZRD6YGbEeuPkZNKCcfHxw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_AZRD64GbEeuPkZNKCcfHxw" name="getEvType" isStatic="true" method="_AZpeaYGbEeuPkZNKCcfHxw">
      <ownedParameter xmi:id="_AZRq8oGbEeuPkZNKCcfHxw" type="_AQoFQIGbEeuPkZNKCcfHxw" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_AZRq8IGbEeuPkZNKCcfHxw" name="setEvType" isStatic="true" method="_AZpea4GbEeuPkZNKCcfHxw">
      <ownedParameter xmi:id="_AZRq8YGbEeuPkZNKCcfHxw" name="evType" type="_AQoFQIGbEeuPkZNKCcfHxw"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZRq9IGbEeuPkZNKCcfHxw" base_Element="_AZRq84GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZSSCYGbEeuPkZNKCcfHxw" base_Element="_AZSSCIGbEeuPkZNKCcfHxw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_AZSSCoGbEeuPkZNKCcfHxw" name="getPasswordField" method="_AZpegYGbEeuPkZNKCcfHxw">
      <ownedParameter xmi:id="_AZS5EIGbEeuPkZNKCcfHxw" type="_AYMF14GbEeuPkZNKCcfHxw" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_AZSSC4GbEeuPkZNKCcfHxw" name="setPasswordField" method="_AZpeg4GbEeuPkZNKCcfHxw">
      <ownedParameter xmi:id="_AZSSDIGbEeuPkZNKCcfHxw" name="passwordField" type="_AYMs4YGbEeuPkZNKCcfHxw"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZS5EoGbEeuPkZNKCcfHxw" base_Element="_AZS5EYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZS5FIGbEeuPkZNKCcfHxw" base_Element="_AZS5E4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZS5F4GbEeuPkZNKCcfHxw" base_Element="_AZS5FYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZS5GoGbEeuPkZNKCcfHxw" base_Element="_AZS5GIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZTgIIGbEeuPkZNKCcfHxw" base_Element="_AZS5G4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZTgI4GbEeuPkZNKCcfHxw" base_Element="_AZTgIYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZTgJYGbEeuPkZNKCcfHxw" base_Element="_AZTgJIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZTgJ4GbEeuPkZNKCcfHxw" base_Element="_AZTgJoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZTgKYGbEeuPkZNKCcfHxw" base_Element="_AZTgKIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZTgK4GbEeuPkZNKCcfHxw" base_Element="_AZTgKoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZTgLYGbEeuPkZNKCcfHxw" base_Element="_AZTgLIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZTgL4GbEeuPkZNKCcfHxw" base_Element="_AZTgLoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZUHMYGbEeuPkZNKCcfHxw" base_Element="_AZUHMIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZUHOIGbEeuPkZNKCcfHxw" base_Element="_AZUHN4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZUHOoGbEeuPkZNKCcfHxw" base_Element="_AZUHOYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZUuRIGbEeuPkZNKCcfHxw" base_Element="_AZUuQ4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Array xmi:id="_AZVVZYGbEeuPkZNKCcfHxw" base_Element="_AZVVY4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZV8Z4GbEeuPkZNKCcfHxw" base_Element="_AZV8ZoGbEeuPkZNKCcfHxw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_AZV8aIGbEeuPkZNKCcfHxw" name="getUrl" isStatic="true" method="_AZr6poGbEeuPkZNKCcfHxw">
      <ownedParameter xmi:id="_AZWjcoGbEeuPkZNKCcfHxw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_AZWjcIGbEeuPkZNKCcfHxw" name="setUrl" isStatic="true" method="_AZr6qIGbEeuPkZNKCcfHxw">
      <ownedParameter xmi:id="_AZWjcYGbEeuPkZNKCcfHxw" name="url">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZWjdIGbEeuPkZNKCcfHxw" base_Element="_AZWjc4GbEeuPkZNKCcfHxw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_AZWjdYGbEeuPkZNKCcfHxw" name="getUser" isStatic="true" method="_AZr6qoGbEeuPkZNKCcfHxw">
      <ownedParameter xmi:id="_AZWjeIGbEeuPkZNKCcfHxw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_AZWjdoGbEeuPkZNKCcfHxw" name="setUser" isStatic="true" method="_AZr6rIGbEeuPkZNKCcfHxw">
      <ownedParameter xmi:id="_AZWjd4GbEeuPkZNKCcfHxw" name="user">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZWjeoGbEeuPkZNKCcfHxw" base_Element="_AZWjeYGbEeuPkZNKCcfHxw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_AZWje4GbEeuPkZNKCcfHxw" name="getPassword" isStatic="true" method="_AZr6roGbEeuPkZNKCcfHxw">
      <ownedParameter xmi:id="_AZWjfoGbEeuPkZNKCcfHxw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_AZWjfIGbEeuPkZNKCcfHxw" name="setPassword" isStatic="true" method="_AZr6sIGbEeuPkZNKCcfHxw">
      <ownedParameter xmi:id="_AZWjfYGbEeuPkZNKCcfHxw" name="password">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZXKh4GbEeuPkZNKCcfHxw" base_Element="_AZXKhoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZXKioGbEeuPkZNKCcfHxw" base_Element="_AZXKiIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZXKjIGbEeuPkZNKCcfHxw" base_Element="_AZXKi4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZXxkIGbEeuPkZNKCcfHxw" base_Element="_AZXKjYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZXxkoGbEeuPkZNKCcfHxw" base_Element="_AZXxkYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZXxlIGbEeuPkZNKCcfHxw" base_Element="_AZXxk4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZXxl4GbEeuPkZNKCcfHxw" base_Element="_AZXxlYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZXxmYGbEeuPkZNKCcfHxw" base_Element="_AZXxmIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZXxnIGbEeuPkZNKCcfHxw" base_Element="_AZXxmoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZXxnoGbEeuPkZNKCcfHxw" base_Element="_AZXxnYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZYYooGbEeuPkZNKCcfHxw" base_Element="_AZYYoIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZYYpIGbEeuPkZNKCcfHxw" base_Element="_AZYYo4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZYYpoGbEeuPkZNKCcfHxw" base_Element="_AZYYpYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZYYqIGbEeuPkZNKCcfHxw" base_Element="_AZYYp4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZYYqoGbEeuPkZNKCcfHxw" base_Element="_AZYYqYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZYYrIGbEeuPkZNKCcfHxw" base_Element="_AZYYq4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZYYroGbEeuPkZNKCcfHxw" base_Element="_AZYYrYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZY_sYGbEeuPkZNKCcfHxw" base_Element="_AZY_sIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZY_s4GbEeuPkZNKCcfHxw" base_Element="_AZY_soGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZY_tYGbEeuPkZNKCcfHxw" base_Element="_AZY_tIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZY_t4GbEeuPkZNKCcfHxw" base_Element="_AZY_toGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZY_uYGbEeuPkZNKCcfHxw" base_Element="_AZY_uIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZY_u4GbEeuPkZNKCcfHxw" base_Element="_AZY_uoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZY_vYGbEeuPkZNKCcfHxw" base_Element="_AZY_vIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZZmwYGbEeuPkZNKCcfHxw" base_Element="_AZZmwIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZZmw4GbEeuPkZNKCcfHxw" base_Element="_AZZmwoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Array xmi:id="_AZZmxoGbEeuPkZNKCcfHxw" base_Element="_AZZmxIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZZmx4GbEeuPkZNKCcfHxw" base_Element="_AZZmxIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Array xmi:id="_AZZmyoGbEeuPkZNKCcfHxw" base_Element="_AZZmyIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZZmy4GbEeuPkZNKCcfHxw" base_Element="_AZZmyIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Array xmi:id="_AZZmzoGbEeuPkZNKCcfHxw" base_Element="_AZZmzIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZZmz4GbEeuPkZNKCcfHxw" base_Element="_AZZmzIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZaN0oGbEeuPkZNKCcfHxw" base_Element="_AZZm0IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZaN1oGbEeuPkZNKCcfHxw" base_Element="_AZaN04GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZaN2oGbEeuPkZNKCcfHxw" base_Element="_AZaN14GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZaN3YGbEeuPkZNKCcfHxw" base_Element="_AZaN24GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZaN4IGbEeuPkZNKCcfHxw" base_Element="_AZaN3oGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZa04IGbEeuPkZNKCcfHxw" base_Element="_AZaN4YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZa044GbEeuPkZNKCcfHxw" base_Element="_AZa04YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZa05oGbEeuPkZNKCcfHxw" base_Element="_AZa05IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZbb8YGbEeuPkZNKCcfHxw" base_Element="_AZbb8IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZbb9IGbEeuPkZNKCcfHxw" base_Element="_AZbb8oGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZbb9oGbEeuPkZNKCcfHxw" base_Element="_AZbb9YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZbb-IGbEeuPkZNKCcfHxw" base_Element="_AZbb94GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZbb-oGbEeuPkZNKCcfHxw" base_Element="_AZbb-YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZbb_IGbEeuPkZNKCcfHxw" base_Element="_AZbb-4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZcDAIGbEeuPkZNKCcfHxw" base_Element="_AZbb_YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZcDAoGbEeuPkZNKCcfHxw" base_Element="_AZcDAYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZcDBIGbEeuPkZNKCcfHxw" base_Element="_AZcDA4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZcDBoGbEeuPkZNKCcfHxw" base_Element="_AZcDBYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZcDCIGbEeuPkZNKCcfHxw" base_Element="_AZcDB4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZcDCoGbEeuPkZNKCcfHxw" base_Element="_AZcDCYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZcDDIGbEeuPkZNKCcfHxw" base_Element="_AZcDC4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZcDDoGbEeuPkZNKCcfHxw" base_Element="_AZcDDYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZcqEYGbEeuPkZNKCcfHxw" base_Element="_AZcqEIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZcqE4GbEeuPkZNKCcfHxw" base_Element="_AZcqEoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZcqF4GbEeuPkZNKCcfHxw" base_Element="_AZcqFIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZcqG4GbEeuPkZNKCcfHxw" base_Element="_AZcqGIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZcqH4GbEeuPkZNKCcfHxw" base_Element="_AZcqHIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZdRIIGbEeuPkZNKCcfHxw" base_Element="_AZcqIIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZdRI4GbEeuPkZNKCcfHxw" base_Element="_AZdRIYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZdRJoGbEeuPkZNKCcfHxw" base_Element="_AZdRJIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZd4MIGbEeuPkZNKCcfHxw" base_Element="_AZdRLYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZd4M4GbEeuPkZNKCcfHxw" base_Element="_AZd4MYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZd4NYGbEeuPkZNKCcfHxw" base_Element="_AZd4NIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZd4N4GbEeuPkZNKCcfHxw" base_Element="_AZd4NoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZd4OYGbEeuPkZNKCcfHxw" base_Element="_AZd4OIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZd4O4GbEeuPkZNKCcfHxw" base_Element="_AZd4OoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZd4PYGbEeuPkZNKCcfHxw" base_Element="_AZd4PIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZefQYGbEeuPkZNKCcfHxw" base_Element="_AZefQIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZefQ4GbEeuPkZNKCcfHxw" base_Element="_AZefQoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZefRYGbEeuPkZNKCcfHxw" base_Element="_AZefRIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZefR4GbEeuPkZNKCcfHxw" base_Element="_AZefRoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZefSYGbEeuPkZNKCcfHxw" base_Element="_AZefSIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZefS4GbEeuPkZNKCcfHxw" base_Element="_AZefSoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZefTYGbEeuPkZNKCcfHxw" base_Element="_AZefTIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZfGUIGbEeuPkZNKCcfHxw" base_Element="_AZefToGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Array xmi:id="_AZfGU4GbEeuPkZNKCcfHxw" base_Element="_AZfGUYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZfGVIGbEeuPkZNKCcfHxw" base_Element="_AZfGUYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZfGVoGbEeuPkZNKCcfHxw" base_Element="_AZfGVYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZfGWIGbEeuPkZNKCcfHxw" base_Element="_AZfGV4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZfGWoGbEeuPkZNKCcfHxw" base_Element="_AZfGWYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZfGXIGbEeuPkZNKCcfHxw" base_Element="_AZfGW4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZftYIGbEeuPkZNKCcfHxw" base_Element="_AZfGXYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZftYoGbEeuPkZNKCcfHxw" base_Element="_AZftYYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZftZoGbEeuPkZNKCcfHxw" base_Element="_AZftY4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZftaoGbEeuPkZNKCcfHxw" base_Element="_AZftZ4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZftboGbEeuPkZNKCcfHxw" base_Element="_AZfta4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZftcIGbEeuPkZNKCcfHxw" base_Element="_AZftb4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZgUcoGbEeuPkZNKCcfHxw" base_Element="_AZgUcIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZgUdYGbEeuPkZNKCcfHxw" base_Element="_AZgUc4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZgUeIGbEeuPkZNKCcfHxw" base_Element="_AZgUdoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZgUe4GbEeuPkZNKCcfHxw" base_Element="_AZgUeYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZgUfoGbEeuPkZNKCcfHxw" base_Element="_AZgUfIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZhik4GbEeuPkZNKCcfHxw" base_Element="_AZhikoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Array xmi:id="_AZhiloGbEeuPkZNKCcfHxw" dimensions="0" base_Element="_AZhilIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZiJooGbEeuPkZNKCcfHxw" base_Element="_AZiJoYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AZkl4YGbEeuPkZNKCcfHxw" base_Element="_AZkl4IGbEeuPkZNKCcfHxw"/>
  <uml:OpaqueBehavior xmi:id="_AZpeZYGbEeuPkZNKCcfHxw" name="getEvState" specification="_AZRD5YGbEeuPkZNKCcfHxw">
    <ownedParameter xmi:id="_AZpeZoGbEeuPkZNKCcfHxw" type="_AQpTYIGbEeuPkZNKCcfHxw" direction="return"/>
    <language>java</language>
    <body>return evState;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_AZpeZ4GbEeuPkZNKCcfHxw" name="setEvState" specification="_AZRD5oGbEeuPkZNKCcfHxw">
    <ownedParameter xmi:id="_AZpeaIGbEeuPkZNKCcfHxw" name="evState" type="_AQpTYIGbEeuPkZNKCcfHxw"/>
    <language>java</language>
    <body>TypesStatesContainer.evState = evState;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_AZpeaYGbEeuPkZNKCcfHxw" name="getEvType" specification="_AZRD64GbEeuPkZNKCcfHxw">
    <ownedParameter xmi:id="_AZpeaoGbEeuPkZNKCcfHxw" type="_AQoFQIGbEeuPkZNKCcfHxw" direction="return"/>
    <language>java</language>
    <body>return evType;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_AZpea4GbEeuPkZNKCcfHxw" name="setEvType" specification="_AZRq8IGbEeuPkZNKCcfHxw">
    <ownedParameter xmi:id="_AZpebIGbEeuPkZNKCcfHxw" name="evType" type="_AQoFQIGbEeuPkZNKCcfHxw"/>
    <language>java</language>
    <body>TypesStatesContainer.evType = evType;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_AZpegYGbEeuPkZNKCcfHxw" name="getPasswordField" specification="_AZSSCoGbEeuPkZNKCcfHxw">
    <ownedParameter xmi:id="_AZpegoGbEeuPkZNKCcfHxw" type="_AYMF14GbEeuPkZNKCcfHxw" direction="return"/>
    <language>java</language>
    <body>return passwordField;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_AZpeg4GbEeuPkZNKCcfHxw" name="setPasswordField" specification="_AZSSC4GbEeuPkZNKCcfHxw">
    <ownedParameter xmi:id="_AZpehIGbEeuPkZNKCcfHxw" name="passwordField" type="_AYMs4YGbEeuPkZNKCcfHxw"/>
    <language>java</language>
    <body>this.passwordField = passwordField;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_AZqsn4GbEeuPkZNKCcfHxw" name="getDateTimeReference">
    <ownedParameter xmi:id="_AZqsoIGbEeuPkZNKCcfHxw" type="_AYH0YoGbEeuPkZNKCcfHxw" direction="return"/>
    <language>java</language>
    <body>return dateTimeReference;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_AZqsoYGbEeuPkZNKCcfHxw" name="setDateTimeReference">
    <ownedParameter xmi:id="_AZqsooGbEeuPkZNKCcfHxw" name="dateTimeReference" type="_AYH0YoGbEeuPkZNKCcfHxw"/>
    <language>java</language>
    <body>this.dateTimeReference = dateTimeReference;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_AZr6poGbEeuPkZNKCcfHxw" name="getUrl" specification="_AZV8aIGbEeuPkZNKCcfHxw">
    <ownedParameter xmi:id="_AZr6p4GbEeuPkZNKCcfHxw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return url;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_AZr6qIGbEeuPkZNKCcfHxw" name="setUrl" specification="_AZWjcIGbEeuPkZNKCcfHxw">
    <ownedParameter xmi:id="_AZr6qYGbEeuPkZNKCcfHxw" name="url">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>PersistenceManager.url = url;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_AZr6qoGbEeuPkZNKCcfHxw" name="getUser" specification="_AZWjdYGbEeuPkZNKCcfHxw">
    <ownedParameter xmi:id="_AZr6q4GbEeuPkZNKCcfHxw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return user;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_AZr6rIGbEeuPkZNKCcfHxw" name="setUser" specification="_AZWjdoGbEeuPkZNKCcfHxw">
    <ownedParameter xmi:id="_AZr6rYGbEeuPkZNKCcfHxw" name="user">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>PersistenceManager.user = user;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_AZr6roGbEeuPkZNKCcfHxw" name="getPassword" specification="_AZWje4GbEeuPkZNKCcfHxw">
    <ownedParameter xmi:id="_AZr6r4GbEeuPkZNKCcfHxw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return password;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_AZr6sIGbEeuPkZNKCcfHxw" name="setPassword" specification="_AZWjfIGbEeuPkZNKCcfHxw">
    <ownedParameter xmi:id="_AZr6sYGbEeuPkZNKCcfHxw" name="password">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>PersistenceManager.password = password;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_AZ-OgoGbEeuPkZNKCcfHxw" base_Element="_AZ-OgIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AZ-OhYGbEeuPkZNKCcfHxw" base_Element="_AZ-Og4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AZ-1kIGbEeuPkZNKCcfHxw" base_Element="_AZ-OhoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AZ-1k4GbEeuPkZNKCcfHxw" base_Element="_AZ-1kYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AZ-1loGbEeuPkZNKCcfHxw" base_Element="_AZ-1lIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AZ-1mYGbEeuPkZNKCcfHxw" base_Element="_AZ-1l4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AZ_coIGbEeuPkZNKCcfHxw" base_Element="_AZ-1moGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AZ_co4GbEeuPkZNKCcfHxw" base_Element="_AZ_coYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AZ_cpoGbEeuPkZNKCcfHxw" base_Element="_AZ_cpIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AZ_cqYGbEeuPkZNKCcfHxw" base_Element="_AZ_cp4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AZ_crIGbEeuPkZNKCcfHxw" base_Element="_AZ_cqoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaADsIGbEeuPkZNKCcfHxw" base_Element="_AZ_crYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaADs4GbEeuPkZNKCcfHxw" base_Element="_AaADsYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaADtoGbEeuPkZNKCcfHxw" base_Element="_AaADtIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaADuYGbEeuPkZNKCcfHxw" base_Element="_AaADt4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaADvIGbEeuPkZNKCcfHxw" base_Element="_AaADuoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaAqwIGbEeuPkZNKCcfHxw" base_Element="_AaADvYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaAqw4GbEeuPkZNKCcfHxw" base_Element="_AaAqwYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaAqxoGbEeuPkZNKCcfHxw" base_Element="_AaAqxIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaAqyYGbEeuPkZNKCcfHxw" base_Element="_AaAqx4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaBR0IGbEeuPkZNKCcfHxw" base_Element="_AaAqyoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaBR04GbEeuPkZNKCcfHxw" base_Element="_AaBR0YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaBR1oGbEeuPkZNKCcfHxw" base_Element="_AaBR1IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaBR2YGbEeuPkZNKCcfHxw" base_Element="_AaBR14GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaBR3IGbEeuPkZNKCcfHxw" base_Element="_AaBR2oGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaB44IGbEeuPkZNKCcfHxw" base_Element="_AaBR3YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaB444GbEeuPkZNKCcfHxw" base_Element="_AaB44YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaB45oGbEeuPkZNKCcfHxw" base_Element="_AaB45IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaB46YGbEeuPkZNKCcfHxw" base_Element="_AaB454GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaB47IGbEeuPkZNKCcfHxw" base_Element="_AaB46oGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaCf8oGbEeuPkZNKCcfHxw" base_Element="_AaCf8IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaCf9YGbEeuPkZNKCcfHxw" base_Element="_AaCf84GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaCf-4GbEeuPkZNKCcfHxw" base_Element="_AaCf-YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaDHAIGbEeuPkZNKCcfHxw" base_Element="_AaCf_IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaDHA4GbEeuPkZNKCcfHxw" base_Element="_AaDHAYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaDHBoGbEeuPkZNKCcfHxw" base_Element="_AaDHBIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaDHCYGbEeuPkZNKCcfHxw" base_Element="_AaDHB4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaDHDIGbEeuPkZNKCcfHxw" base_Element="_AaDHCoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaDuEIGbEeuPkZNKCcfHxw" base_Element="_AaDHDYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaDuE4GbEeuPkZNKCcfHxw" base_Element="_AaDuEYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaDuFoGbEeuPkZNKCcfHxw" base_Element="_AaDuFIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaDuGYGbEeuPkZNKCcfHxw" base_Element="_AaDuF4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaEVIIGbEeuPkZNKCcfHxw" base_Element="_AaDuGoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaEVI4GbEeuPkZNKCcfHxw" base_Element="_AaEVIYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaEVJoGbEeuPkZNKCcfHxw" base_Element="_AaEVJIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaEVKYGbEeuPkZNKCcfHxw" base_Element="_AaEVJ4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaEVLIGbEeuPkZNKCcfHxw" base_Element="_AaEVKoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaE8MoGbEeuPkZNKCcfHxw" base_Element="_AaE8MIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaE8NYGbEeuPkZNKCcfHxw" base_Element="_AaE8M4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaE8OIGbEeuPkZNKCcfHxw" base_Element="_AaE8NoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaE8O4GbEeuPkZNKCcfHxw" base_Element="_AaE8OYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaFjQIGbEeuPkZNKCcfHxw" base_Element="_AaE8PIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaFjQ4GbEeuPkZNKCcfHxw" base_Element="_AaFjQYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaFjRoGbEeuPkZNKCcfHxw" base_Element="_AaFjRIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaFjSYGbEeuPkZNKCcfHxw" base_Element="_AaFjR4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaFjTIGbEeuPkZNKCcfHxw" base_Element="_AaFjSoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaGKUoGbEeuPkZNKCcfHxw" base_Element="_AaGKUIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaGKVYGbEeuPkZNKCcfHxw" base_Element="_AaGKU4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaGKWIGbEeuPkZNKCcfHxw" base_Element="_AaGKVoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaGKW4GbEeuPkZNKCcfHxw" base_Element="_AaGKWYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaGxYIGbEeuPkZNKCcfHxw" base_Element="_AaGKXIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaGxY4GbEeuPkZNKCcfHxw" base_Element="_AaGxYYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaGxZoGbEeuPkZNKCcfHxw" base_Element="_AaGxZIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaGxaYGbEeuPkZNKCcfHxw" base_Element="_AaGxZ4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaGxbIGbEeuPkZNKCcfHxw" base_Element="_AaGxaoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaHYcIGbEeuPkZNKCcfHxw" base_Element="_AaGxbYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaHYc4GbEeuPkZNKCcfHxw" base_Element="_AaHYcYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaHYdoGbEeuPkZNKCcfHxw" base_Element="_AaHYdIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaHYeYGbEeuPkZNKCcfHxw" base_Element="_AaHYd4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaH_gIGbEeuPkZNKCcfHxw" base_Element="_AaHYeoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaH_g4GbEeuPkZNKCcfHxw" base_Element="_AaH_gYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaH_hoGbEeuPkZNKCcfHxw" base_Element="_AaH_hIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaH_iYGbEeuPkZNKCcfHxw" base_Element="_AaH_h4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaH_jIGbEeuPkZNKCcfHxw" base_Element="_AaH_ioGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaImkIGbEeuPkZNKCcfHxw" base_Element="_AaH_jYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaImk4GbEeuPkZNKCcfHxw" base_Element="_AaImkYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaImloGbEeuPkZNKCcfHxw" base_Element="_AaImlIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaImmYGbEeuPkZNKCcfHxw" base_Element="_AaIml4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaJNoIGbEeuPkZNKCcfHxw" base_Element="_AaImmoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaJNo4GbEeuPkZNKCcfHxw" base_Element="_AaJNoYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaJNpoGbEeuPkZNKCcfHxw" base_Element="_AaJNpIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaJNqYGbEeuPkZNKCcfHxw" base_Element="_AaJNp4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaJ0sIGbEeuPkZNKCcfHxw" base_Element="_AaJNqoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaJ0s4GbEeuPkZNKCcfHxw" base_Element="_AaJ0sYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaJ0toGbEeuPkZNKCcfHxw" base_Element="_AaJ0tIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaJ0uYGbEeuPkZNKCcfHxw" base_Element="_AaJ0t4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaJ0vIGbEeuPkZNKCcfHxw" base_Element="_AaJ0uoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaKbwIGbEeuPkZNKCcfHxw" base_Element="_AaJ0vYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaKbw4GbEeuPkZNKCcfHxw" base_Element="_AaKbwYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaKbxoGbEeuPkZNKCcfHxw" base_Element="_AaKbxIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaKbyYGbEeuPkZNKCcfHxw" base_Element="_AaKbx4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaLC0IGbEeuPkZNKCcfHxw" base_Element="_AaKbyoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaLC04GbEeuPkZNKCcfHxw" base_Element="_AaLC0YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaLC1oGbEeuPkZNKCcfHxw" base_Element="_AaLC1IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaLC2YGbEeuPkZNKCcfHxw" base_Element="_AaLC14GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaLC3IGbEeuPkZNKCcfHxw" base_Element="_AaLC2oGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaLp4oGbEeuPkZNKCcfHxw" base_Element="_AaLp4IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaLp5YGbEeuPkZNKCcfHxw" base_Element="_AaLp44GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaLp6IGbEeuPkZNKCcfHxw" base_Element="_AaLp5oGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaLp64GbEeuPkZNKCcfHxw" base_Element="_AaLp6YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaMQ8IGbEeuPkZNKCcfHxw" base_Element="_AaLp7IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaMQ84GbEeuPkZNKCcfHxw" base_Element="_AaMQ8YGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaMQ9oGbEeuPkZNKCcfHxw" base_Element="_AaMQ9IGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaMQ-YGbEeuPkZNKCcfHxw" base_Element="_AaMQ94GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaM4AIGbEeuPkZNKCcfHxw" base_Element="_AaMQ-oGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaM4A4GbEeuPkZNKCcfHxw" base_Element="_AaM4AYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaM4BoGbEeuPkZNKCcfHxw" base_Element="_AaM4BIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaM4CYGbEeuPkZNKCcfHxw" base_Element="_AaM4B4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaM4DIGbEeuPkZNKCcfHxw" base_Element="_AaM4CoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaNfEIGbEeuPkZNKCcfHxw" base_Element="_AaM4DYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaNfE4GbEeuPkZNKCcfHxw" base_Element="_AaNfEYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaNfFoGbEeuPkZNKCcfHxw" base_Element="_AaNfFIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaNfGYGbEeuPkZNKCcfHxw" base_Element="_AaNfF4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaNfHIGbEeuPkZNKCcfHxw" base_Element="_AaNfGoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaOGIoGbEeuPkZNKCcfHxw" base_Element="_AaOGIIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaOGJYGbEeuPkZNKCcfHxw" base_Element="_AaOGI4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaOGKIGbEeuPkZNKCcfHxw" base_Element="_AaOGJoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaOGK4GbEeuPkZNKCcfHxw" base_Element="_AaOGKYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaOtMIGbEeuPkZNKCcfHxw" base_Element="_AaOGLIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaOtM4GbEeuPkZNKCcfHxw" base_Element="_AaOtMYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaOtNoGbEeuPkZNKCcfHxw" base_Element="_AaOtNIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaOtOYGbEeuPkZNKCcfHxw" base_Element="_AaOtN4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaOtPIGbEeuPkZNKCcfHxw" base_Element="_AaOtOoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaPUQIGbEeuPkZNKCcfHxw" base_Element="_AaOtPYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Reference xmi:id="_AaPUQ4GbEeuPkZNKCcfHxw" base_Element="_AaPUQYGbEeuPkZNKCcfHxw"/>
  <uml:OpaqueBehavior xmi:id="_yHpR8IJWEeuLTI0MOKBvew" name="getDateTimeReference">
    <ownedParameter xmi:id="_yHpR8YJWEeuLTI0MOKBvew" type="_AYH0YoGbEeuPkZNKCcfHxw" direction="return"/>
    <language>java</language>
    <body>return dateTimeReference;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_yHpR8oJWEeuLTI0MOKBvew" name="setDateTimeReference">
    <ownedParameter xmi:id="_yHpR84JWEeuLTI0MOKBvew" name="dateTimeReference" type="_AYH0YoGbEeuPkZNKCcfHxw"/>
    <language>java</language>
    <body>this.dateTimeReference = dateTimeReference;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:StyledElement xmi:id="_8EdgYYJWEeuLTI0MOKBvew" base_Element="_AQp6foGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:Array xmi:id="_eHjyUIJXEeuLTI0MOKBvew" base_Element="_AY4pYoGbEeuPkZNKCcfHxw"/>
  <uml:OpaqueBehavior xmi:id="_eHqgAIJXEeuLTI0MOKBvew" name="getDateTimeReference">
    <ownedParameter xmi:id="_eHqgAYJXEeuLTI0MOKBvew" type="_AYH0YoGbEeuPkZNKCcfHxw" direction="return"/>
    <language>java</language>
    <body>return dateTimeReference;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_eHqgAoJXEeuLTI0MOKBvew" name="setDateTimeReference">
    <ownedParameter xmi:id="_eHqgA4JXEeuLTI0MOKBvew" name="dateTimeReference" type="_AYH0YoGbEeuPkZNKCcfHxw"/>
    <language>java</language>
    <body>this.dateTimeReference = dateTimeReference;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:StyledElement xmi:id="_1Js4QIJXEeuLTI0MOKBvew" base_Element="_AZV8Y4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_1Js4QYJXEeuLTI0MOKBvew" base_Element="_AZUuRYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_1Js4QoJXEeuLTI0MOKBvew" base_Element="_AZUuRoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_1Js4Q4JXEeuLTI0MOKBvew" base_Element="_AZUuSIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_1Js4RIJXEeuLTI0MOKBvew" base_Element="_AZUuSYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_1JtfUIJXEeuLTI0MOKBvew" base_Element="_AZUuSoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_1JtfUYJXEeuLTI0MOKBvew" base_Element="_AZUuS4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_1JtfUoJXEeuLTI0MOKBvew" base_Element="_AZVVUIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_1JtfU4JXEeuLTI0MOKBvew" base_Element="_AZVVWIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_1JtfVIJXEeuLTI0MOKBvew" base_Element="_AZVVXoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_1JtfVYJXEeuLTI0MOKBvew" base_Element="_AZVVY4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_1JtfVoJXEeuLTI0MOKBvew" base_Element="_AZV8YYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_2MRIgIJXEeuLTI0MOKBvew" base_Element="_AQqhgIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_dvLSEIJYEeuLTI0MOKBvew" base_Element="_AQrIkYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cAnMkIJaEeuLTI0MOKBvew" base_Element="_AYSzh4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_xR2jUIJfEeuLTI0MOKBvew" base_Element="_AZhilIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_xR2jUYJfEeuLTI0MOKBvew" base_Element="_AZEPmoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_xR3KYIJfEeuLTI0MOKBvew" base_Element="_AZEPoYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_xR3KYYJfEeuLTI0MOKBvew" base_Element="_AZE2pYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_zGXN4IJfEeuLTI0MOKBvew" base_Element="_ARAfwIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_MHjywIJmEeuLTI0MOKBvew" base_Element="_AQY0vYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_w0Dv4IJmEeuLTI0MOKBvew" base_Element="_AZjXw4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_w0Dv4YJmEeuLTI0MOKBvew" base_Element="_AZjXwIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_w0Dv4oJmEeuLTI0MOKBvew" base_Element="_AZiwvYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_w0Dv44JmEeuLTI0MOKBvew" base_Element="_AZiwu4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_w0EW8IJmEeuLTI0MOKBvew" base_Element="_AZiwuoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_w0EW8YJmEeuLTI0MOKBvew" base_Element="_AZiwuYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_w0EW8oJmEeuLTI0MOKBvew" base_Element="_AZiwuIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_w0EW84JmEeuLTI0MOKBvew" base_Element="_AZiwt4GbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_w0EW9IJmEeuLTI0MOKBvew" base_Element="_AZiwtoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_w0EW9YJmEeuLTI0MOKBvew" base_Element="_AZiwtYGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_w0EW9oJmEeuLTI0MOKBvew" base_Element="_AZiwtIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_w0EW94JmEeuLTI0MOKBvew" base_Element="_AZiwsoGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_w0EW-IJmEeuLTI0MOKBvew" base_Element="_AZiwsIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_xNBCcIJmEeuLTI0MOKBvew" base_Element="_ARExMIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_xtddEIJmEeuLTI0MOKBvew" base_Element="_AQYNqIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_3-JYAIJmEeuLTI0MOKBvew" base_Element="_ARF_UIGbEeuPkZNKCcfHxw"/>
  <UMLLabProfile:StyledElement xmi:id="_V9agwIJqEeuLTI0MOKBvew" base_Element="_ARCU8IGbEeuPkZNKCcfHxw"/>
</xmi:XMI>
